
15_InputInterrupt.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001344  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000048  080014e4  080014e4  000114e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800152c  0800152c  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  0800152c  0800152c  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800152c  0800152c  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800152c  0800152c  0001152c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001530  08001530  00011530  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  08001534  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  08001590  0002005c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  08001590  000201c8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000176d  00000000  00000000  000200cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000006eb  00000000  00000000  0002183c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000198  00000000  00000000  00021f28  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000116  00000000  00000000  000220c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001fe6  00000000  00000000  000221d6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001fdf  00000000  00000000  000241bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00055812  00000000  00000000  0002619b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000c64  00000000  00000000  0007b9b0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000080  00000000  00000000  0007c614  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	2000005c 	.word	0x2000005c
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080014cc 	.word	0x080014cc

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000060 	.word	0x20000060
 80001dc:	080014cc 	.word	0x080014cc

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000280:	b480      	push	{r7}
 8000282:	b083      	sub	sp, #12
 8000284:	af00      	add	r7, sp, #0
 8000286:	4603      	mov	r3, r0
 8000288:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800028a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800028e:	2b00      	cmp	r3, #0
 8000290:	db0b      	blt.n	80002aa <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000292:	79fb      	ldrb	r3, [r7, #7]
 8000294:	f003 021f 	and.w	r2, r3, #31
 8000298:	4907      	ldr	r1, [pc, #28]	; (80002b8 <__NVIC_EnableIRQ+0x38>)
 800029a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800029e:	095b      	lsrs	r3, r3, #5
 80002a0:	2001      	movs	r0, #1
 80002a2:	fa00 f202 	lsl.w	r2, r0, r2
 80002a6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 80002aa:	bf00      	nop
 80002ac:	370c      	adds	r7, #12
 80002ae:	46bd      	mov	sp, r7
 80002b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002b4:	4770      	bx	lr
 80002b6:	bf00      	nop
 80002b8:	e000e100 	.word	0xe000e100

080002bc <pc13_exti_init>:
#define GPIOCEN			(1U<<2)
#define SYSCFGEN		(1U<<14)


void pc13_exti_init(void)
{
 80002bc:	b580      	push	{r7, lr}
 80002be:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80002c0:	b672      	cpsid	i
}
 80002c2:	bf00      	nop
	/*Disable Global Interrupt*/
	__disable_irq();
	/*Enable clock access to GPIOC*/
	RCC->AHB1ENR |= GPIOCEN;
 80002c4:	4b18      	ldr	r3, [pc, #96]	; (8000328 <pc13_exti_init+0x6c>)
 80002c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002c8:	4a17      	ldr	r2, [pc, #92]	; (8000328 <pc13_exti_init+0x6c>)
 80002ca:	f043 0304 	orr.w	r3, r3, #4
 80002ce:	6313      	str	r3, [r2, #48]	; 0x30

	/*Enable clock access to SYSCFG*/
	RCC->APB2ENR |= SYSCFGEN;
 80002d0:	4b15      	ldr	r3, [pc, #84]	; (8000328 <pc13_exti_init+0x6c>)
 80002d2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80002d4:	4a14      	ldr	r2, [pc, #80]	; (8000328 <pc13_exti_init+0x6c>)
 80002d6:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80002da:	6453      	str	r3, [r2, #68]	; 0x44

	/*Set PC13 as Input pin*/
	GPIOC->MODER &=~ (1U<<26);
 80002dc:	4b13      	ldr	r3, [pc, #76]	; (800032c <pc13_exti_init+0x70>)
 80002de:	681b      	ldr	r3, [r3, #0]
 80002e0:	4a12      	ldr	r2, [pc, #72]	; (800032c <pc13_exti_init+0x70>)
 80002e2:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 80002e6:	6013      	str	r3, [r2, #0]
	GPIOC->MODER &=~ (1U<<27);
 80002e8:	4b10      	ldr	r3, [pc, #64]	; (800032c <pc13_exti_init+0x70>)
 80002ea:	681b      	ldr	r3, [r3, #0]
 80002ec:	4a0f      	ldr	r2, [pc, #60]	; (800032c <pc13_exti_init+0x70>)
 80002ee:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 80002f2:	6013      	str	r3, [r2, #0]

	/*Select PORTC for EXTI13*/
	SYSCFG->EXTICR[3] |= (1U<<5);
 80002f4:	4b0e      	ldr	r3, [pc, #56]	; (8000330 <pc13_exti_init+0x74>)
 80002f6:	695b      	ldr	r3, [r3, #20]
 80002f8:	4a0d      	ldr	r2, [pc, #52]	; (8000330 <pc13_exti_init+0x74>)
 80002fa:	f043 0320 	orr.w	r3, r3, #32
 80002fe:	6153      	str	r3, [r2, #20]

	/*Unmask EXTI13*/
	EXTI->IMR |= (1U<<13);
 8000300:	4b0c      	ldr	r3, [pc, #48]	; (8000334 <pc13_exti_init+0x78>)
 8000302:	681b      	ldr	r3, [r3, #0]
 8000304:	4a0b      	ldr	r2, [pc, #44]	; (8000334 <pc13_exti_init+0x78>)
 8000306:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800030a:	6013      	str	r3, [r2, #0]

	/*Select falling edge trigger*/
	EXTI->FTSR |= (1U<<13);
 800030c:	4b09      	ldr	r3, [pc, #36]	; (8000334 <pc13_exti_init+0x78>)
 800030e:	68db      	ldr	r3, [r3, #12]
 8000310:	4a08      	ldr	r2, [pc, #32]	; (8000334 <pc13_exti_init+0x78>)
 8000312:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000316:	60d3      	str	r3, [r2, #12]

	/*Enable EXTI13 in NVIC*/
	NVIC_EnableIRQ(EXTI15_10_IRQn);
 8000318:	2028      	movs	r0, #40	; 0x28
 800031a:	f7ff ffb1 	bl	8000280 <__NVIC_EnableIRQ>
  __ASM volatile ("cpsie i" : : : "memory");
 800031e:	b662      	cpsie	i
}
 8000320:	bf00      	nop
	/*Enable Global Interrupt*/
	__enable_irq();
}
 8000322:	bf00      	nop
 8000324:	bd80      	pop	{r7, pc}
 8000326:	bf00      	nop
 8000328:	40023800 	.word	0x40023800
 800032c:	40020800 	.word	0x40020800
 8000330:	40013800 	.word	0x40013800
 8000334:	40013c00 	.word	0x40013c00

08000338 <main>:
#define LED			PIN5

static void exti_callback(void);

int main(void)
{
 8000338:	b580      	push	{r7, lr}
 800033a:	af00      	add	r7, sp, #0
			RCC->AHB1ENR |=GPIOAEN;
 800033c:	4b0b      	ldr	r3, [pc, #44]	; (800036c <main+0x34>)
 800033e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000340:	4a0a      	ldr	r2, [pc, #40]	; (800036c <main+0x34>)
 8000342:	f043 0301 	orr.w	r3, r3, #1
 8000346:	6313      	str	r3, [r2, #48]	; 0x30

			GPIOA->MODER |= (1U<<10);
 8000348:	4b09      	ldr	r3, [pc, #36]	; (8000370 <main+0x38>)
 800034a:	681b      	ldr	r3, [r3, #0]
 800034c:	4a08      	ldr	r2, [pc, #32]	; (8000370 <main+0x38>)
 800034e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000352:	6013      	str	r3, [r2, #0]
			GPIOA->MODER &=~ (1U<<11);
 8000354:	4b06      	ldr	r3, [pc, #24]	; (8000370 <main+0x38>)
 8000356:	681b      	ldr	r3, [r3, #0]
 8000358:	4a05      	ldr	r2, [pc, #20]	; (8000370 <main+0x38>)
 800035a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800035e:	6013      	str	r3, [r2, #0]

			pc13_exti_init();
 8000360:	f7ff ffac 	bl	80002bc <pc13_exti_init>
			uart2_tx_init();
 8000364:	f000 f8dc 	bl	8000520 <uart2_tx_init>

	while(1)
 8000368:	e7fe      	b.n	8000368 <main+0x30>
 800036a:	bf00      	nop
 800036c:	40023800 	.word	0x40023800
 8000370:	40020000 	.word	0x40020000

08000374 <exti_callback>:

	}
}

static void exti_callback(void)
{
 8000374:	b580      	push	{r7, lr}
 8000376:	af00      	add	r7, sp, #0
	printf("BTN Pressed......\n\r");
 8000378:	4805      	ldr	r0, [pc, #20]	; (8000390 <exti_callback+0x1c>)
 800037a:	f000 fa35 	bl	80007e8 <iprintf>
	GPIOA->ODR ^= LED;
 800037e:	4b05      	ldr	r3, [pc, #20]	; (8000394 <exti_callback+0x20>)
 8000380:	695b      	ldr	r3, [r3, #20]
 8000382:	4a04      	ldr	r2, [pc, #16]	; (8000394 <exti_callback+0x20>)
 8000384:	f083 0320 	eor.w	r3, r3, #32
 8000388:	6153      	str	r3, [r2, #20]
}
 800038a:	bf00      	nop
 800038c:	bd80      	pop	{r7, pc}
 800038e:	bf00      	nop
 8000390:	080014e4 	.word	0x080014e4
 8000394:	40020000 	.word	0x40020000

08000398 <EXTI15_10_IRQHandler>:


void EXTI15_10_IRQHandler(void)
{
 8000398:	b580      	push	{r7, lr}
 800039a:	af00      	add	r7, sp, #0
	if((EXTI->PR & LINE13)!=0)
 800039c:	4b07      	ldr	r3, [pc, #28]	; (80003bc <EXTI15_10_IRQHandler+0x24>)
 800039e:	695b      	ldr	r3, [r3, #20]
 80003a0:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 80003a4:	2b00      	cmp	r3, #0
 80003a6:	d007      	beq.n	80003b8 <EXTI15_10_IRQHandler+0x20>
	{
		/*Clear the PR flag*/
		EXTI->PR |= LINE13;
 80003a8:	4b04      	ldr	r3, [pc, #16]	; (80003bc <EXTI15_10_IRQHandler+0x24>)
 80003aa:	695b      	ldr	r3, [r3, #20]
 80003ac:	4a03      	ldr	r2, [pc, #12]	; (80003bc <EXTI15_10_IRQHandler+0x24>)
 80003ae:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80003b2:	6153      	str	r3, [r2, #20]

		exti_callback();
 80003b4:	f7ff ffde 	bl	8000374 <exti_callback>
	}
}
 80003b8:	bf00      	nop
 80003ba:	bd80      	pop	{r7, pc}
 80003bc:	40013c00 	.word	0x40013c00

080003c0 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003c0:	b580      	push	{r7, lr}
 80003c2:	b086      	sub	sp, #24
 80003c4:	af00      	add	r7, sp, #0
 80003c6:	60f8      	str	r0, [r7, #12]
 80003c8:	60b9      	str	r1, [r7, #8]
 80003ca:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003cc:	2300      	movs	r3, #0
 80003ce:	617b      	str	r3, [r7, #20]
 80003d0:	e00a      	b.n	80003e8 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80003d2:	f3af 8000 	nop.w
 80003d6:	4601      	mov	r1, r0
 80003d8:	68bb      	ldr	r3, [r7, #8]
 80003da:	1c5a      	adds	r2, r3, #1
 80003dc:	60ba      	str	r2, [r7, #8]
 80003de:	b2ca      	uxtb	r2, r1
 80003e0:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003e2:	697b      	ldr	r3, [r7, #20]
 80003e4:	3301      	adds	r3, #1
 80003e6:	617b      	str	r3, [r7, #20]
 80003e8:	697a      	ldr	r2, [r7, #20]
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	429a      	cmp	r2, r3
 80003ee:	dbf0      	blt.n	80003d2 <_read+0x12>
  }

  return len;
 80003f0:	687b      	ldr	r3, [r7, #4]
}
 80003f2:	4618      	mov	r0, r3
 80003f4:	3718      	adds	r7, #24
 80003f6:	46bd      	mov	sp, r7
 80003f8:	bd80      	pop	{r7, pc}

080003fa <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80003fa:	b580      	push	{r7, lr}
 80003fc:	b086      	sub	sp, #24
 80003fe:	af00      	add	r7, sp, #0
 8000400:	60f8      	str	r0, [r7, #12]
 8000402:	60b9      	str	r1, [r7, #8]
 8000404:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000406:	2300      	movs	r3, #0
 8000408:	617b      	str	r3, [r7, #20]
 800040a:	e009      	b.n	8000420 <_write+0x26>
  {
    __io_putchar(*ptr++);
 800040c:	68bb      	ldr	r3, [r7, #8]
 800040e:	1c5a      	adds	r2, r3, #1
 8000410:	60ba      	str	r2, [r7, #8]
 8000412:	781b      	ldrb	r3, [r3, #0]
 8000414:	4618      	mov	r0, r3
 8000416:	f000 f877 	bl	8000508 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800041a:	697b      	ldr	r3, [r7, #20]
 800041c:	3301      	adds	r3, #1
 800041e:	617b      	str	r3, [r7, #20]
 8000420:	697a      	ldr	r2, [r7, #20]
 8000422:	687b      	ldr	r3, [r7, #4]
 8000424:	429a      	cmp	r2, r3
 8000426:	dbf1      	blt.n	800040c <_write+0x12>
  }
  return len;
 8000428:	687b      	ldr	r3, [r7, #4]
}
 800042a:	4618      	mov	r0, r3
 800042c:	3718      	adds	r7, #24
 800042e:	46bd      	mov	sp, r7
 8000430:	bd80      	pop	{r7, pc}

08000432 <_close>:

int _close(int file)
{
 8000432:	b480      	push	{r7}
 8000434:	b083      	sub	sp, #12
 8000436:	af00      	add	r7, sp, #0
 8000438:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800043a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 800043e:	4618      	mov	r0, r3
 8000440:	370c      	adds	r7, #12
 8000442:	46bd      	mov	sp, r7
 8000444:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000448:	4770      	bx	lr

0800044a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800044a:	b480      	push	{r7}
 800044c:	b083      	sub	sp, #12
 800044e:	af00      	add	r7, sp, #0
 8000450:	6078      	str	r0, [r7, #4]
 8000452:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000454:	683b      	ldr	r3, [r7, #0]
 8000456:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800045a:	605a      	str	r2, [r3, #4]
  return 0;
 800045c:	2300      	movs	r3, #0
}
 800045e:	4618      	mov	r0, r3
 8000460:	370c      	adds	r7, #12
 8000462:	46bd      	mov	sp, r7
 8000464:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000468:	4770      	bx	lr

0800046a <_isatty>:

int _isatty(int file)
{
 800046a:	b480      	push	{r7}
 800046c:	b083      	sub	sp, #12
 800046e:	af00      	add	r7, sp, #0
 8000470:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000472:	2301      	movs	r3, #1
}
 8000474:	4618      	mov	r0, r3
 8000476:	370c      	adds	r7, #12
 8000478:	46bd      	mov	sp, r7
 800047a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800047e:	4770      	bx	lr

08000480 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000480:	b480      	push	{r7}
 8000482:	b085      	sub	sp, #20
 8000484:	af00      	add	r7, sp, #0
 8000486:	60f8      	str	r0, [r7, #12]
 8000488:	60b9      	str	r1, [r7, #8]
 800048a:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800048c:	2300      	movs	r3, #0
}
 800048e:	4618      	mov	r0, r3
 8000490:	3714      	adds	r7, #20
 8000492:	46bd      	mov	sp, r7
 8000494:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000498:	4770      	bx	lr
	...

0800049c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800049c:	b580      	push	{r7, lr}
 800049e:	b086      	sub	sp, #24
 80004a0:	af00      	add	r7, sp, #0
 80004a2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004a4:	4a14      	ldr	r2, [pc, #80]	; (80004f8 <_sbrk+0x5c>)
 80004a6:	4b15      	ldr	r3, [pc, #84]	; (80004fc <_sbrk+0x60>)
 80004a8:	1ad3      	subs	r3, r2, r3
 80004aa:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004ac:	697b      	ldr	r3, [r7, #20]
 80004ae:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004b0:	4b13      	ldr	r3, [pc, #76]	; (8000500 <_sbrk+0x64>)
 80004b2:	681b      	ldr	r3, [r3, #0]
 80004b4:	2b00      	cmp	r3, #0
 80004b6:	d102      	bne.n	80004be <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004b8:	4b11      	ldr	r3, [pc, #68]	; (8000500 <_sbrk+0x64>)
 80004ba:	4a12      	ldr	r2, [pc, #72]	; (8000504 <_sbrk+0x68>)
 80004bc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004be:	4b10      	ldr	r3, [pc, #64]	; (8000500 <_sbrk+0x64>)
 80004c0:	681a      	ldr	r2, [r3, #0]
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	4413      	add	r3, r2
 80004c6:	693a      	ldr	r2, [r7, #16]
 80004c8:	429a      	cmp	r2, r3
 80004ca:	d207      	bcs.n	80004dc <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004cc:	f000 f9a6 	bl	800081c <__errno>
 80004d0:	4603      	mov	r3, r0
 80004d2:	220c      	movs	r2, #12
 80004d4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80004d6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80004da:	e009      	b.n	80004f0 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004dc:	4b08      	ldr	r3, [pc, #32]	; (8000500 <_sbrk+0x64>)
 80004de:	681b      	ldr	r3, [r3, #0]
 80004e0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004e2:	4b07      	ldr	r3, [pc, #28]	; (8000500 <_sbrk+0x64>)
 80004e4:	681a      	ldr	r2, [r3, #0]
 80004e6:	687b      	ldr	r3, [r7, #4]
 80004e8:	4413      	add	r3, r2
 80004ea:	4a05      	ldr	r2, [pc, #20]	; (8000500 <_sbrk+0x64>)
 80004ec:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80004ee:	68fb      	ldr	r3, [r7, #12]
}
 80004f0:	4618      	mov	r0, r3
 80004f2:	3718      	adds	r7, #24
 80004f4:	46bd      	mov	sp, r7
 80004f6:	bd80      	pop	{r7, pc}
 80004f8:	20020000 	.word	0x20020000
 80004fc:	00000400 	.word	0x00000400
 8000500:	20000078 	.word	0x20000078
 8000504:	200001c8 	.word	0x200001c8

08000508 <__io_putchar>:


void uart2_write(int ch);

int __io_putchar(int ch)
{
 8000508:	b580      	push	{r7, lr}
 800050a:	b082      	sub	sp, #8
 800050c:	af00      	add	r7, sp, #0
 800050e:	6078      	str	r0, [r7, #4]

	uart2_write(ch);
 8000510:	6878      	ldr	r0, [r7, #4]
 8000512:	f000 f851 	bl	80005b8 <uart2_write>
	return(ch);
 8000516:	687b      	ldr	r3, [r7, #4]
}
 8000518:	4618      	mov	r0, r3
 800051a:	3708      	adds	r7, #8
 800051c:	46bd      	mov	sp, r7
 800051e:	bd80      	pop	{r7, pc}

08000520 <uart2_tx_init>:
			USART2->CR1 |= CR1_UE;

}

void uart2_tx_init(void)
{
 8000520:	b580      	push	{r7, lr}
 8000522:	af00      	add	r7, sp, #0
	/****************Configure UART GPIO*********************/
	/*Enable Clock access to GPIOA*/

	RCC->AHB1ENR |= GPIOAEN;
 8000524:	4b20      	ldr	r3, [pc, #128]	; (80005a8 <uart2_tx_init+0x88>)
 8000526:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000528:	4a1f      	ldr	r2, [pc, #124]	; (80005a8 <uart2_tx_init+0x88>)
 800052a:	f043 0301 	orr.w	r3, r3, #1
 800052e:	6313      	str	r3, [r2, #48]	; 0x30

			/*Set PA2 mode to alternate function mode*/

			GPIOA->MODER &=~ (1U<<4);
 8000530:	4b1e      	ldr	r3, [pc, #120]	; (80005ac <uart2_tx_init+0x8c>)
 8000532:	681b      	ldr	r3, [r3, #0]
 8000534:	4a1d      	ldr	r2, [pc, #116]	; (80005ac <uart2_tx_init+0x8c>)
 8000536:	f023 0310 	bic.w	r3, r3, #16
 800053a:	6013      	str	r3, [r2, #0]
			GPIOA->MODER |= (1U<<5);
 800053c:	4b1b      	ldr	r3, [pc, #108]	; (80005ac <uart2_tx_init+0x8c>)
 800053e:	681b      	ldr	r3, [r3, #0]
 8000540:	4a1a      	ldr	r2, [pc, #104]	; (80005ac <uart2_tx_init+0x8c>)
 8000542:	f043 0320 	orr.w	r3, r3, #32
 8000546:	6013      	str	r3, [r2, #0]

			/*Set PA2 alternate function type to UART_TX*/
			GPIOA->AFR[0] |= (1U<<8);
 8000548:	4b18      	ldr	r3, [pc, #96]	; (80005ac <uart2_tx_init+0x8c>)
 800054a:	6a1b      	ldr	r3, [r3, #32]
 800054c:	4a17      	ldr	r2, [pc, #92]	; (80005ac <uart2_tx_init+0x8c>)
 800054e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000552:	6213      	str	r3, [r2, #32]
			GPIOA->AFR[0] |= (1U<<9);
 8000554:	4b15      	ldr	r3, [pc, #84]	; (80005ac <uart2_tx_init+0x8c>)
 8000556:	6a1b      	ldr	r3, [r3, #32]
 8000558:	4a14      	ldr	r2, [pc, #80]	; (80005ac <uart2_tx_init+0x8c>)
 800055a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800055e:	6213      	str	r3, [r2, #32]
			GPIOA->AFR[0] |= (1U<<10);
 8000560:	4b12      	ldr	r3, [pc, #72]	; (80005ac <uart2_tx_init+0x8c>)
 8000562:	6a1b      	ldr	r3, [r3, #32]
 8000564:	4a11      	ldr	r2, [pc, #68]	; (80005ac <uart2_tx_init+0x8c>)
 8000566:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800056a:	6213      	str	r3, [r2, #32]
			GPIOA->AFR[0] &= ~(1U<<11);
 800056c:	4b0f      	ldr	r3, [pc, #60]	; (80005ac <uart2_tx_init+0x8c>)
 800056e:	6a1b      	ldr	r3, [r3, #32]
 8000570:	4a0e      	ldr	r2, [pc, #56]	; (80005ac <uart2_tx_init+0x8c>)
 8000572:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8000576:	6213      	str	r3, [r2, #32]


			/****************Configure uart module ***************/
			/*Enable clock access to uart2 */
			RCC->APB1ENR |= UART2EN;
 8000578:	4b0b      	ldr	r3, [pc, #44]	; (80005a8 <uart2_tx_init+0x88>)
 800057a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800057c:	4a0a      	ldr	r2, [pc, #40]	; (80005a8 <uart2_tx_init+0x88>)
 800057e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000582:	6413      	str	r3, [r2, #64]	; 0x40

			/*Configure baudrate*/
			uart_set_baudrate(USART2,APB1_CLK,UART_BAUDRATE);
 8000584:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8000588:	4909      	ldr	r1, [pc, #36]	; (80005b0 <uart2_tx_init+0x90>)
 800058a:	480a      	ldr	r0, [pc, #40]	; (80005b4 <uart2_tx_init+0x94>)
 800058c:	f000 f82c 	bl	80005e8 <uart_set_baudrate>

			/*Configure the transfer direction*/
			USART2->CR1 =  CR1_TE;
 8000590:	4b08      	ldr	r3, [pc, #32]	; (80005b4 <uart2_tx_init+0x94>)
 8000592:	2208      	movs	r2, #8
 8000594:	60da      	str	r2, [r3, #12]

			/*Enable uart module*/
			USART2->CR1 |= CR1_UE;
 8000596:	4b07      	ldr	r3, [pc, #28]	; (80005b4 <uart2_tx_init+0x94>)
 8000598:	68db      	ldr	r3, [r3, #12]
 800059a:	4a06      	ldr	r2, [pc, #24]	; (80005b4 <uart2_tx_init+0x94>)
 800059c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80005a0:	60d3      	str	r3, [r2, #12]

}
 80005a2:	bf00      	nop
 80005a4:	bd80      	pop	{r7, pc}
 80005a6:	bf00      	nop
 80005a8:	40023800 	.word	0x40023800
 80005ac:	40020000 	.word	0x40020000
 80005b0:	00f42400 	.word	0x00f42400
 80005b4:	40004400 	.word	0x40004400

080005b8 <uart2_write>:
	/*Read Data*/
	USART2->DR;
}

void uart2_write(int ch)
{
 80005b8:	b480      	push	{r7}
 80005ba:	b083      	sub	sp, #12
 80005bc:	af00      	add	r7, sp, #0
 80005be:	6078      	str	r0, [r7, #4]
	/*Make sure transmit data register is empty*/
	while(!(USART2->SR & SR_TXE)){}
 80005c0:	bf00      	nop
 80005c2:	4b08      	ldr	r3, [pc, #32]	; (80005e4 <uart2_write+0x2c>)
 80005c4:	681b      	ldr	r3, [r3, #0]
 80005c6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80005ca:	2b00      	cmp	r3, #0
 80005cc:	d0f9      	beq.n	80005c2 <uart2_write+0xa>
	/*Write transmit data register*/
	USART2->DR = (ch & 0XFF);
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	4a04      	ldr	r2, [pc, #16]	; (80005e4 <uart2_write+0x2c>)
 80005d2:	b2db      	uxtb	r3, r3
 80005d4:	6053      	str	r3, [r2, #4]
}
 80005d6:	bf00      	nop
 80005d8:	370c      	adds	r7, #12
 80005da:	46bd      	mov	sp, r7
 80005dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005e0:	4770      	bx	lr
 80005e2:	bf00      	nop
 80005e4:	40004400 	.word	0x40004400

080005e8 <uart_set_baudrate>:


static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t PeriphClk,  uint32_t BaudRate)
{
 80005e8:	b580      	push	{r7, lr}
 80005ea:	b084      	sub	sp, #16
 80005ec:	af00      	add	r7, sp, #0
 80005ee:	60f8      	str	r0, [r7, #12]
 80005f0:	60b9      	str	r1, [r7, #8]
 80005f2:	607a      	str	r2, [r7, #4]
	USARTx->BRR =  compute_uart_bd(PeriphClk,BaudRate);
 80005f4:	6879      	ldr	r1, [r7, #4]
 80005f6:	68b8      	ldr	r0, [r7, #8]
 80005f8:	f000 f808 	bl	800060c <compute_uart_bd>
 80005fc:	4603      	mov	r3, r0
 80005fe:	461a      	mov	r2, r3
 8000600:	68fb      	ldr	r3, [r7, #12]
 8000602:	609a      	str	r2, [r3, #8]
}
 8000604:	bf00      	nop
 8000606:	3710      	adds	r7, #16
 8000608:	46bd      	mov	sp, r7
 800060a:	bd80      	pop	{r7, pc}

0800060c <compute_uart_bd>:

static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t BaudRate)
{
 800060c:	b480      	push	{r7}
 800060e:	b083      	sub	sp, #12
 8000610:	af00      	add	r7, sp, #0
 8000612:	6078      	str	r0, [r7, #4]
 8000614:	6039      	str	r1, [r7, #0]
	return ((PeriphClk + (BaudRate/2U))/BaudRate);
 8000616:	683b      	ldr	r3, [r7, #0]
 8000618:	085a      	lsrs	r2, r3, #1
 800061a:	687b      	ldr	r3, [r7, #4]
 800061c:	441a      	add	r2, r3
 800061e:	683b      	ldr	r3, [r7, #0]
 8000620:	fbb2 f3f3 	udiv	r3, r2, r3
 8000624:	b29b      	uxth	r3, r3
}
 8000626:	4618      	mov	r0, r3
 8000628:	370c      	adds	r7, #12
 800062a:	46bd      	mov	sp, r7
 800062c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000630:	4770      	bx	lr
	...

08000634 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000634:	480d      	ldr	r0, [pc, #52]	; (800066c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000636:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000638:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800063c:	480c      	ldr	r0, [pc, #48]	; (8000670 <LoopForever+0x6>)
  ldr r1, =_edata
 800063e:	490d      	ldr	r1, [pc, #52]	; (8000674 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000640:	4a0d      	ldr	r2, [pc, #52]	; (8000678 <LoopForever+0xe>)
  movs r3, #0
 8000642:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000644:	e002      	b.n	800064c <LoopCopyDataInit>

08000646 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000646:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000648:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800064a:	3304      	adds	r3, #4

0800064c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800064c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800064e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000650:	d3f9      	bcc.n	8000646 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000652:	4a0a      	ldr	r2, [pc, #40]	; (800067c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000654:	4c0a      	ldr	r4, [pc, #40]	; (8000680 <LoopForever+0x16>)
  movs r3, #0
 8000656:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000658:	e001      	b.n	800065e <LoopFillZerobss>

0800065a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800065a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800065c:	3204      	adds	r2, #4

0800065e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800065e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000660:	d3fb      	bcc.n	800065a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000662:	f000 f8e1 	bl	8000828 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000666:	f7ff fe67 	bl	8000338 <main>

0800066a <LoopForever>:

LoopForever:
  b LoopForever
 800066a:	e7fe      	b.n	800066a <LoopForever>
  ldr   r0, =_estack
 800066c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000670:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000674:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000678:	08001534 	.word	0x08001534
  ldr r2, =_sbss
 800067c:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000680:	200001c8 	.word	0x200001c8

08000684 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000684:	e7fe      	b.n	8000684 <ADC_IRQHandler>
	...

08000688 <std>:
 8000688:	2300      	movs	r3, #0
 800068a:	b510      	push	{r4, lr}
 800068c:	4604      	mov	r4, r0
 800068e:	e9c0 3300 	strd	r3, r3, [r0]
 8000692:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000696:	6083      	str	r3, [r0, #8]
 8000698:	8181      	strh	r1, [r0, #12]
 800069a:	6643      	str	r3, [r0, #100]	; 0x64
 800069c:	81c2      	strh	r2, [r0, #14]
 800069e:	6183      	str	r3, [r0, #24]
 80006a0:	4619      	mov	r1, r3
 80006a2:	2208      	movs	r2, #8
 80006a4:	305c      	adds	r0, #92	; 0x5c
 80006a6:	f000 f8b1 	bl	800080c <memset>
 80006aa:	4b05      	ldr	r3, [pc, #20]	; (80006c0 <std+0x38>)
 80006ac:	6263      	str	r3, [r4, #36]	; 0x24
 80006ae:	4b05      	ldr	r3, [pc, #20]	; (80006c4 <std+0x3c>)
 80006b0:	62a3      	str	r3, [r4, #40]	; 0x28
 80006b2:	4b05      	ldr	r3, [pc, #20]	; (80006c8 <std+0x40>)
 80006b4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80006b6:	4b05      	ldr	r3, [pc, #20]	; (80006cc <std+0x44>)
 80006b8:	6224      	str	r4, [r4, #32]
 80006ba:	6323      	str	r3, [r4, #48]	; 0x30
 80006bc:	bd10      	pop	{r4, pc}
 80006be:	bf00      	nop
 80006c0:	080010d1 	.word	0x080010d1
 80006c4:	080010f3 	.word	0x080010f3
 80006c8:	0800112b 	.word	0x0800112b
 80006cc:	0800114f 	.word	0x0800114f

080006d0 <stdio_exit_handler>:
 80006d0:	4a02      	ldr	r2, [pc, #8]	; (80006dc <stdio_exit_handler+0xc>)
 80006d2:	4903      	ldr	r1, [pc, #12]	; (80006e0 <stdio_exit_handler+0x10>)
 80006d4:	4803      	ldr	r0, [pc, #12]	; (80006e4 <stdio_exit_handler+0x14>)
 80006d6:	f000 b869 	b.w	80007ac <_fwalk_sglue>
 80006da:	bf00      	nop
 80006dc:	20000000 	.word	0x20000000
 80006e0:	08001069 	.word	0x08001069
 80006e4:	2000000c 	.word	0x2000000c

080006e8 <cleanup_stdio>:
 80006e8:	6841      	ldr	r1, [r0, #4]
 80006ea:	4b0c      	ldr	r3, [pc, #48]	; (800071c <cleanup_stdio+0x34>)
 80006ec:	4299      	cmp	r1, r3
 80006ee:	b510      	push	{r4, lr}
 80006f0:	4604      	mov	r4, r0
 80006f2:	d001      	beq.n	80006f8 <cleanup_stdio+0x10>
 80006f4:	f000 fcb8 	bl	8001068 <_fflush_r>
 80006f8:	68a1      	ldr	r1, [r4, #8]
 80006fa:	4b09      	ldr	r3, [pc, #36]	; (8000720 <cleanup_stdio+0x38>)
 80006fc:	4299      	cmp	r1, r3
 80006fe:	d002      	beq.n	8000706 <cleanup_stdio+0x1e>
 8000700:	4620      	mov	r0, r4
 8000702:	f000 fcb1 	bl	8001068 <_fflush_r>
 8000706:	68e1      	ldr	r1, [r4, #12]
 8000708:	4b06      	ldr	r3, [pc, #24]	; (8000724 <cleanup_stdio+0x3c>)
 800070a:	4299      	cmp	r1, r3
 800070c:	d004      	beq.n	8000718 <cleanup_stdio+0x30>
 800070e:	4620      	mov	r0, r4
 8000710:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000714:	f000 bca8 	b.w	8001068 <_fflush_r>
 8000718:	bd10      	pop	{r4, pc}
 800071a:	bf00      	nop
 800071c:	2000007c 	.word	0x2000007c
 8000720:	200000e4 	.word	0x200000e4
 8000724:	2000014c 	.word	0x2000014c

08000728 <global_stdio_init.part.0>:
 8000728:	b510      	push	{r4, lr}
 800072a:	4b0b      	ldr	r3, [pc, #44]	; (8000758 <global_stdio_init.part.0+0x30>)
 800072c:	4c0b      	ldr	r4, [pc, #44]	; (800075c <global_stdio_init.part.0+0x34>)
 800072e:	4a0c      	ldr	r2, [pc, #48]	; (8000760 <global_stdio_init.part.0+0x38>)
 8000730:	601a      	str	r2, [r3, #0]
 8000732:	4620      	mov	r0, r4
 8000734:	2200      	movs	r2, #0
 8000736:	2104      	movs	r1, #4
 8000738:	f7ff ffa6 	bl	8000688 <std>
 800073c:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8000740:	2201      	movs	r2, #1
 8000742:	2109      	movs	r1, #9
 8000744:	f7ff ffa0 	bl	8000688 <std>
 8000748:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 800074c:	2202      	movs	r2, #2
 800074e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000752:	2112      	movs	r1, #18
 8000754:	f7ff bf98 	b.w	8000688 <std>
 8000758:	200001b4 	.word	0x200001b4
 800075c:	2000007c 	.word	0x2000007c
 8000760:	080006d1 	.word	0x080006d1

08000764 <__sfp_lock_acquire>:
 8000764:	4801      	ldr	r0, [pc, #4]	; (800076c <__sfp_lock_acquire+0x8>)
 8000766:	f000 b883 	b.w	8000870 <__retarget_lock_acquire_recursive>
 800076a:	bf00      	nop
 800076c:	200001b9 	.word	0x200001b9

08000770 <__sfp_lock_release>:
 8000770:	4801      	ldr	r0, [pc, #4]	; (8000778 <__sfp_lock_release+0x8>)
 8000772:	f000 b87e 	b.w	8000872 <__retarget_lock_release_recursive>
 8000776:	bf00      	nop
 8000778:	200001b9 	.word	0x200001b9

0800077c <__sinit>:
 800077c:	b510      	push	{r4, lr}
 800077e:	4604      	mov	r4, r0
 8000780:	f7ff fff0 	bl	8000764 <__sfp_lock_acquire>
 8000784:	6a23      	ldr	r3, [r4, #32]
 8000786:	b11b      	cbz	r3, 8000790 <__sinit+0x14>
 8000788:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800078c:	f7ff bff0 	b.w	8000770 <__sfp_lock_release>
 8000790:	4b04      	ldr	r3, [pc, #16]	; (80007a4 <__sinit+0x28>)
 8000792:	6223      	str	r3, [r4, #32]
 8000794:	4b04      	ldr	r3, [pc, #16]	; (80007a8 <__sinit+0x2c>)
 8000796:	681b      	ldr	r3, [r3, #0]
 8000798:	2b00      	cmp	r3, #0
 800079a:	d1f5      	bne.n	8000788 <__sinit+0xc>
 800079c:	f7ff ffc4 	bl	8000728 <global_stdio_init.part.0>
 80007a0:	e7f2      	b.n	8000788 <__sinit+0xc>
 80007a2:	bf00      	nop
 80007a4:	080006e9 	.word	0x080006e9
 80007a8:	200001b4 	.word	0x200001b4

080007ac <_fwalk_sglue>:
 80007ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80007b0:	4607      	mov	r7, r0
 80007b2:	4688      	mov	r8, r1
 80007b4:	4614      	mov	r4, r2
 80007b6:	2600      	movs	r6, #0
 80007b8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80007bc:	f1b9 0901 	subs.w	r9, r9, #1
 80007c0:	d505      	bpl.n	80007ce <_fwalk_sglue+0x22>
 80007c2:	6824      	ldr	r4, [r4, #0]
 80007c4:	2c00      	cmp	r4, #0
 80007c6:	d1f7      	bne.n	80007b8 <_fwalk_sglue+0xc>
 80007c8:	4630      	mov	r0, r6
 80007ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80007ce:	89ab      	ldrh	r3, [r5, #12]
 80007d0:	2b01      	cmp	r3, #1
 80007d2:	d907      	bls.n	80007e4 <_fwalk_sglue+0x38>
 80007d4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80007d8:	3301      	adds	r3, #1
 80007da:	d003      	beq.n	80007e4 <_fwalk_sglue+0x38>
 80007dc:	4629      	mov	r1, r5
 80007de:	4638      	mov	r0, r7
 80007e0:	47c0      	blx	r8
 80007e2:	4306      	orrs	r6, r0
 80007e4:	3568      	adds	r5, #104	; 0x68
 80007e6:	e7e9      	b.n	80007bc <_fwalk_sglue+0x10>

080007e8 <iprintf>:
 80007e8:	b40f      	push	{r0, r1, r2, r3}
 80007ea:	b507      	push	{r0, r1, r2, lr}
 80007ec:	4906      	ldr	r1, [pc, #24]	; (8000808 <iprintf+0x20>)
 80007ee:	ab04      	add	r3, sp, #16
 80007f0:	6808      	ldr	r0, [r1, #0]
 80007f2:	f853 2b04 	ldr.w	r2, [r3], #4
 80007f6:	6881      	ldr	r1, [r0, #8]
 80007f8:	9301      	str	r3, [sp, #4]
 80007fa:	f000 f865 	bl	80008c8 <_vfiprintf_r>
 80007fe:	b003      	add	sp, #12
 8000800:	f85d eb04 	ldr.w	lr, [sp], #4
 8000804:	b004      	add	sp, #16
 8000806:	4770      	bx	lr
 8000808:	20000058 	.word	0x20000058

0800080c <memset>:
 800080c:	4402      	add	r2, r0
 800080e:	4603      	mov	r3, r0
 8000810:	4293      	cmp	r3, r2
 8000812:	d100      	bne.n	8000816 <memset+0xa>
 8000814:	4770      	bx	lr
 8000816:	f803 1b01 	strb.w	r1, [r3], #1
 800081a:	e7f9      	b.n	8000810 <memset+0x4>

0800081c <__errno>:
 800081c:	4b01      	ldr	r3, [pc, #4]	; (8000824 <__errno+0x8>)
 800081e:	6818      	ldr	r0, [r3, #0]
 8000820:	4770      	bx	lr
 8000822:	bf00      	nop
 8000824:	20000058 	.word	0x20000058

08000828 <__libc_init_array>:
 8000828:	b570      	push	{r4, r5, r6, lr}
 800082a:	4d0d      	ldr	r5, [pc, #52]	; (8000860 <__libc_init_array+0x38>)
 800082c:	4c0d      	ldr	r4, [pc, #52]	; (8000864 <__libc_init_array+0x3c>)
 800082e:	1b64      	subs	r4, r4, r5
 8000830:	10a4      	asrs	r4, r4, #2
 8000832:	2600      	movs	r6, #0
 8000834:	42a6      	cmp	r6, r4
 8000836:	d109      	bne.n	800084c <__libc_init_array+0x24>
 8000838:	4d0b      	ldr	r5, [pc, #44]	; (8000868 <__libc_init_array+0x40>)
 800083a:	4c0c      	ldr	r4, [pc, #48]	; (800086c <__libc_init_array+0x44>)
 800083c:	f000 fe46 	bl	80014cc <_init>
 8000840:	1b64      	subs	r4, r4, r5
 8000842:	10a4      	asrs	r4, r4, #2
 8000844:	2600      	movs	r6, #0
 8000846:	42a6      	cmp	r6, r4
 8000848:	d105      	bne.n	8000856 <__libc_init_array+0x2e>
 800084a:	bd70      	pop	{r4, r5, r6, pc}
 800084c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000850:	4798      	blx	r3
 8000852:	3601      	adds	r6, #1
 8000854:	e7ee      	b.n	8000834 <__libc_init_array+0xc>
 8000856:	f855 3b04 	ldr.w	r3, [r5], #4
 800085a:	4798      	blx	r3
 800085c:	3601      	adds	r6, #1
 800085e:	e7f2      	b.n	8000846 <__libc_init_array+0x1e>
 8000860:	0800152c 	.word	0x0800152c
 8000864:	0800152c 	.word	0x0800152c
 8000868:	0800152c 	.word	0x0800152c
 800086c:	08001530 	.word	0x08001530

08000870 <__retarget_lock_acquire_recursive>:
 8000870:	4770      	bx	lr

08000872 <__retarget_lock_release_recursive>:
 8000872:	4770      	bx	lr

08000874 <__sfputc_r>:
 8000874:	6893      	ldr	r3, [r2, #8]
 8000876:	3b01      	subs	r3, #1
 8000878:	2b00      	cmp	r3, #0
 800087a:	b410      	push	{r4}
 800087c:	6093      	str	r3, [r2, #8]
 800087e:	da08      	bge.n	8000892 <__sfputc_r+0x1e>
 8000880:	6994      	ldr	r4, [r2, #24]
 8000882:	42a3      	cmp	r3, r4
 8000884:	db01      	blt.n	800088a <__sfputc_r+0x16>
 8000886:	290a      	cmp	r1, #10
 8000888:	d103      	bne.n	8000892 <__sfputc_r+0x1e>
 800088a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800088e:	f000 bc62 	b.w	8001156 <__swbuf_r>
 8000892:	6813      	ldr	r3, [r2, #0]
 8000894:	1c58      	adds	r0, r3, #1
 8000896:	6010      	str	r0, [r2, #0]
 8000898:	7019      	strb	r1, [r3, #0]
 800089a:	4608      	mov	r0, r1
 800089c:	f85d 4b04 	ldr.w	r4, [sp], #4
 80008a0:	4770      	bx	lr

080008a2 <__sfputs_r>:
 80008a2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008a4:	4606      	mov	r6, r0
 80008a6:	460f      	mov	r7, r1
 80008a8:	4614      	mov	r4, r2
 80008aa:	18d5      	adds	r5, r2, r3
 80008ac:	42ac      	cmp	r4, r5
 80008ae:	d101      	bne.n	80008b4 <__sfputs_r+0x12>
 80008b0:	2000      	movs	r0, #0
 80008b2:	e007      	b.n	80008c4 <__sfputs_r+0x22>
 80008b4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80008b8:	463a      	mov	r2, r7
 80008ba:	4630      	mov	r0, r6
 80008bc:	f7ff ffda 	bl	8000874 <__sfputc_r>
 80008c0:	1c43      	adds	r3, r0, #1
 80008c2:	d1f3      	bne.n	80008ac <__sfputs_r+0xa>
 80008c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080008c8 <_vfiprintf_r>:
 80008c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80008cc:	460d      	mov	r5, r1
 80008ce:	b09d      	sub	sp, #116	; 0x74
 80008d0:	4614      	mov	r4, r2
 80008d2:	4698      	mov	r8, r3
 80008d4:	4606      	mov	r6, r0
 80008d6:	b118      	cbz	r0, 80008e0 <_vfiprintf_r+0x18>
 80008d8:	6a03      	ldr	r3, [r0, #32]
 80008da:	b90b      	cbnz	r3, 80008e0 <_vfiprintf_r+0x18>
 80008dc:	f7ff ff4e 	bl	800077c <__sinit>
 80008e0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80008e2:	07d9      	lsls	r1, r3, #31
 80008e4:	d405      	bmi.n	80008f2 <_vfiprintf_r+0x2a>
 80008e6:	89ab      	ldrh	r3, [r5, #12]
 80008e8:	059a      	lsls	r2, r3, #22
 80008ea:	d402      	bmi.n	80008f2 <_vfiprintf_r+0x2a>
 80008ec:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80008ee:	f7ff ffbf 	bl	8000870 <__retarget_lock_acquire_recursive>
 80008f2:	89ab      	ldrh	r3, [r5, #12]
 80008f4:	071b      	lsls	r3, r3, #28
 80008f6:	d501      	bpl.n	80008fc <_vfiprintf_r+0x34>
 80008f8:	692b      	ldr	r3, [r5, #16]
 80008fa:	b99b      	cbnz	r3, 8000924 <_vfiprintf_r+0x5c>
 80008fc:	4629      	mov	r1, r5
 80008fe:	4630      	mov	r0, r6
 8000900:	f000 fc66 	bl	80011d0 <__swsetup_r>
 8000904:	b170      	cbz	r0, 8000924 <_vfiprintf_r+0x5c>
 8000906:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000908:	07dc      	lsls	r4, r3, #31
 800090a:	d504      	bpl.n	8000916 <_vfiprintf_r+0x4e>
 800090c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000910:	b01d      	add	sp, #116	; 0x74
 8000912:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000916:	89ab      	ldrh	r3, [r5, #12]
 8000918:	0598      	lsls	r0, r3, #22
 800091a:	d4f7      	bmi.n	800090c <_vfiprintf_r+0x44>
 800091c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800091e:	f7ff ffa8 	bl	8000872 <__retarget_lock_release_recursive>
 8000922:	e7f3      	b.n	800090c <_vfiprintf_r+0x44>
 8000924:	2300      	movs	r3, #0
 8000926:	9309      	str	r3, [sp, #36]	; 0x24
 8000928:	2320      	movs	r3, #32
 800092a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800092e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000932:	2330      	movs	r3, #48	; 0x30
 8000934:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000ae8 <_vfiprintf_r+0x220>
 8000938:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800093c:	f04f 0901 	mov.w	r9, #1
 8000940:	4623      	mov	r3, r4
 8000942:	469a      	mov	sl, r3
 8000944:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000948:	b10a      	cbz	r2, 800094e <_vfiprintf_r+0x86>
 800094a:	2a25      	cmp	r2, #37	; 0x25
 800094c:	d1f9      	bne.n	8000942 <_vfiprintf_r+0x7a>
 800094e:	ebba 0b04 	subs.w	fp, sl, r4
 8000952:	d00b      	beq.n	800096c <_vfiprintf_r+0xa4>
 8000954:	465b      	mov	r3, fp
 8000956:	4622      	mov	r2, r4
 8000958:	4629      	mov	r1, r5
 800095a:	4630      	mov	r0, r6
 800095c:	f7ff ffa1 	bl	80008a2 <__sfputs_r>
 8000960:	3001      	adds	r0, #1
 8000962:	f000 80a9 	beq.w	8000ab8 <_vfiprintf_r+0x1f0>
 8000966:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000968:	445a      	add	r2, fp
 800096a:	9209      	str	r2, [sp, #36]	; 0x24
 800096c:	f89a 3000 	ldrb.w	r3, [sl]
 8000970:	2b00      	cmp	r3, #0
 8000972:	f000 80a1 	beq.w	8000ab8 <_vfiprintf_r+0x1f0>
 8000976:	2300      	movs	r3, #0
 8000978:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800097c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000980:	f10a 0a01 	add.w	sl, sl, #1
 8000984:	9304      	str	r3, [sp, #16]
 8000986:	9307      	str	r3, [sp, #28]
 8000988:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800098c:	931a      	str	r3, [sp, #104]	; 0x68
 800098e:	4654      	mov	r4, sl
 8000990:	2205      	movs	r2, #5
 8000992:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000996:	4854      	ldr	r0, [pc, #336]	; (8000ae8 <_vfiprintf_r+0x220>)
 8000998:	f7ff fc22 	bl	80001e0 <memchr>
 800099c:	9a04      	ldr	r2, [sp, #16]
 800099e:	b9d8      	cbnz	r0, 80009d8 <_vfiprintf_r+0x110>
 80009a0:	06d1      	lsls	r1, r2, #27
 80009a2:	bf44      	itt	mi
 80009a4:	2320      	movmi	r3, #32
 80009a6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80009aa:	0713      	lsls	r3, r2, #28
 80009ac:	bf44      	itt	mi
 80009ae:	232b      	movmi	r3, #43	; 0x2b
 80009b0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80009b4:	f89a 3000 	ldrb.w	r3, [sl]
 80009b8:	2b2a      	cmp	r3, #42	; 0x2a
 80009ba:	d015      	beq.n	80009e8 <_vfiprintf_r+0x120>
 80009bc:	9a07      	ldr	r2, [sp, #28]
 80009be:	4654      	mov	r4, sl
 80009c0:	2000      	movs	r0, #0
 80009c2:	f04f 0c0a 	mov.w	ip, #10
 80009c6:	4621      	mov	r1, r4
 80009c8:	f811 3b01 	ldrb.w	r3, [r1], #1
 80009cc:	3b30      	subs	r3, #48	; 0x30
 80009ce:	2b09      	cmp	r3, #9
 80009d0:	d94d      	bls.n	8000a6e <_vfiprintf_r+0x1a6>
 80009d2:	b1b0      	cbz	r0, 8000a02 <_vfiprintf_r+0x13a>
 80009d4:	9207      	str	r2, [sp, #28]
 80009d6:	e014      	b.n	8000a02 <_vfiprintf_r+0x13a>
 80009d8:	eba0 0308 	sub.w	r3, r0, r8
 80009dc:	fa09 f303 	lsl.w	r3, r9, r3
 80009e0:	4313      	orrs	r3, r2
 80009e2:	9304      	str	r3, [sp, #16]
 80009e4:	46a2      	mov	sl, r4
 80009e6:	e7d2      	b.n	800098e <_vfiprintf_r+0xc6>
 80009e8:	9b03      	ldr	r3, [sp, #12]
 80009ea:	1d19      	adds	r1, r3, #4
 80009ec:	681b      	ldr	r3, [r3, #0]
 80009ee:	9103      	str	r1, [sp, #12]
 80009f0:	2b00      	cmp	r3, #0
 80009f2:	bfbb      	ittet	lt
 80009f4:	425b      	neglt	r3, r3
 80009f6:	f042 0202 	orrlt.w	r2, r2, #2
 80009fa:	9307      	strge	r3, [sp, #28]
 80009fc:	9307      	strlt	r3, [sp, #28]
 80009fe:	bfb8      	it	lt
 8000a00:	9204      	strlt	r2, [sp, #16]
 8000a02:	7823      	ldrb	r3, [r4, #0]
 8000a04:	2b2e      	cmp	r3, #46	; 0x2e
 8000a06:	d10c      	bne.n	8000a22 <_vfiprintf_r+0x15a>
 8000a08:	7863      	ldrb	r3, [r4, #1]
 8000a0a:	2b2a      	cmp	r3, #42	; 0x2a
 8000a0c:	d134      	bne.n	8000a78 <_vfiprintf_r+0x1b0>
 8000a0e:	9b03      	ldr	r3, [sp, #12]
 8000a10:	1d1a      	adds	r2, r3, #4
 8000a12:	681b      	ldr	r3, [r3, #0]
 8000a14:	9203      	str	r2, [sp, #12]
 8000a16:	2b00      	cmp	r3, #0
 8000a18:	bfb8      	it	lt
 8000a1a:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8000a1e:	3402      	adds	r4, #2
 8000a20:	9305      	str	r3, [sp, #20]
 8000a22:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8000af8 <_vfiprintf_r+0x230>
 8000a26:	7821      	ldrb	r1, [r4, #0]
 8000a28:	2203      	movs	r2, #3
 8000a2a:	4650      	mov	r0, sl
 8000a2c:	f7ff fbd8 	bl	80001e0 <memchr>
 8000a30:	b138      	cbz	r0, 8000a42 <_vfiprintf_r+0x17a>
 8000a32:	9b04      	ldr	r3, [sp, #16]
 8000a34:	eba0 000a 	sub.w	r0, r0, sl
 8000a38:	2240      	movs	r2, #64	; 0x40
 8000a3a:	4082      	lsls	r2, r0
 8000a3c:	4313      	orrs	r3, r2
 8000a3e:	3401      	adds	r4, #1
 8000a40:	9304      	str	r3, [sp, #16]
 8000a42:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a46:	4829      	ldr	r0, [pc, #164]	; (8000aec <_vfiprintf_r+0x224>)
 8000a48:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000a4c:	2206      	movs	r2, #6
 8000a4e:	f7ff fbc7 	bl	80001e0 <memchr>
 8000a52:	2800      	cmp	r0, #0
 8000a54:	d03f      	beq.n	8000ad6 <_vfiprintf_r+0x20e>
 8000a56:	4b26      	ldr	r3, [pc, #152]	; (8000af0 <_vfiprintf_r+0x228>)
 8000a58:	bb1b      	cbnz	r3, 8000aa2 <_vfiprintf_r+0x1da>
 8000a5a:	9b03      	ldr	r3, [sp, #12]
 8000a5c:	3307      	adds	r3, #7
 8000a5e:	f023 0307 	bic.w	r3, r3, #7
 8000a62:	3308      	adds	r3, #8
 8000a64:	9303      	str	r3, [sp, #12]
 8000a66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000a68:	443b      	add	r3, r7
 8000a6a:	9309      	str	r3, [sp, #36]	; 0x24
 8000a6c:	e768      	b.n	8000940 <_vfiprintf_r+0x78>
 8000a6e:	fb0c 3202 	mla	r2, ip, r2, r3
 8000a72:	460c      	mov	r4, r1
 8000a74:	2001      	movs	r0, #1
 8000a76:	e7a6      	b.n	80009c6 <_vfiprintf_r+0xfe>
 8000a78:	2300      	movs	r3, #0
 8000a7a:	3401      	adds	r4, #1
 8000a7c:	9305      	str	r3, [sp, #20]
 8000a7e:	4619      	mov	r1, r3
 8000a80:	f04f 0c0a 	mov.w	ip, #10
 8000a84:	4620      	mov	r0, r4
 8000a86:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000a8a:	3a30      	subs	r2, #48	; 0x30
 8000a8c:	2a09      	cmp	r2, #9
 8000a8e:	d903      	bls.n	8000a98 <_vfiprintf_r+0x1d0>
 8000a90:	2b00      	cmp	r3, #0
 8000a92:	d0c6      	beq.n	8000a22 <_vfiprintf_r+0x15a>
 8000a94:	9105      	str	r1, [sp, #20]
 8000a96:	e7c4      	b.n	8000a22 <_vfiprintf_r+0x15a>
 8000a98:	fb0c 2101 	mla	r1, ip, r1, r2
 8000a9c:	4604      	mov	r4, r0
 8000a9e:	2301      	movs	r3, #1
 8000aa0:	e7f0      	b.n	8000a84 <_vfiprintf_r+0x1bc>
 8000aa2:	ab03      	add	r3, sp, #12
 8000aa4:	9300      	str	r3, [sp, #0]
 8000aa6:	462a      	mov	r2, r5
 8000aa8:	4b12      	ldr	r3, [pc, #72]	; (8000af4 <_vfiprintf_r+0x22c>)
 8000aaa:	a904      	add	r1, sp, #16
 8000aac:	4630      	mov	r0, r6
 8000aae:	f3af 8000 	nop.w
 8000ab2:	4607      	mov	r7, r0
 8000ab4:	1c78      	adds	r0, r7, #1
 8000ab6:	d1d6      	bne.n	8000a66 <_vfiprintf_r+0x19e>
 8000ab8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000aba:	07d9      	lsls	r1, r3, #31
 8000abc:	d405      	bmi.n	8000aca <_vfiprintf_r+0x202>
 8000abe:	89ab      	ldrh	r3, [r5, #12]
 8000ac0:	059a      	lsls	r2, r3, #22
 8000ac2:	d402      	bmi.n	8000aca <_vfiprintf_r+0x202>
 8000ac4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000ac6:	f7ff fed4 	bl	8000872 <__retarget_lock_release_recursive>
 8000aca:	89ab      	ldrh	r3, [r5, #12]
 8000acc:	065b      	lsls	r3, r3, #25
 8000ace:	f53f af1d 	bmi.w	800090c <_vfiprintf_r+0x44>
 8000ad2:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000ad4:	e71c      	b.n	8000910 <_vfiprintf_r+0x48>
 8000ad6:	ab03      	add	r3, sp, #12
 8000ad8:	9300      	str	r3, [sp, #0]
 8000ada:	462a      	mov	r2, r5
 8000adc:	4b05      	ldr	r3, [pc, #20]	; (8000af4 <_vfiprintf_r+0x22c>)
 8000ade:	a904      	add	r1, sp, #16
 8000ae0:	4630      	mov	r0, r6
 8000ae2:	f000 f919 	bl	8000d18 <_printf_i>
 8000ae6:	e7e4      	b.n	8000ab2 <_vfiprintf_r+0x1ea>
 8000ae8:	080014f8 	.word	0x080014f8
 8000aec:	08001502 	.word	0x08001502
 8000af0:	00000000 	.word	0x00000000
 8000af4:	080008a3 	.word	0x080008a3
 8000af8:	080014fe 	.word	0x080014fe

08000afc <sbrk_aligned>:
 8000afc:	b570      	push	{r4, r5, r6, lr}
 8000afe:	4e0e      	ldr	r6, [pc, #56]	; (8000b38 <sbrk_aligned+0x3c>)
 8000b00:	460c      	mov	r4, r1
 8000b02:	6831      	ldr	r1, [r6, #0]
 8000b04:	4605      	mov	r5, r0
 8000b06:	b911      	cbnz	r1, 8000b0e <sbrk_aligned+0x12>
 8000b08:	f000 fc72 	bl	80013f0 <_sbrk_r>
 8000b0c:	6030      	str	r0, [r6, #0]
 8000b0e:	4621      	mov	r1, r4
 8000b10:	4628      	mov	r0, r5
 8000b12:	f000 fc6d 	bl	80013f0 <_sbrk_r>
 8000b16:	1c43      	adds	r3, r0, #1
 8000b18:	d00a      	beq.n	8000b30 <sbrk_aligned+0x34>
 8000b1a:	1cc4      	adds	r4, r0, #3
 8000b1c:	f024 0403 	bic.w	r4, r4, #3
 8000b20:	42a0      	cmp	r0, r4
 8000b22:	d007      	beq.n	8000b34 <sbrk_aligned+0x38>
 8000b24:	1a21      	subs	r1, r4, r0
 8000b26:	4628      	mov	r0, r5
 8000b28:	f000 fc62 	bl	80013f0 <_sbrk_r>
 8000b2c:	3001      	adds	r0, #1
 8000b2e:	d101      	bne.n	8000b34 <sbrk_aligned+0x38>
 8000b30:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000b34:	4620      	mov	r0, r4
 8000b36:	bd70      	pop	{r4, r5, r6, pc}
 8000b38:	200001c0 	.word	0x200001c0

08000b3c <_malloc_r>:
 8000b3c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b40:	1ccd      	adds	r5, r1, #3
 8000b42:	f025 0503 	bic.w	r5, r5, #3
 8000b46:	3508      	adds	r5, #8
 8000b48:	2d0c      	cmp	r5, #12
 8000b4a:	bf38      	it	cc
 8000b4c:	250c      	movcc	r5, #12
 8000b4e:	2d00      	cmp	r5, #0
 8000b50:	4607      	mov	r7, r0
 8000b52:	db01      	blt.n	8000b58 <_malloc_r+0x1c>
 8000b54:	42a9      	cmp	r1, r5
 8000b56:	d905      	bls.n	8000b64 <_malloc_r+0x28>
 8000b58:	230c      	movs	r3, #12
 8000b5a:	603b      	str	r3, [r7, #0]
 8000b5c:	2600      	movs	r6, #0
 8000b5e:	4630      	mov	r0, r6
 8000b60:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000b64:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000c38 <_malloc_r+0xfc>
 8000b68:	f000 faa6 	bl	80010b8 <__malloc_lock>
 8000b6c:	f8d8 3000 	ldr.w	r3, [r8]
 8000b70:	461c      	mov	r4, r3
 8000b72:	bb5c      	cbnz	r4, 8000bcc <_malloc_r+0x90>
 8000b74:	4629      	mov	r1, r5
 8000b76:	4638      	mov	r0, r7
 8000b78:	f7ff ffc0 	bl	8000afc <sbrk_aligned>
 8000b7c:	1c43      	adds	r3, r0, #1
 8000b7e:	4604      	mov	r4, r0
 8000b80:	d155      	bne.n	8000c2e <_malloc_r+0xf2>
 8000b82:	f8d8 4000 	ldr.w	r4, [r8]
 8000b86:	4626      	mov	r6, r4
 8000b88:	2e00      	cmp	r6, #0
 8000b8a:	d145      	bne.n	8000c18 <_malloc_r+0xdc>
 8000b8c:	2c00      	cmp	r4, #0
 8000b8e:	d048      	beq.n	8000c22 <_malloc_r+0xe6>
 8000b90:	6823      	ldr	r3, [r4, #0]
 8000b92:	4631      	mov	r1, r6
 8000b94:	4638      	mov	r0, r7
 8000b96:	eb04 0903 	add.w	r9, r4, r3
 8000b9a:	f000 fc29 	bl	80013f0 <_sbrk_r>
 8000b9e:	4581      	cmp	r9, r0
 8000ba0:	d13f      	bne.n	8000c22 <_malloc_r+0xe6>
 8000ba2:	6821      	ldr	r1, [r4, #0]
 8000ba4:	1a6d      	subs	r5, r5, r1
 8000ba6:	4629      	mov	r1, r5
 8000ba8:	4638      	mov	r0, r7
 8000baa:	f7ff ffa7 	bl	8000afc <sbrk_aligned>
 8000bae:	3001      	adds	r0, #1
 8000bb0:	d037      	beq.n	8000c22 <_malloc_r+0xe6>
 8000bb2:	6823      	ldr	r3, [r4, #0]
 8000bb4:	442b      	add	r3, r5
 8000bb6:	6023      	str	r3, [r4, #0]
 8000bb8:	f8d8 3000 	ldr.w	r3, [r8]
 8000bbc:	2b00      	cmp	r3, #0
 8000bbe:	d038      	beq.n	8000c32 <_malloc_r+0xf6>
 8000bc0:	685a      	ldr	r2, [r3, #4]
 8000bc2:	42a2      	cmp	r2, r4
 8000bc4:	d12b      	bne.n	8000c1e <_malloc_r+0xe2>
 8000bc6:	2200      	movs	r2, #0
 8000bc8:	605a      	str	r2, [r3, #4]
 8000bca:	e00f      	b.n	8000bec <_malloc_r+0xb0>
 8000bcc:	6822      	ldr	r2, [r4, #0]
 8000bce:	1b52      	subs	r2, r2, r5
 8000bd0:	d41f      	bmi.n	8000c12 <_malloc_r+0xd6>
 8000bd2:	2a0b      	cmp	r2, #11
 8000bd4:	d917      	bls.n	8000c06 <_malloc_r+0xca>
 8000bd6:	1961      	adds	r1, r4, r5
 8000bd8:	42a3      	cmp	r3, r4
 8000bda:	6025      	str	r5, [r4, #0]
 8000bdc:	bf18      	it	ne
 8000bde:	6059      	strne	r1, [r3, #4]
 8000be0:	6863      	ldr	r3, [r4, #4]
 8000be2:	bf08      	it	eq
 8000be4:	f8c8 1000 	streq.w	r1, [r8]
 8000be8:	5162      	str	r2, [r4, r5]
 8000bea:	604b      	str	r3, [r1, #4]
 8000bec:	4638      	mov	r0, r7
 8000bee:	f104 060b 	add.w	r6, r4, #11
 8000bf2:	f000 fa67 	bl	80010c4 <__malloc_unlock>
 8000bf6:	f026 0607 	bic.w	r6, r6, #7
 8000bfa:	1d23      	adds	r3, r4, #4
 8000bfc:	1af2      	subs	r2, r6, r3
 8000bfe:	d0ae      	beq.n	8000b5e <_malloc_r+0x22>
 8000c00:	1b9b      	subs	r3, r3, r6
 8000c02:	50a3      	str	r3, [r4, r2]
 8000c04:	e7ab      	b.n	8000b5e <_malloc_r+0x22>
 8000c06:	42a3      	cmp	r3, r4
 8000c08:	6862      	ldr	r2, [r4, #4]
 8000c0a:	d1dd      	bne.n	8000bc8 <_malloc_r+0x8c>
 8000c0c:	f8c8 2000 	str.w	r2, [r8]
 8000c10:	e7ec      	b.n	8000bec <_malloc_r+0xb0>
 8000c12:	4623      	mov	r3, r4
 8000c14:	6864      	ldr	r4, [r4, #4]
 8000c16:	e7ac      	b.n	8000b72 <_malloc_r+0x36>
 8000c18:	4634      	mov	r4, r6
 8000c1a:	6876      	ldr	r6, [r6, #4]
 8000c1c:	e7b4      	b.n	8000b88 <_malloc_r+0x4c>
 8000c1e:	4613      	mov	r3, r2
 8000c20:	e7cc      	b.n	8000bbc <_malloc_r+0x80>
 8000c22:	230c      	movs	r3, #12
 8000c24:	603b      	str	r3, [r7, #0]
 8000c26:	4638      	mov	r0, r7
 8000c28:	f000 fa4c 	bl	80010c4 <__malloc_unlock>
 8000c2c:	e797      	b.n	8000b5e <_malloc_r+0x22>
 8000c2e:	6025      	str	r5, [r4, #0]
 8000c30:	e7dc      	b.n	8000bec <_malloc_r+0xb0>
 8000c32:	605b      	str	r3, [r3, #4]
 8000c34:	deff      	udf	#255	; 0xff
 8000c36:	bf00      	nop
 8000c38:	200001bc 	.word	0x200001bc

08000c3c <_printf_common>:
 8000c3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c40:	4616      	mov	r6, r2
 8000c42:	4699      	mov	r9, r3
 8000c44:	688a      	ldr	r2, [r1, #8]
 8000c46:	690b      	ldr	r3, [r1, #16]
 8000c48:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000c4c:	4293      	cmp	r3, r2
 8000c4e:	bfb8      	it	lt
 8000c50:	4613      	movlt	r3, r2
 8000c52:	6033      	str	r3, [r6, #0]
 8000c54:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000c58:	4607      	mov	r7, r0
 8000c5a:	460c      	mov	r4, r1
 8000c5c:	b10a      	cbz	r2, 8000c62 <_printf_common+0x26>
 8000c5e:	3301      	adds	r3, #1
 8000c60:	6033      	str	r3, [r6, #0]
 8000c62:	6823      	ldr	r3, [r4, #0]
 8000c64:	0699      	lsls	r1, r3, #26
 8000c66:	bf42      	ittt	mi
 8000c68:	6833      	ldrmi	r3, [r6, #0]
 8000c6a:	3302      	addmi	r3, #2
 8000c6c:	6033      	strmi	r3, [r6, #0]
 8000c6e:	6825      	ldr	r5, [r4, #0]
 8000c70:	f015 0506 	ands.w	r5, r5, #6
 8000c74:	d106      	bne.n	8000c84 <_printf_common+0x48>
 8000c76:	f104 0a19 	add.w	sl, r4, #25
 8000c7a:	68e3      	ldr	r3, [r4, #12]
 8000c7c:	6832      	ldr	r2, [r6, #0]
 8000c7e:	1a9b      	subs	r3, r3, r2
 8000c80:	42ab      	cmp	r3, r5
 8000c82:	dc26      	bgt.n	8000cd2 <_printf_common+0x96>
 8000c84:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000c88:	1e13      	subs	r3, r2, #0
 8000c8a:	6822      	ldr	r2, [r4, #0]
 8000c8c:	bf18      	it	ne
 8000c8e:	2301      	movne	r3, #1
 8000c90:	0692      	lsls	r2, r2, #26
 8000c92:	d42b      	bmi.n	8000cec <_printf_common+0xb0>
 8000c94:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000c98:	4649      	mov	r1, r9
 8000c9a:	4638      	mov	r0, r7
 8000c9c:	47c0      	blx	r8
 8000c9e:	3001      	adds	r0, #1
 8000ca0:	d01e      	beq.n	8000ce0 <_printf_common+0xa4>
 8000ca2:	6823      	ldr	r3, [r4, #0]
 8000ca4:	6922      	ldr	r2, [r4, #16]
 8000ca6:	f003 0306 	and.w	r3, r3, #6
 8000caa:	2b04      	cmp	r3, #4
 8000cac:	bf02      	ittt	eq
 8000cae:	68e5      	ldreq	r5, [r4, #12]
 8000cb0:	6833      	ldreq	r3, [r6, #0]
 8000cb2:	1aed      	subeq	r5, r5, r3
 8000cb4:	68a3      	ldr	r3, [r4, #8]
 8000cb6:	bf0c      	ite	eq
 8000cb8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000cbc:	2500      	movne	r5, #0
 8000cbe:	4293      	cmp	r3, r2
 8000cc0:	bfc4      	itt	gt
 8000cc2:	1a9b      	subgt	r3, r3, r2
 8000cc4:	18ed      	addgt	r5, r5, r3
 8000cc6:	2600      	movs	r6, #0
 8000cc8:	341a      	adds	r4, #26
 8000cca:	42b5      	cmp	r5, r6
 8000ccc:	d11a      	bne.n	8000d04 <_printf_common+0xc8>
 8000cce:	2000      	movs	r0, #0
 8000cd0:	e008      	b.n	8000ce4 <_printf_common+0xa8>
 8000cd2:	2301      	movs	r3, #1
 8000cd4:	4652      	mov	r2, sl
 8000cd6:	4649      	mov	r1, r9
 8000cd8:	4638      	mov	r0, r7
 8000cda:	47c0      	blx	r8
 8000cdc:	3001      	adds	r0, #1
 8000cde:	d103      	bne.n	8000ce8 <_printf_common+0xac>
 8000ce0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000ce4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ce8:	3501      	adds	r5, #1
 8000cea:	e7c6      	b.n	8000c7a <_printf_common+0x3e>
 8000cec:	18e1      	adds	r1, r4, r3
 8000cee:	1c5a      	adds	r2, r3, #1
 8000cf0:	2030      	movs	r0, #48	; 0x30
 8000cf2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000cf6:	4422      	add	r2, r4
 8000cf8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000cfc:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000d00:	3302      	adds	r3, #2
 8000d02:	e7c7      	b.n	8000c94 <_printf_common+0x58>
 8000d04:	2301      	movs	r3, #1
 8000d06:	4622      	mov	r2, r4
 8000d08:	4649      	mov	r1, r9
 8000d0a:	4638      	mov	r0, r7
 8000d0c:	47c0      	blx	r8
 8000d0e:	3001      	adds	r0, #1
 8000d10:	d0e6      	beq.n	8000ce0 <_printf_common+0xa4>
 8000d12:	3601      	adds	r6, #1
 8000d14:	e7d9      	b.n	8000cca <_printf_common+0x8e>
	...

08000d18 <_printf_i>:
 8000d18:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000d1c:	7e0f      	ldrb	r7, [r1, #24]
 8000d1e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000d20:	2f78      	cmp	r7, #120	; 0x78
 8000d22:	4691      	mov	r9, r2
 8000d24:	4680      	mov	r8, r0
 8000d26:	460c      	mov	r4, r1
 8000d28:	469a      	mov	sl, r3
 8000d2a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000d2e:	d807      	bhi.n	8000d40 <_printf_i+0x28>
 8000d30:	2f62      	cmp	r7, #98	; 0x62
 8000d32:	d80a      	bhi.n	8000d4a <_printf_i+0x32>
 8000d34:	2f00      	cmp	r7, #0
 8000d36:	f000 80d4 	beq.w	8000ee2 <_printf_i+0x1ca>
 8000d3a:	2f58      	cmp	r7, #88	; 0x58
 8000d3c:	f000 80c0 	beq.w	8000ec0 <_printf_i+0x1a8>
 8000d40:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000d44:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000d48:	e03a      	b.n	8000dc0 <_printf_i+0xa8>
 8000d4a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000d4e:	2b15      	cmp	r3, #21
 8000d50:	d8f6      	bhi.n	8000d40 <_printf_i+0x28>
 8000d52:	a101      	add	r1, pc, #4	; (adr r1, 8000d58 <_printf_i+0x40>)
 8000d54:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000d58:	08000db1 	.word	0x08000db1
 8000d5c:	08000dc5 	.word	0x08000dc5
 8000d60:	08000d41 	.word	0x08000d41
 8000d64:	08000d41 	.word	0x08000d41
 8000d68:	08000d41 	.word	0x08000d41
 8000d6c:	08000d41 	.word	0x08000d41
 8000d70:	08000dc5 	.word	0x08000dc5
 8000d74:	08000d41 	.word	0x08000d41
 8000d78:	08000d41 	.word	0x08000d41
 8000d7c:	08000d41 	.word	0x08000d41
 8000d80:	08000d41 	.word	0x08000d41
 8000d84:	08000ec9 	.word	0x08000ec9
 8000d88:	08000df1 	.word	0x08000df1
 8000d8c:	08000e83 	.word	0x08000e83
 8000d90:	08000d41 	.word	0x08000d41
 8000d94:	08000d41 	.word	0x08000d41
 8000d98:	08000eeb 	.word	0x08000eeb
 8000d9c:	08000d41 	.word	0x08000d41
 8000da0:	08000df1 	.word	0x08000df1
 8000da4:	08000d41 	.word	0x08000d41
 8000da8:	08000d41 	.word	0x08000d41
 8000dac:	08000e8b 	.word	0x08000e8b
 8000db0:	682b      	ldr	r3, [r5, #0]
 8000db2:	1d1a      	adds	r2, r3, #4
 8000db4:	681b      	ldr	r3, [r3, #0]
 8000db6:	602a      	str	r2, [r5, #0]
 8000db8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000dbc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000dc0:	2301      	movs	r3, #1
 8000dc2:	e09f      	b.n	8000f04 <_printf_i+0x1ec>
 8000dc4:	6820      	ldr	r0, [r4, #0]
 8000dc6:	682b      	ldr	r3, [r5, #0]
 8000dc8:	0607      	lsls	r7, r0, #24
 8000dca:	f103 0104 	add.w	r1, r3, #4
 8000dce:	6029      	str	r1, [r5, #0]
 8000dd0:	d501      	bpl.n	8000dd6 <_printf_i+0xbe>
 8000dd2:	681e      	ldr	r6, [r3, #0]
 8000dd4:	e003      	b.n	8000dde <_printf_i+0xc6>
 8000dd6:	0646      	lsls	r6, r0, #25
 8000dd8:	d5fb      	bpl.n	8000dd2 <_printf_i+0xba>
 8000dda:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000dde:	2e00      	cmp	r6, #0
 8000de0:	da03      	bge.n	8000dea <_printf_i+0xd2>
 8000de2:	232d      	movs	r3, #45	; 0x2d
 8000de4:	4276      	negs	r6, r6
 8000de6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000dea:	485a      	ldr	r0, [pc, #360]	; (8000f54 <_printf_i+0x23c>)
 8000dec:	230a      	movs	r3, #10
 8000dee:	e012      	b.n	8000e16 <_printf_i+0xfe>
 8000df0:	682b      	ldr	r3, [r5, #0]
 8000df2:	6820      	ldr	r0, [r4, #0]
 8000df4:	1d19      	adds	r1, r3, #4
 8000df6:	6029      	str	r1, [r5, #0]
 8000df8:	0605      	lsls	r5, r0, #24
 8000dfa:	d501      	bpl.n	8000e00 <_printf_i+0xe8>
 8000dfc:	681e      	ldr	r6, [r3, #0]
 8000dfe:	e002      	b.n	8000e06 <_printf_i+0xee>
 8000e00:	0641      	lsls	r1, r0, #25
 8000e02:	d5fb      	bpl.n	8000dfc <_printf_i+0xe4>
 8000e04:	881e      	ldrh	r6, [r3, #0]
 8000e06:	4853      	ldr	r0, [pc, #332]	; (8000f54 <_printf_i+0x23c>)
 8000e08:	2f6f      	cmp	r7, #111	; 0x6f
 8000e0a:	bf0c      	ite	eq
 8000e0c:	2308      	moveq	r3, #8
 8000e0e:	230a      	movne	r3, #10
 8000e10:	2100      	movs	r1, #0
 8000e12:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000e16:	6865      	ldr	r5, [r4, #4]
 8000e18:	60a5      	str	r5, [r4, #8]
 8000e1a:	2d00      	cmp	r5, #0
 8000e1c:	bfa2      	ittt	ge
 8000e1e:	6821      	ldrge	r1, [r4, #0]
 8000e20:	f021 0104 	bicge.w	r1, r1, #4
 8000e24:	6021      	strge	r1, [r4, #0]
 8000e26:	b90e      	cbnz	r6, 8000e2c <_printf_i+0x114>
 8000e28:	2d00      	cmp	r5, #0
 8000e2a:	d04b      	beq.n	8000ec4 <_printf_i+0x1ac>
 8000e2c:	4615      	mov	r5, r2
 8000e2e:	fbb6 f1f3 	udiv	r1, r6, r3
 8000e32:	fb03 6711 	mls	r7, r3, r1, r6
 8000e36:	5dc7      	ldrb	r7, [r0, r7]
 8000e38:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000e3c:	4637      	mov	r7, r6
 8000e3e:	42bb      	cmp	r3, r7
 8000e40:	460e      	mov	r6, r1
 8000e42:	d9f4      	bls.n	8000e2e <_printf_i+0x116>
 8000e44:	2b08      	cmp	r3, #8
 8000e46:	d10b      	bne.n	8000e60 <_printf_i+0x148>
 8000e48:	6823      	ldr	r3, [r4, #0]
 8000e4a:	07de      	lsls	r6, r3, #31
 8000e4c:	d508      	bpl.n	8000e60 <_printf_i+0x148>
 8000e4e:	6923      	ldr	r3, [r4, #16]
 8000e50:	6861      	ldr	r1, [r4, #4]
 8000e52:	4299      	cmp	r1, r3
 8000e54:	bfde      	ittt	le
 8000e56:	2330      	movle	r3, #48	; 0x30
 8000e58:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000e5c:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8000e60:	1b52      	subs	r2, r2, r5
 8000e62:	6122      	str	r2, [r4, #16]
 8000e64:	f8cd a000 	str.w	sl, [sp]
 8000e68:	464b      	mov	r3, r9
 8000e6a:	aa03      	add	r2, sp, #12
 8000e6c:	4621      	mov	r1, r4
 8000e6e:	4640      	mov	r0, r8
 8000e70:	f7ff fee4 	bl	8000c3c <_printf_common>
 8000e74:	3001      	adds	r0, #1
 8000e76:	d14a      	bne.n	8000f0e <_printf_i+0x1f6>
 8000e78:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000e7c:	b004      	add	sp, #16
 8000e7e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e82:	6823      	ldr	r3, [r4, #0]
 8000e84:	f043 0320 	orr.w	r3, r3, #32
 8000e88:	6023      	str	r3, [r4, #0]
 8000e8a:	4833      	ldr	r0, [pc, #204]	; (8000f58 <_printf_i+0x240>)
 8000e8c:	2778      	movs	r7, #120	; 0x78
 8000e8e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000e92:	6823      	ldr	r3, [r4, #0]
 8000e94:	6829      	ldr	r1, [r5, #0]
 8000e96:	061f      	lsls	r7, r3, #24
 8000e98:	f851 6b04 	ldr.w	r6, [r1], #4
 8000e9c:	d402      	bmi.n	8000ea4 <_printf_i+0x18c>
 8000e9e:	065f      	lsls	r7, r3, #25
 8000ea0:	bf48      	it	mi
 8000ea2:	b2b6      	uxthmi	r6, r6
 8000ea4:	07df      	lsls	r7, r3, #31
 8000ea6:	bf48      	it	mi
 8000ea8:	f043 0320 	orrmi.w	r3, r3, #32
 8000eac:	6029      	str	r1, [r5, #0]
 8000eae:	bf48      	it	mi
 8000eb0:	6023      	strmi	r3, [r4, #0]
 8000eb2:	b91e      	cbnz	r6, 8000ebc <_printf_i+0x1a4>
 8000eb4:	6823      	ldr	r3, [r4, #0]
 8000eb6:	f023 0320 	bic.w	r3, r3, #32
 8000eba:	6023      	str	r3, [r4, #0]
 8000ebc:	2310      	movs	r3, #16
 8000ebe:	e7a7      	b.n	8000e10 <_printf_i+0xf8>
 8000ec0:	4824      	ldr	r0, [pc, #144]	; (8000f54 <_printf_i+0x23c>)
 8000ec2:	e7e4      	b.n	8000e8e <_printf_i+0x176>
 8000ec4:	4615      	mov	r5, r2
 8000ec6:	e7bd      	b.n	8000e44 <_printf_i+0x12c>
 8000ec8:	682b      	ldr	r3, [r5, #0]
 8000eca:	6826      	ldr	r6, [r4, #0]
 8000ecc:	6961      	ldr	r1, [r4, #20]
 8000ece:	1d18      	adds	r0, r3, #4
 8000ed0:	6028      	str	r0, [r5, #0]
 8000ed2:	0635      	lsls	r5, r6, #24
 8000ed4:	681b      	ldr	r3, [r3, #0]
 8000ed6:	d501      	bpl.n	8000edc <_printf_i+0x1c4>
 8000ed8:	6019      	str	r1, [r3, #0]
 8000eda:	e002      	b.n	8000ee2 <_printf_i+0x1ca>
 8000edc:	0670      	lsls	r0, r6, #25
 8000ede:	d5fb      	bpl.n	8000ed8 <_printf_i+0x1c0>
 8000ee0:	8019      	strh	r1, [r3, #0]
 8000ee2:	2300      	movs	r3, #0
 8000ee4:	6123      	str	r3, [r4, #16]
 8000ee6:	4615      	mov	r5, r2
 8000ee8:	e7bc      	b.n	8000e64 <_printf_i+0x14c>
 8000eea:	682b      	ldr	r3, [r5, #0]
 8000eec:	1d1a      	adds	r2, r3, #4
 8000eee:	602a      	str	r2, [r5, #0]
 8000ef0:	681d      	ldr	r5, [r3, #0]
 8000ef2:	6862      	ldr	r2, [r4, #4]
 8000ef4:	2100      	movs	r1, #0
 8000ef6:	4628      	mov	r0, r5
 8000ef8:	f7ff f972 	bl	80001e0 <memchr>
 8000efc:	b108      	cbz	r0, 8000f02 <_printf_i+0x1ea>
 8000efe:	1b40      	subs	r0, r0, r5
 8000f00:	6060      	str	r0, [r4, #4]
 8000f02:	6863      	ldr	r3, [r4, #4]
 8000f04:	6123      	str	r3, [r4, #16]
 8000f06:	2300      	movs	r3, #0
 8000f08:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000f0c:	e7aa      	b.n	8000e64 <_printf_i+0x14c>
 8000f0e:	6923      	ldr	r3, [r4, #16]
 8000f10:	462a      	mov	r2, r5
 8000f12:	4649      	mov	r1, r9
 8000f14:	4640      	mov	r0, r8
 8000f16:	47d0      	blx	sl
 8000f18:	3001      	adds	r0, #1
 8000f1a:	d0ad      	beq.n	8000e78 <_printf_i+0x160>
 8000f1c:	6823      	ldr	r3, [r4, #0]
 8000f1e:	079b      	lsls	r3, r3, #30
 8000f20:	d413      	bmi.n	8000f4a <_printf_i+0x232>
 8000f22:	68e0      	ldr	r0, [r4, #12]
 8000f24:	9b03      	ldr	r3, [sp, #12]
 8000f26:	4298      	cmp	r0, r3
 8000f28:	bfb8      	it	lt
 8000f2a:	4618      	movlt	r0, r3
 8000f2c:	e7a6      	b.n	8000e7c <_printf_i+0x164>
 8000f2e:	2301      	movs	r3, #1
 8000f30:	4632      	mov	r2, r6
 8000f32:	4649      	mov	r1, r9
 8000f34:	4640      	mov	r0, r8
 8000f36:	47d0      	blx	sl
 8000f38:	3001      	adds	r0, #1
 8000f3a:	d09d      	beq.n	8000e78 <_printf_i+0x160>
 8000f3c:	3501      	adds	r5, #1
 8000f3e:	68e3      	ldr	r3, [r4, #12]
 8000f40:	9903      	ldr	r1, [sp, #12]
 8000f42:	1a5b      	subs	r3, r3, r1
 8000f44:	42ab      	cmp	r3, r5
 8000f46:	dcf2      	bgt.n	8000f2e <_printf_i+0x216>
 8000f48:	e7eb      	b.n	8000f22 <_printf_i+0x20a>
 8000f4a:	2500      	movs	r5, #0
 8000f4c:	f104 0619 	add.w	r6, r4, #25
 8000f50:	e7f5      	b.n	8000f3e <_printf_i+0x226>
 8000f52:	bf00      	nop
 8000f54:	08001509 	.word	0x08001509
 8000f58:	0800151a 	.word	0x0800151a

08000f5c <__sflush_r>:
 8000f5c:	898a      	ldrh	r2, [r1, #12]
 8000f5e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000f62:	4605      	mov	r5, r0
 8000f64:	0710      	lsls	r0, r2, #28
 8000f66:	460c      	mov	r4, r1
 8000f68:	d458      	bmi.n	800101c <__sflush_r+0xc0>
 8000f6a:	684b      	ldr	r3, [r1, #4]
 8000f6c:	2b00      	cmp	r3, #0
 8000f6e:	dc05      	bgt.n	8000f7c <__sflush_r+0x20>
 8000f70:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000f72:	2b00      	cmp	r3, #0
 8000f74:	dc02      	bgt.n	8000f7c <__sflush_r+0x20>
 8000f76:	2000      	movs	r0, #0
 8000f78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000f7c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000f7e:	2e00      	cmp	r6, #0
 8000f80:	d0f9      	beq.n	8000f76 <__sflush_r+0x1a>
 8000f82:	2300      	movs	r3, #0
 8000f84:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000f88:	682f      	ldr	r7, [r5, #0]
 8000f8a:	6a21      	ldr	r1, [r4, #32]
 8000f8c:	602b      	str	r3, [r5, #0]
 8000f8e:	d032      	beq.n	8000ff6 <__sflush_r+0x9a>
 8000f90:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000f92:	89a3      	ldrh	r3, [r4, #12]
 8000f94:	075a      	lsls	r2, r3, #29
 8000f96:	d505      	bpl.n	8000fa4 <__sflush_r+0x48>
 8000f98:	6863      	ldr	r3, [r4, #4]
 8000f9a:	1ac0      	subs	r0, r0, r3
 8000f9c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000f9e:	b10b      	cbz	r3, 8000fa4 <__sflush_r+0x48>
 8000fa0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000fa2:	1ac0      	subs	r0, r0, r3
 8000fa4:	2300      	movs	r3, #0
 8000fa6:	4602      	mov	r2, r0
 8000fa8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000faa:	6a21      	ldr	r1, [r4, #32]
 8000fac:	4628      	mov	r0, r5
 8000fae:	47b0      	blx	r6
 8000fb0:	1c43      	adds	r3, r0, #1
 8000fb2:	89a3      	ldrh	r3, [r4, #12]
 8000fb4:	d106      	bne.n	8000fc4 <__sflush_r+0x68>
 8000fb6:	6829      	ldr	r1, [r5, #0]
 8000fb8:	291d      	cmp	r1, #29
 8000fba:	d82b      	bhi.n	8001014 <__sflush_r+0xb8>
 8000fbc:	4a29      	ldr	r2, [pc, #164]	; (8001064 <__sflush_r+0x108>)
 8000fbe:	410a      	asrs	r2, r1
 8000fc0:	07d6      	lsls	r6, r2, #31
 8000fc2:	d427      	bmi.n	8001014 <__sflush_r+0xb8>
 8000fc4:	2200      	movs	r2, #0
 8000fc6:	6062      	str	r2, [r4, #4]
 8000fc8:	04d9      	lsls	r1, r3, #19
 8000fca:	6922      	ldr	r2, [r4, #16]
 8000fcc:	6022      	str	r2, [r4, #0]
 8000fce:	d504      	bpl.n	8000fda <__sflush_r+0x7e>
 8000fd0:	1c42      	adds	r2, r0, #1
 8000fd2:	d101      	bne.n	8000fd8 <__sflush_r+0x7c>
 8000fd4:	682b      	ldr	r3, [r5, #0]
 8000fd6:	b903      	cbnz	r3, 8000fda <__sflush_r+0x7e>
 8000fd8:	6560      	str	r0, [r4, #84]	; 0x54
 8000fda:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000fdc:	602f      	str	r7, [r5, #0]
 8000fde:	2900      	cmp	r1, #0
 8000fe0:	d0c9      	beq.n	8000f76 <__sflush_r+0x1a>
 8000fe2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000fe6:	4299      	cmp	r1, r3
 8000fe8:	d002      	beq.n	8000ff0 <__sflush_r+0x94>
 8000fea:	4628      	mov	r0, r5
 8000fec:	f000 fa22 	bl	8001434 <_free_r>
 8000ff0:	2000      	movs	r0, #0
 8000ff2:	6360      	str	r0, [r4, #52]	; 0x34
 8000ff4:	e7c0      	b.n	8000f78 <__sflush_r+0x1c>
 8000ff6:	2301      	movs	r3, #1
 8000ff8:	4628      	mov	r0, r5
 8000ffa:	47b0      	blx	r6
 8000ffc:	1c41      	adds	r1, r0, #1
 8000ffe:	d1c8      	bne.n	8000f92 <__sflush_r+0x36>
 8001000:	682b      	ldr	r3, [r5, #0]
 8001002:	2b00      	cmp	r3, #0
 8001004:	d0c5      	beq.n	8000f92 <__sflush_r+0x36>
 8001006:	2b1d      	cmp	r3, #29
 8001008:	d001      	beq.n	800100e <__sflush_r+0xb2>
 800100a:	2b16      	cmp	r3, #22
 800100c:	d101      	bne.n	8001012 <__sflush_r+0xb6>
 800100e:	602f      	str	r7, [r5, #0]
 8001010:	e7b1      	b.n	8000f76 <__sflush_r+0x1a>
 8001012:	89a3      	ldrh	r3, [r4, #12]
 8001014:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001018:	81a3      	strh	r3, [r4, #12]
 800101a:	e7ad      	b.n	8000f78 <__sflush_r+0x1c>
 800101c:	690f      	ldr	r7, [r1, #16]
 800101e:	2f00      	cmp	r7, #0
 8001020:	d0a9      	beq.n	8000f76 <__sflush_r+0x1a>
 8001022:	0793      	lsls	r3, r2, #30
 8001024:	680e      	ldr	r6, [r1, #0]
 8001026:	bf08      	it	eq
 8001028:	694b      	ldreq	r3, [r1, #20]
 800102a:	600f      	str	r7, [r1, #0]
 800102c:	bf18      	it	ne
 800102e:	2300      	movne	r3, #0
 8001030:	eba6 0807 	sub.w	r8, r6, r7
 8001034:	608b      	str	r3, [r1, #8]
 8001036:	f1b8 0f00 	cmp.w	r8, #0
 800103a:	dd9c      	ble.n	8000f76 <__sflush_r+0x1a>
 800103c:	6a21      	ldr	r1, [r4, #32]
 800103e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001040:	4643      	mov	r3, r8
 8001042:	463a      	mov	r2, r7
 8001044:	4628      	mov	r0, r5
 8001046:	47b0      	blx	r6
 8001048:	2800      	cmp	r0, #0
 800104a:	dc06      	bgt.n	800105a <__sflush_r+0xfe>
 800104c:	89a3      	ldrh	r3, [r4, #12]
 800104e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001052:	81a3      	strh	r3, [r4, #12]
 8001054:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001058:	e78e      	b.n	8000f78 <__sflush_r+0x1c>
 800105a:	4407      	add	r7, r0
 800105c:	eba8 0800 	sub.w	r8, r8, r0
 8001060:	e7e9      	b.n	8001036 <__sflush_r+0xda>
 8001062:	bf00      	nop
 8001064:	dfbffffe 	.word	0xdfbffffe

08001068 <_fflush_r>:
 8001068:	b538      	push	{r3, r4, r5, lr}
 800106a:	690b      	ldr	r3, [r1, #16]
 800106c:	4605      	mov	r5, r0
 800106e:	460c      	mov	r4, r1
 8001070:	b913      	cbnz	r3, 8001078 <_fflush_r+0x10>
 8001072:	2500      	movs	r5, #0
 8001074:	4628      	mov	r0, r5
 8001076:	bd38      	pop	{r3, r4, r5, pc}
 8001078:	b118      	cbz	r0, 8001082 <_fflush_r+0x1a>
 800107a:	6a03      	ldr	r3, [r0, #32]
 800107c:	b90b      	cbnz	r3, 8001082 <_fflush_r+0x1a>
 800107e:	f7ff fb7d 	bl	800077c <__sinit>
 8001082:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001086:	2b00      	cmp	r3, #0
 8001088:	d0f3      	beq.n	8001072 <_fflush_r+0xa>
 800108a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800108c:	07d0      	lsls	r0, r2, #31
 800108e:	d404      	bmi.n	800109a <_fflush_r+0x32>
 8001090:	0599      	lsls	r1, r3, #22
 8001092:	d402      	bmi.n	800109a <_fflush_r+0x32>
 8001094:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001096:	f7ff fbeb 	bl	8000870 <__retarget_lock_acquire_recursive>
 800109a:	4628      	mov	r0, r5
 800109c:	4621      	mov	r1, r4
 800109e:	f7ff ff5d 	bl	8000f5c <__sflush_r>
 80010a2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80010a4:	07da      	lsls	r2, r3, #31
 80010a6:	4605      	mov	r5, r0
 80010a8:	d4e4      	bmi.n	8001074 <_fflush_r+0xc>
 80010aa:	89a3      	ldrh	r3, [r4, #12]
 80010ac:	059b      	lsls	r3, r3, #22
 80010ae:	d4e1      	bmi.n	8001074 <_fflush_r+0xc>
 80010b0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80010b2:	f7ff fbde 	bl	8000872 <__retarget_lock_release_recursive>
 80010b6:	e7dd      	b.n	8001074 <_fflush_r+0xc>

080010b8 <__malloc_lock>:
 80010b8:	4801      	ldr	r0, [pc, #4]	; (80010c0 <__malloc_lock+0x8>)
 80010ba:	f7ff bbd9 	b.w	8000870 <__retarget_lock_acquire_recursive>
 80010be:	bf00      	nop
 80010c0:	200001b8 	.word	0x200001b8

080010c4 <__malloc_unlock>:
 80010c4:	4801      	ldr	r0, [pc, #4]	; (80010cc <__malloc_unlock+0x8>)
 80010c6:	f7ff bbd4 	b.w	8000872 <__retarget_lock_release_recursive>
 80010ca:	bf00      	nop
 80010cc:	200001b8 	.word	0x200001b8

080010d0 <__sread>:
 80010d0:	b510      	push	{r4, lr}
 80010d2:	460c      	mov	r4, r1
 80010d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80010d8:	f000 f978 	bl	80013cc <_read_r>
 80010dc:	2800      	cmp	r0, #0
 80010de:	bfab      	itete	ge
 80010e0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80010e2:	89a3      	ldrhlt	r3, [r4, #12]
 80010e4:	181b      	addge	r3, r3, r0
 80010e6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80010ea:	bfac      	ite	ge
 80010ec:	6563      	strge	r3, [r4, #84]	; 0x54
 80010ee:	81a3      	strhlt	r3, [r4, #12]
 80010f0:	bd10      	pop	{r4, pc}

080010f2 <__swrite>:
 80010f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80010f6:	461f      	mov	r7, r3
 80010f8:	898b      	ldrh	r3, [r1, #12]
 80010fa:	05db      	lsls	r3, r3, #23
 80010fc:	4605      	mov	r5, r0
 80010fe:	460c      	mov	r4, r1
 8001100:	4616      	mov	r6, r2
 8001102:	d505      	bpl.n	8001110 <__swrite+0x1e>
 8001104:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001108:	2302      	movs	r3, #2
 800110a:	2200      	movs	r2, #0
 800110c:	f000 f94c 	bl	80013a8 <_lseek_r>
 8001110:	89a3      	ldrh	r3, [r4, #12]
 8001112:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001116:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800111a:	81a3      	strh	r3, [r4, #12]
 800111c:	4632      	mov	r2, r6
 800111e:	463b      	mov	r3, r7
 8001120:	4628      	mov	r0, r5
 8001122:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001126:	f000 b973 	b.w	8001410 <_write_r>

0800112a <__sseek>:
 800112a:	b510      	push	{r4, lr}
 800112c:	460c      	mov	r4, r1
 800112e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001132:	f000 f939 	bl	80013a8 <_lseek_r>
 8001136:	1c43      	adds	r3, r0, #1
 8001138:	89a3      	ldrh	r3, [r4, #12]
 800113a:	bf15      	itete	ne
 800113c:	6560      	strne	r0, [r4, #84]	; 0x54
 800113e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001142:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001146:	81a3      	strheq	r3, [r4, #12]
 8001148:	bf18      	it	ne
 800114a:	81a3      	strhne	r3, [r4, #12]
 800114c:	bd10      	pop	{r4, pc}

0800114e <__sclose>:
 800114e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001152:	f000 b8f7 	b.w	8001344 <_close_r>

08001156 <__swbuf_r>:
 8001156:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001158:	460e      	mov	r6, r1
 800115a:	4614      	mov	r4, r2
 800115c:	4605      	mov	r5, r0
 800115e:	b118      	cbz	r0, 8001168 <__swbuf_r+0x12>
 8001160:	6a03      	ldr	r3, [r0, #32]
 8001162:	b90b      	cbnz	r3, 8001168 <__swbuf_r+0x12>
 8001164:	f7ff fb0a 	bl	800077c <__sinit>
 8001168:	69a3      	ldr	r3, [r4, #24]
 800116a:	60a3      	str	r3, [r4, #8]
 800116c:	89a3      	ldrh	r3, [r4, #12]
 800116e:	071a      	lsls	r2, r3, #28
 8001170:	d525      	bpl.n	80011be <__swbuf_r+0x68>
 8001172:	6923      	ldr	r3, [r4, #16]
 8001174:	b31b      	cbz	r3, 80011be <__swbuf_r+0x68>
 8001176:	6823      	ldr	r3, [r4, #0]
 8001178:	6922      	ldr	r2, [r4, #16]
 800117a:	1a98      	subs	r0, r3, r2
 800117c:	6963      	ldr	r3, [r4, #20]
 800117e:	b2f6      	uxtb	r6, r6
 8001180:	4283      	cmp	r3, r0
 8001182:	4637      	mov	r7, r6
 8001184:	dc04      	bgt.n	8001190 <__swbuf_r+0x3a>
 8001186:	4621      	mov	r1, r4
 8001188:	4628      	mov	r0, r5
 800118a:	f7ff ff6d 	bl	8001068 <_fflush_r>
 800118e:	b9e0      	cbnz	r0, 80011ca <__swbuf_r+0x74>
 8001190:	68a3      	ldr	r3, [r4, #8]
 8001192:	3b01      	subs	r3, #1
 8001194:	60a3      	str	r3, [r4, #8]
 8001196:	6823      	ldr	r3, [r4, #0]
 8001198:	1c5a      	adds	r2, r3, #1
 800119a:	6022      	str	r2, [r4, #0]
 800119c:	701e      	strb	r6, [r3, #0]
 800119e:	6962      	ldr	r2, [r4, #20]
 80011a0:	1c43      	adds	r3, r0, #1
 80011a2:	429a      	cmp	r2, r3
 80011a4:	d004      	beq.n	80011b0 <__swbuf_r+0x5a>
 80011a6:	89a3      	ldrh	r3, [r4, #12]
 80011a8:	07db      	lsls	r3, r3, #31
 80011aa:	d506      	bpl.n	80011ba <__swbuf_r+0x64>
 80011ac:	2e0a      	cmp	r6, #10
 80011ae:	d104      	bne.n	80011ba <__swbuf_r+0x64>
 80011b0:	4621      	mov	r1, r4
 80011b2:	4628      	mov	r0, r5
 80011b4:	f7ff ff58 	bl	8001068 <_fflush_r>
 80011b8:	b938      	cbnz	r0, 80011ca <__swbuf_r+0x74>
 80011ba:	4638      	mov	r0, r7
 80011bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80011be:	4621      	mov	r1, r4
 80011c0:	4628      	mov	r0, r5
 80011c2:	f000 f805 	bl	80011d0 <__swsetup_r>
 80011c6:	2800      	cmp	r0, #0
 80011c8:	d0d5      	beq.n	8001176 <__swbuf_r+0x20>
 80011ca:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 80011ce:	e7f4      	b.n	80011ba <__swbuf_r+0x64>

080011d0 <__swsetup_r>:
 80011d0:	b538      	push	{r3, r4, r5, lr}
 80011d2:	4b2a      	ldr	r3, [pc, #168]	; (800127c <__swsetup_r+0xac>)
 80011d4:	4605      	mov	r5, r0
 80011d6:	6818      	ldr	r0, [r3, #0]
 80011d8:	460c      	mov	r4, r1
 80011da:	b118      	cbz	r0, 80011e4 <__swsetup_r+0x14>
 80011dc:	6a03      	ldr	r3, [r0, #32]
 80011de:	b90b      	cbnz	r3, 80011e4 <__swsetup_r+0x14>
 80011e0:	f7ff facc 	bl	800077c <__sinit>
 80011e4:	89a3      	ldrh	r3, [r4, #12]
 80011e6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80011ea:	0718      	lsls	r0, r3, #28
 80011ec:	d422      	bmi.n	8001234 <__swsetup_r+0x64>
 80011ee:	06d9      	lsls	r1, r3, #27
 80011f0:	d407      	bmi.n	8001202 <__swsetup_r+0x32>
 80011f2:	2309      	movs	r3, #9
 80011f4:	602b      	str	r3, [r5, #0]
 80011f6:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80011fa:	81a3      	strh	r3, [r4, #12]
 80011fc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001200:	e034      	b.n	800126c <__swsetup_r+0x9c>
 8001202:	0758      	lsls	r0, r3, #29
 8001204:	d512      	bpl.n	800122c <__swsetup_r+0x5c>
 8001206:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001208:	b141      	cbz	r1, 800121c <__swsetup_r+0x4c>
 800120a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800120e:	4299      	cmp	r1, r3
 8001210:	d002      	beq.n	8001218 <__swsetup_r+0x48>
 8001212:	4628      	mov	r0, r5
 8001214:	f000 f90e 	bl	8001434 <_free_r>
 8001218:	2300      	movs	r3, #0
 800121a:	6363      	str	r3, [r4, #52]	; 0x34
 800121c:	89a3      	ldrh	r3, [r4, #12]
 800121e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001222:	81a3      	strh	r3, [r4, #12]
 8001224:	2300      	movs	r3, #0
 8001226:	6063      	str	r3, [r4, #4]
 8001228:	6923      	ldr	r3, [r4, #16]
 800122a:	6023      	str	r3, [r4, #0]
 800122c:	89a3      	ldrh	r3, [r4, #12]
 800122e:	f043 0308 	orr.w	r3, r3, #8
 8001232:	81a3      	strh	r3, [r4, #12]
 8001234:	6923      	ldr	r3, [r4, #16]
 8001236:	b94b      	cbnz	r3, 800124c <__swsetup_r+0x7c>
 8001238:	89a3      	ldrh	r3, [r4, #12]
 800123a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800123e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001242:	d003      	beq.n	800124c <__swsetup_r+0x7c>
 8001244:	4621      	mov	r1, r4
 8001246:	4628      	mov	r0, r5
 8001248:	f000 f840 	bl	80012cc <__smakebuf_r>
 800124c:	89a0      	ldrh	r0, [r4, #12]
 800124e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001252:	f010 0301 	ands.w	r3, r0, #1
 8001256:	d00a      	beq.n	800126e <__swsetup_r+0x9e>
 8001258:	2300      	movs	r3, #0
 800125a:	60a3      	str	r3, [r4, #8]
 800125c:	6963      	ldr	r3, [r4, #20]
 800125e:	425b      	negs	r3, r3
 8001260:	61a3      	str	r3, [r4, #24]
 8001262:	6923      	ldr	r3, [r4, #16]
 8001264:	b943      	cbnz	r3, 8001278 <__swsetup_r+0xa8>
 8001266:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800126a:	d1c4      	bne.n	80011f6 <__swsetup_r+0x26>
 800126c:	bd38      	pop	{r3, r4, r5, pc}
 800126e:	0781      	lsls	r1, r0, #30
 8001270:	bf58      	it	pl
 8001272:	6963      	ldrpl	r3, [r4, #20]
 8001274:	60a3      	str	r3, [r4, #8]
 8001276:	e7f4      	b.n	8001262 <__swsetup_r+0x92>
 8001278:	2000      	movs	r0, #0
 800127a:	e7f7      	b.n	800126c <__swsetup_r+0x9c>
 800127c:	20000058 	.word	0x20000058

08001280 <__swhatbuf_r>:
 8001280:	b570      	push	{r4, r5, r6, lr}
 8001282:	460c      	mov	r4, r1
 8001284:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001288:	2900      	cmp	r1, #0
 800128a:	b096      	sub	sp, #88	; 0x58
 800128c:	4615      	mov	r5, r2
 800128e:	461e      	mov	r6, r3
 8001290:	da0d      	bge.n	80012ae <__swhatbuf_r+0x2e>
 8001292:	89a3      	ldrh	r3, [r4, #12]
 8001294:	f013 0f80 	tst.w	r3, #128	; 0x80
 8001298:	f04f 0100 	mov.w	r1, #0
 800129c:	bf0c      	ite	eq
 800129e:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80012a2:	2340      	movne	r3, #64	; 0x40
 80012a4:	2000      	movs	r0, #0
 80012a6:	6031      	str	r1, [r6, #0]
 80012a8:	602b      	str	r3, [r5, #0]
 80012aa:	b016      	add	sp, #88	; 0x58
 80012ac:	bd70      	pop	{r4, r5, r6, pc}
 80012ae:	466a      	mov	r2, sp
 80012b0:	f000 f858 	bl	8001364 <_fstat_r>
 80012b4:	2800      	cmp	r0, #0
 80012b6:	dbec      	blt.n	8001292 <__swhatbuf_r+0x12>
 80012b8:	9901      	ldr	r1, [sp, #4]
 80012ba:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80012be:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80012c2:	4259      	negs	r1, r3
 80012c4:	4159      	adcs	r1, r3
 80012c6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80012ca:	e7eb      	b.n	80012a4 <__swhatbuf_r+0x24>

080012cc <__smakebuf_r>:
 80012cc:	898b      	ldrh	r3, [r1, #12]
 80012ce:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80012d0:	079d      	lsls	r5, r3, #30
 80012d2:	4606      	mov	r6, r0
 80012d4:	460c      	mov	r4, r1
 80012d6:	d507      	bpl.n	80012e8 <__smakebuf_r+0x1c>
 80012d8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80012dc:	6023      	str	r3, [r4, #0]
 80012de:	6123      	str	r3, [r4, #16]
 80012e0:	2301      	movs	r3, #1
 80012e2:	6163      	str	r3, [r4, #20]
 80012e4:	b002      	add	sp, #8
 80012e6:	bd70      	pop	{r4, r5, r6, pc}
 80012e8:	ab01      	add	r3, sp, #4
 80012ea:	466a      	mov	r2, sp
 80012ec:	f7ff ffc8 	bl	8001280 <__swhatbuf_r>
 80012f0:	9900      	ldr	r1, [sp, #0]
 80012f2:	4605      	mov	r5, r0
 80012f4:	4630      	mov	r0, r6
 80012f6:	f7ff fc21 	bl	8000b3c <_malloc_r>
 80012fa:	b948      	cbnz	r0, 8001310 <__smakebuf_r+0x44>
 80012fc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001300:	059a      	lsls	r2, r3, #22
 8001302:	d4ef      	bmi.n	80012e4 <__smakebuf_r+0x18>
 8001304:	f023 0303 	bic.w	r3, r3, #3
 8001308:	f043 0302 	orr.w	r3, r3, #2
 800130c:	81a3      	strh	r3, [r4, #12]
 800130e:	e7e3      	b.n	80012d8 <__smakebuf_r+0xc>
 8001310:	89a3      	ldrh	r3, [r4, #12]
 8001312:	6020      	str	r0, [r4, #0]
 8001314:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001318:	81a3      	strh	r3, [r4, #12]
 800131a:	9b00      	ldr	r3, [sp, #0]
 800131c:	6163      	str	r3, [r4, #20]
 800131e:	9b01      	ldr	r3, [sp, #4]
 8001320:	6120      	str	r0, [r4, #16]
 8001322:	b15b      	cbz	r3, 800133c <__smakebuf_r+0x70>
 8001324:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001328:	4630      	mov	r0, r6
 800132a:	f000 f82d 	bl	8001388 <_isatty_r>
 800132e:	b128      	cbz	r0, 800133c <__smakebuf_r+0x70>
 8001330:	89a3      	ldrh	r3, [r4, #12]
 8001332:	f023 0303 	bic.w	r3, r3, #3
 8001336:	f043 0301 	orr.w	r3, r3, #1
 800133a:	81a3      	strh	r3, [r4, #12]
 800133c:	89a3      	ldrh	r3, [r4, #12]
 800133e:	431d      	orrs	r5, r3
 8001340:	81a5      	strh	r5, [r4, #12]
 8001342:	e7cf      	b.n	80012e4 <__smakebuf_r+0x18>

08001344 <_close_r>:
 8001344:	b538      	push	{r3, r4, r5, lr}
 8001346:	4d06      	ldr	r5, [pc, #24]	; (8001360 <_close_r+0x1c>)
 8001348:	2300      	movs	r3, #0
 800134a:	4604      	mov	r4, r0
 800134c:	4608      	mov	r0, r1
 800134e:	602b      	str	r3, [r5, #0]
 8001350:	f7ff f86f 	bl	8000432 <_close>
 8001354:	1c43      	adds	r3, r0, #1
 8001356:	d102      	bne.n	800135e <_close_r+0x1a>
 8001358:	682b      	ldr	r3, [r5, #0]
 800135a:	b103      	cbz	r3, 800135e <_close_r+0x1a>
 800135c:	6023      	str	r3, [r4, #0]
 800135e:	bd38      	pop	{r3, r4, r5, pc}
 8001360:	200001c4 	.word	0x200001c4

08001364 <_fstat_r>:
 8001364:	b538      	push	{r3, r4, r5, lr}
 8001366:	4d07      	ldr	r5, [pc, #28]	; (8001384 <_fstat_r+0x20>)
 8001368:	2300      	movs	r3, #0
 800136a:	4604      	mov	r4, r0
 800136c:	4608      	mov	r0, r1
 800136e:	4611      	mov	r1, r2
 8001370:	602b      	str	r3, [r5, #0]
 8001372:	f7ff f86a 	bl	800044a <_fstat>
 8001376:	1c43      	adds	r3, r0, #1
 8001378:	d102      	bne.n	8001380 <_fstat_r+0x1c>
 800137a:	682b      	ldr	r3, [r5, #0]
 800137c:	b103      	cbz	r3, 8001380 <_fstat_r+0x1c>
 800137e:	6023      	str	r3, [r4, #0]
 8001380:	bd38      	pop	{r3, r4, r5, pc}
 8001382:	bf00      	nop
 8001384:	200001c4 	.word	0x200001c4

08001388 <_isatty_r>:
 8001388:	b538      	push	{r3, r4, r5, lr}
 800138a:	4d06      	ldr	r5, [pc, #24]	; (80013a4 <_isatty_r+0x1c>)
 800138c:	2300      	movs	r3, #0
 800138e:	4604      	mov	r4, r0
 8001390:	4608      	mov	r0, r1
 8001392:	602b      	str	r3, [r5, #0]
 8001394:	f7ff f869 	bl	800046a <_isatty>
 8001398:	1c43      	adds	r3, r0, #1
 800139a:	d102      	bne.n	80013a2 <_isatty_r+0x1a>
 800139c:	682b      	ldr	r3, [r5, #0]
 800139e:	b103      	cbz	r3, 80013a2 <_isatty_r+0x1a>
 80013a0:	6023      	str	r3, [r4, #0]
 80013a2:	bd38      	pop	{r3, r4, r5, pc}
 80013a4:	200001c4 	.word	0x200001c4

080013a8 <_lseek_r>:
 80013a8:	b538      	push	{r3, r4, r5, lr}
 80013aa:	4d07      	ldr	r5, [pc, #28]	; (80013c8 <_lseek_r+0x20>)
 80013ac:	4604      	mov	r4, r0
 80013ae:	4608      	mov	r0, r1
 80013b0:	4611      	mov	r1, r2
 80013b2:	2200      	movs	r2, #0
 80013b4:	602a      	str	r2, [r5, #0]
 80013b6:	461a      	mov	r2, r3
 80013b8:	f7ff f862 	bl	8000480 <_lseek>
 80013bc:	1c43      	adds	r3, r0, #1
 80013be:	d102      	bne.n	80013c6 <_lseek_r+0x1e>
 80013c0:	682b      	ldr	r3, [r5, #0]
 80013c2:	b103      	cbz	r3, 80013c6 <_lseek_r+0x1e>
 80013c4:	6023      	str	r3, [r4, #0]
 80013c6:	bd38      	pop	{r3, r4, r5, pc}
 80013c8:	200001c4 	.word	0x200001c4

080013cc <_read_r>:
 80013cc:	b538      	push	{r3, r4, r5, lr}
 80013ce:	4d07      	ldr	r5, [pc, #28]	; (80013ec <_read_r+0x20>)
 80013d0:	4604      	mov	r4, r0
 80013d2:	4608      	mov	r0, r1
 80013d4:	4611      	mov	r1, r2
 80013d6:	2200      	movs	r2, #0
 80013d8:	602a      	str	r2, [r5, #0]
 80013da:	461a      	mov	r2, r3
 80013dc:	f7fe fff0 	bl	80003c0 <_read>
 80013e0:	1c43      	adds	r3, r0, #1
 80013e2:	d102      	bne.n	80013ea <_read_r+0x1e>
 80013e4:	682b      	ldr	r3, [r5, #0]
 80013e6:	b103      	cbz	r3, 80013ea <_read_r+0x1e>
 80013e8:	6023      	str	r3, [r4, #0]
 80013ea:	bd38      	pop	{r3, r4, r5, pc}
 80013ec:	200001c4 	.word	0x200001c4

080013f0 <_sbrk_r>:
 80013f0:	b538      	push	{r3, r4, r5, lr}
 80013f2:	4d06      	ldr	r5, [pc, #24]	; (800140c <_sbrk_r+0x1c>)
 80013f4:	2300      	movs	r3, #0
 80013f6:	4604      	mov	r4, r0
 80013f8:	4608      	mov	r0, r1
 80013fa:	602b      	str	r3, [r5, #0]
 80013fc:	f7ff f84e 	bl	800049c <_sbrk>
 8001400:	1c43      	adds	r3, r0, #1
 8001402:	d102      	bne.n	800140a <_sbrk_r+0x1a>
 8001404:	682b      	ldr	r3, [r5, #0]
 8001406:	b103      	cbz	r3, 800140a <_sbrk_r+0x1a>
 8001408:	6023      	str	r3, [r4, #0]
 800140a:	bd38      	pop	{r3, r4, r5, pc}
 800140c:	200001c4 	.word	0x200001c4

08001410 <_write_r>:
 8001410:	b538      	push	{r3, r4, r5, lr}
 8001412:	4d07      	ldr	r5, [pc, #28]	; (8001430 <_write_r+0x20>)
 8001414:	4604      	mov	r4, r0
 8001416:	4608      	mov	r0, r1
 8001418:	4611      	mov	r1, r2
 800141a:	2200      	movs	r2, #0
 800141c:	602a      	str	r2, [r5, #0]
 800141e:	461a      	mov	r2, r3
 8001420:	f7fe ffeb 	bl	80003fa <_write>
 8001424:	1c43      	adds	r3, r0, #1
 8001426:	d102      	bne.n	800142e <_write_r+0x1e>
 8001428:	682b      	ldr	r3, [r5, #0]
 800142a:	b103      	cbz	r3, 800142e <_write_r+0x1e>
 800142c:	6023      	str	r3, [r4, #0]
 800142e:	bd38      	pop	{r3, r4, r5, pc}
 8001430:	200001c4 	.word	0x200001c4

08001434 <_free_r>:
 8001434:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001436:	2900      	cmp	r1, #0
 8001438:	d044      	beq.n	80014c4 <_free_r+0x90>
 800143a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800143e:	9001      	str	r0, [sp, #4]
 8001440:	2b00      	cmp	r3, #0
 8001442:	f1a1 0404 	sub.w	r4, r1, #4
 8001446:	bfb8      	it	lt
 8001448:	18e4      	addlt	r4, r4, r3
 800144a:	f7ff fe35 	bl	80010b8 <__malloc_lock>
 800144e:	4a1e      	ldr	r2, [pc, #120]	; (80014c8 <_free_r+0x94>)
 8001450:	9801      	ldr	r0, [sp, #4]
 8001452:	6813      	ldr	r3, [r2, #0]
 8001454:	b933      	cbnz	r3, 8001464 <_free_r+0x30>
 8001456:	6063      	str	r3, [r4, #4]
 8001458:	6014      	str	r4, [r2, #0]
 800145a:	b003      	add	sp, #12
 800145c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8001460:	f7ff be30 	b.w	80010c4 <__malloc_unlock>
 8001464:	42a3      	cmp	r3, r4
 8001466:	d908      	bls.n	800147a <_free_r+0x46>
 8001468:	6825      	ldr	r5, [r4, #0]
 800146a:	1961      	adds	r1, r4, r5
 800146c:	428b      	cmp	r3, r1
 800146e:	bf01      	itttt	eq
 8001470:	6819      	ldreq	r1, [r3, #0]
 8001472:	685b      	ldreq	r3, [r3, #4]
 8001474:	1949      	addeq	r1, r1, r5
 8001476:	6021      	streq	r1, [r4, #0]
 8001478:	e7ed      	b.n	8001456 <_free_r+0x22>
 800147a:	461a      	mov	r2, r3
 800147c:	685b      	ldr	r3, [r3, #4]
 800147e:	b10b      	cbz	r3, 8001484 <_free_r+0x50>
 8001480:	42a3      	cmp	r3, r4
 8001482:	d9fa      	bls.n	800147a <_free_r+0x46>
 8001484:	6811      	ldr	r1, [r2, #0]
 8001486:	1855      	adds	r5, r2, r1
 8001488:	42a5      	cmp	r5, r4
 800148a:	d10b      	bne.n	80014a4 <_free_r+0x70>
 800148c:	6824      	ldr	r4, [r4, #0]
 800148e:	4421      	add	r1, r4
 8001490:	1854      	adds	r4, r2, r1
 8001492:	42a3      	cmp	r3, r4
 8001494:	6011      	str	r1, [r2, #0]
 8001496:	d1e0      	bne.n	800145a <_free_r+0x26>
 8001498:	681c      	ldr	r4, [r3, #0]
 800149a:	685b      	ldr	r3, [r3, #4]
 800149c:	6053      	str	r3, [r2, #4]
 800149e:	440c      	add	r4, r1
 80014a0:	6014      	str	r4, [r2, #0]
 80014a2:	e7da      	b.n	800145a <_free_r+0x26>
 80014a4:	d902      	bls.n	80014ac <_free_r+0x78>
 80014a6:	230c      	movs	r3, #12
 80014a8:	6003      	str	r3, [r0, #0]
 80014aa:	e7d6      	b.n	800145a <_free_r+0x26>
 80014ac:	6825      	ldr	r5, [r4, #0]
 80014ae:	1961      	adds	r1, r4, r5
 80014b0:	428b      	cmp	r3, r1
 80014b2:	bf04      	itt	eq
 80014b4:	6819      	ldreq	r1, [r3, #0]
 80014b6:	685b      	ldreq	r3, [r3, #4]
 80014b8:	6063      	str	r3, [r4, #4]
 80014ba:	bf04      	itt	eq
 80014bc:	1949      	addeq	r1, r1, r5
 80014be:	6021      	streq	r1, [r4, #0]
 80014c0:	6054      	str	r4, [r2, #4]
 80014c2:	e7ca      	b.n	800145a <_free_r+0x26>
 80014c4:	b003      	add	sp, #12
 80014c6:	bd30      	pop	{r4, r5, pc}
 80014c8:	200001bc 	.word	0x200001bc

080014cc <_init>:
 80014cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014ce:	bf00      	nop
 80014d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014d2:	bc08      	pop	{r3}
 80014d4:	469e      	mov	lr, r3
 80014d6:	4770      	bx	lr

080014d8 <_fini>:
 80014d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014da:	bf00      	nop
 80014dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014de:	bc08      	pop	{r3}
 80014e0:	469e      	mov	lr, r3
 80014e2:	4770      	bx	lr
