
18_Systick_Interrupt.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001298  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000004c  08001438  08001438  00011438  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001484  08001484  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  08001484  08001484  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001484  08001484  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001484  08001484  00011484  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001488  08001488  00011488  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  0800148c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  080014e8  0002005c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  080014e8  000201c8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY
 13 .debug_info   000010f7  00000000  00000000  000200cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000605  00000000  00000000  000211c6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000198  00000000  00000000  000217d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000116  00000000  00000000  00021968  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001fb6  00000000  00000000  00021a7e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001fbb  00000000  00000000  00023a34  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00055483  00000000  00000000  000259ef  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000c68  00000000  00000000  0007ae74  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000080  00000000  00000000  0007badc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	2000005c 	.word	0x2000005c
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08001420 	.word	0x08001420

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000060 	.word	0x20000060
 80001dc:	08001420 	.word	0x08001420

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <main>:
#define LED			PIN5

static void systick_callback(void);

int main(void)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	af00      	add	r7, sp, #0
		RCC->AHB1ENR |=GPIOAEN;
 8000284:	4b0b      	ldr	r3, [pc, #44]	; (80002b4 <main+0x34>)
 8000286:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000288:	4a0a      	ldr	r2, [pc, #40]	; (80002b4 <main+0x34>)
 800028a:	f043 0301 	orr.w	r3, r3, #1
 800028e:	6313      	str	r3, [r2, #48]	; 0x30

		GPIOA->MODER |= (1U<<10);
 8000290:	4b09      	ldr	r3, [pc, #36]	; (80002b8 <main+0x38>)
 8000292:	681b      	ldr	r3, [r3, #0]
 8000294:	4a08      	ldr	r2, [pc, #32]	; (80002b8 <main+0x38>)
 8000296:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800029a:	6013      	str	r3, [r2, #0]
		GPIOA->MODER &=~ (1U<<11);
 800029c:	4b06      	ldr	r3, [pc, #24]	; (80002b8 <main+0x38>)
 800029e:	681b      	ldr	r3, [r3, #0]
 80002a0:	4a05      	ldr	r2, [pc, #20]	; (80002b8 <main+0x38>)
 80002a2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80002a6:	6013      	str	r3, [r2, #0]

		uart2_tx_init();
 80002a8:	f000 f8e4 	bl	8000474 <uart2_tx_init>
		systick_1hz_Interrupt();
 80002ac:	f000 f8c2 	bl	8000434 <systick_1hz_Interrupt>



	while(1)
 80002b0:	e7fe      	b.n	80002b0 <main+0x30>
 80002b2:	bf00      	nop
 80002b4:	40023800 	.word	0x40023800
 80002b8:	40020000 	.word	0x40020000

080002bc <systick_callback>:
	}
}


static void systick_callback(void)
{
 80002bc:	b580      	push	{r7, lr}
 80002be:	af00      	add	r7, sp, #0
	printf("A second passed !! \n\r");
 80002c0:	4805      	ldr	r0, [pc, #20]	; (80002d8 <systick_callback+0x1c>)
 80002c2:	f000 fa3b 	bl	800073c <iprintf>
	GPIOA->ODR ^= LED;
 80002c6:	4b05      	ldr	r3, [pc, #20]	; (80002dc <systick_callback+0x20>)
 80002c8:	695b      	ldr	r3, [r3, #20]
 80002ca:	4a04      	ldr	r2, [pc, #16]	; (80002dc <systick_callback+0x20>)
 80002cc:	f083 0320 	eor.w	r3, r3, #32
 80002d0:	6153      	str	r3, [r2, #20]
}
 80002d2:	bf00      	nop
 80002d4:	bd80      	pop	{r7, pc}
 80002d6:	bf00      	nop
 80002d8:	08001438 	.word	0x08001438
 80002dc:	40020000 	.word	0x40020000

080002e0 <SysTick_Handler>:

void SysTick_Handler(void)
{
 80002e0:	b580      	push	{r7, lr}
 80002e2:	af00      	add	r7, sp, #0
	//Do Something
	systick_callback();
 80002e4:	f7ff ffea 	bl	80002bc <systick_callback>
}
 80002e8:	bf00      	nop
 80002ea:	bd80      	pop	{r7, pc}

080002ec <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002ec:	b580      	push	{r7, lr}
 80002ee:	b086      	sub	sp, #24
 80002f0:	af00      	add	r7, sp, #0
 80002f2:	60f8      	str	r0, [r7, #12]
 80002f4:	60b9      	str	r1, [r7, #8]
 80002f6:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002f8:	2300      	movs	r3, #0
 80002fa:	617b      	str	r3, [r7, #20]
 80002fc:	e00a      	b.n	8000314 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80002fe:	f3af 8000 	nop.w
 8000302:	4601      	mov	r1, r0
 8000304:	68bb      	ldr	r3, [r7, #8]
 8000306:	1c5a      	adds	r2, r3, #1
 8000308:	60ba      	str	r2, [r7, #8]
 800030a:	b2ca      	uxtb	r2, r1
 800030c:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800030e:	697b      	ldr	r3, [r7, #20]
 8000310:	3301      	adds	r3, #1
 8000312:	617b      	str	r3, [r7, #20]
 8000314:	697a      	ldr	r2, [r7, #20]
 8000316:	687b      	ldr	r3, [r7, #4]
 8000318:	429a      	cmp	r2, r3
 800031a:	dbf0      	blt.n	80002fe <_read+0x12>
  }

  return len;
 800031c:	687b      	ldr	r3, [r7, #4]
}
 800031e:	4618      	mov	r0, r3
 8000320:	3718      	adds	r7, #24
 8000322:	46bd      	mov	sp, r7
 8000324:	bd80      	pop	{r7, pc}

08000326 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000326:	b580      	push	{r7, lr}
 8000328:	b086      	sub	sp, #24
 800032a:	af00      	add	r7, sp, #0
 800032c:	60f8      	str	r0, [r7, #12]
 800032e:	60b9      	str	r1, [r7, #8]
 8000330:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000332:	2300      	movs	r3, #0
 8000334:	617b      	str	r3, [r7, #20]
 8000336:	e009      	b.n	800034c <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000338:	68bb      	ldr	r3, [r7, #8]
 800033a:	1c5a      	adds	r2, r3, #1
 800033c:	60ba      	str	r2, [r7, #8]
 800033e:	781b      	ldrb	r3, [r3, #0]
 8000340:	4618      	mov	r0, r3
 8000342:	f000 f88b 	bl	800045c <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000346:	697b      	ldr	r3, [r7, #20]
 8000348:	3301      	adds	r3, #1
 800034a:	617b      	str	r3, [r7, #20]
 800034c:	697a      	ldr	r2, [r7, #20]
 800034e:	687b      	ldr	r3, [r7, #4]
 8000350:	429a      	cmp	r2, r3
 8000352:	dbf1      	blt.n	8000338 <_write+0x12>
  }
  return len;
 8000354:	687b      	ldr	r3, [r7, #4]
}
 8000356:	4618      	mov	r0, r3
 8000358:	3718      	adds	r7, #24
 800035a:	46bd      	mov	sp, r7
 800035c:	bd80      	pop	{r7, pc}

0800035e <_close>:

int _close(int file)
{
 800035e:	b480      	push	{r7}
 8000360:	b083      	sub	sp, #12
 8000362:	af00      	add	r7, sp, #0
 8000364:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000366:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 800036a:	4618      	mov	r0, r3
 800036c:	370c      	adds	r7, #12
 800036e:	46bd      	mov	sp, r7
 8000370:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000374:	4770      	bx	lr

08000376 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000376:	b480      	push	{r7}
 8000378:	b083      	sub	sp, #12
 800037a:	af00      	add	r7, sp, #0
 800037c:	6078      	str	r0, [r7, #4]
 800037e:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000380:	683b      	ldr	r3, [r7, #0]
 8000382:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000386:	605a      	str	r2, [r3, #4]
  return 0;
 8000388:	2300      	movs	r3, #0
}
 800038a:	4618      	mov	r0, r3
 800038c:	370c      	adds	r7, #12
 800038e:	46bd      	mov	sp, r7
 8000390:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000394:	4770      	bx	lr

08000396 <_isatty>:

int _isatty(int file)
{
 8000396:	b480      	push	{r7}
 8000398:	b083      	sub	sp, #12
 800039a:	af00      	add	r7, sp, #0
 800039c:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800039e:	2301      	movs	r3, #1
}
 80003a0:	4618      	mov	r0, r3
 80003a2:	370c      	adds	r7, #12
 80003a4:	46bd      	mov	sp, r7
 80003a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003aa:	4770      	bx	lr

080003ac <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003ac:	b480      	push	{r7}
 80003ae:	b085      	sub	sp, #20
 80003b0:	af00      	add	r7, sp, #0
 80003b2:	60f8      	str	r0, [r7, #12]
 80003b4:	60b9      	str	r1, [r7, #8]
 80003b6:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003b8:	2300      	movs	r3, #0
}
 80003ba:	4618      	mov	r0, r3
 80003bc:	3714      	adds	r7, #20
 80003be:	46bd      	mov	sp, r7
 80003c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003c4:	4770      	bx	lr
	...

080003c8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003c8:	b580      	push	{r7, lr}
 80003ca:	b086      	sub	sp, #24
 80003cc:	af00      	add	r7, sp, #0
 80003ce:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003d0:	4a14      	ldr	r2, [pc, #80]	; (8000424 <_sbrk+0x5c>)
 80003d2:	4b15      	ldr	r3, [pc, #84]	; (8000428 <_sbrk+0x60>)
 80003d4:	1ad3      	subs	r3, r2, r3
 80003d6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003d8:	697b      	ldr	r3, [r7, #20]
 80003da:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003dc:	4b13      	ldr	r3, [pc, #76]	; (800042c <_sbrk+0x64>)
 80003de:	681b      	ldr	r3, [r3, #0]
 80003e0:	2b00      	cmp	r3, #0
 80003e2:	d102      	bne.n	80003ea <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003e4:	4b11      	ldr	r3, [pc, #68]	; (800042c <_sbrk+0x64>)
 80003e6:	4a12      	ldr	r2, [pc, #72]	; (8000430 <_sbrk+0x68>)
 80003e8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003ea:	4b10      	ldr	r3, [pc, #64]	; (800042c <_sbrk+0x64>)
 80003ec:	681a      	ldr	r2, [r3, #0]
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	4413      	add	r3, r2
 80003f2:	693a      	ldr	r2, [r7, #16]
 80003f4:	429a      	cmp	r2, r3
 80003f6:	d207      	bcs.n	8000408 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003f8:	f000 f9ba 	bl	8000770 <__errno>
 80003fc:	4603      	mov	r3, r0
 80003fe:	220c      	movs	r2, #12
 8000400:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000402:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000406:	e009      	b.n	800041c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000408:	4b08      	ldr	r3, [pc, #32]	; (800042c <_sbrk+0x64>)
 800040a:	681b      	ldr	r3, [r3, #0]
 800040c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800040e:	4b07      	ldr	r3, [pc, #28]	; (800042c <_sbrk+0x64>)
 8000410:	681a      	ldr	r2, [r3, #0]
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	4413      	add	r3, r2
 8000416:	4a05      	ldr	r2, [pc, #20]	; (800042c <_sbrk+0x64>)
 8000418:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800041a:	68fb      	ldr	r3, [r7, #12]
}
 800041c:	4618      	mov	r0, r3
 800041e:	3718      	adds	r7, #24
 8000420:	46bd      	mov	sp, r7
 8000422:	bd80      	pop	{r7, pc}
 8000424:	20020000 	.word	0x20020000
 8000428:	00000400 	.word	0x00000400
 800042c:	20000078 	.word	0x20000078
 8000430:	200001c8 	.word	0x200001c8

08000434 <systick_1hz_Interrupt>:
	}
	SysTick->CTRL = 0;
}

void systick_1hz_Interrupt(void)
{
 8000434:	b480      	push	{r7}
 8000436:	af00      	add	r7, sp, #0
	/*Reload with number of clocks per millisecond*/
	SysTick->LOAD = ONE_SEC_LOAD - 1;
 8000438:	4b06      	ldr	r3, [pc, #24]	; (8000454 <systick_1hz_Interrupt+0x20>)
 800043a:	4a07      	ldr	r2, [pc, #28]	; (8000458 <systick_1hz_Interrupt+0x24>)
 800043c:	605a      	str	r2, [r3, #4]

	/*Clear the current value register*/
	SysTick->VAL = 0;
 800043e:	4b05      	ldr	r3, [pc, #20]	; (8000454 <systick_1hz_Interrupt+0x20>)
 8000440:	2200      	movs	r2, #0
 8000442:	609a      	str	r2, [r3, #8]

	/*Enable SysTick timer and select internal clock source*/
	SysTick->CTRL = CTRL_ENABLE | CTRL_CLKSOURCE | CTRL_TICKT;
 8000444:	4b03      	ldr	r3, [pc, #12]	; (8000454 <systick_1hz_Interrupt+0x20>)
 8000446:	2207      	movs	r2, #7
 8000448:	601a      	str	r2, [r3, #0]
}
 800044a:	bf00      	nop
 800044c:	46bd      	mov	sp, r7
 800044e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000452:	4770      	bx	lr
 8000454:	e000e010 	.word	0xe000e010
 8000458:	00f42400 	.word	0x00f42400

0800045c <__io_putchar>:


void uart2_write(int ch);

int __io_putchar(int ch)
{
 800045c:	b580      	push	{r7, lr}
 800045e:	b082      	sub	sp, #8
 8000460:	af00      	add	r7, sp, #0
 8000462:	6078      	str	r0, [r7, #4]

	uart2_write(ch);
 8000464:	6878      	ldr	r0, [r7, #4]
 8000466:	f000 f851 	bl	800050c <uart2_write>
	return(ch);
 800046a:	687b      	ldr	r3, [r7, #4]
}
 800046c:	4618      	mov	r0, r3
 800046e:	3708      	adds	r7, #8
 8000470:	46bd      	mov	sp, r7
 8000472:	bd80      	pop	{r7, pc}

08000474 <uart2_tx_init>:
			USART2->CR1 |= CR1_UE;

}

void uart2_tx_init(void)
{
 8000474:	b580      	push	{r7, lr}
 8000476:	af00      	add	r7, sp, #0
	/****************Configure UART GPIO*********************/
	/*Enable Clock access to GPIOA*/

	RCC->AHB1ENR |= GPIOAEN;
 8000478:	4b20      	ldr	r3, [pc, #128]	; (80004fc <uart2_tx_init+0x88>)
 800047a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800047c:	4a1f      	ldr	r2, [pc, #124]	; (80004fc <uart2_tx_init+0x88>)
 800047e:	f043 0301 	orr.w	r3, r3, #1
 8000482:	6313      	str	r3, [r2, #48]	; 0x30

			/*Set PA2 mode to alternate function mode*/

			GPIOA->MODER &=~ (1U<<4);
 8000484:	4b1e      	ldr	r3, [pc, #120]	; (8000500 <uart2_tx_init+0x8c>)
 8000486:	681b      	ldr	r3, [r3, #0]
 8000488:	4a1d      	ldr	r2, [pc, #116]	; (8000500 <uart2_tx_init+0x8c>)
 800048a:	f023 0310 	bic.w	r3, r3, #16
 800048e:	6013      	str	r3, [r2, #0]
			GPIOA->MODER |= (1U<<5);
 8000490:	4b1b      	ldr	r3, [pc, #108]	; (8000500 <uart2_tx_init+0x8c>)
 8000492:	681b      	ldr	r3, [r3, #0]
 8000494:	4a1a      	ldr	r2, [pc, #104]	; (8000500 <uart2_tx_init+0x8c>)
 8000496:	f043 0320 	orr.w	r3, r3, #32
 800049a:	6013      	str	r3, [r2, #0]

			/*Set PA2 alternate function type to UART_TX*/
			GPIOA->AFR[0] |= (1U<<8);
 800049c:	4b18      	ldr	r3, [pc, #96]	; (8000500 <uart2_tx_init+0x8c>)
 800049e:	6a1b      	ldr	r3, [r3, #32]
 80004a0:	4a17      	ldr	r2, [pc, #92]	; (8000500 <uart2_tx_init+0x8c>)
 80004a2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80004a6:	6213      	str	r3, [r2, #32]
			GPIOA->AFR[0] |= (1U<<9);
 80004a8:	4b15      	ldr	r3, [pc, #84]	; (8000500 <uart2_tx_init+0x8c>)
 80004aa:	6a1b      	ldr	r3, [r3, #32]
 80004ac:	4a14      	ldr	r2, [pc, #80]	; (8000500 <uart2_tx_init+0x8c>)
 80004ae:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80004b2:	6213      	str	r3, [r2, #32]
			GPIOA->AFR[0] |= (1U<<10);
 80004b4:	4b12      	ldr	r3, [pc, #72]	; (8000500 <uart2_tx_init+0x8c>)
 80004b6:	6a1b      	ldr	r3, [r3, #32]
 80004b8:	4a11      	ldr	r2, [pc, #68]	; (8000500 <uart2_tx_init+0x8c>)
 80004ba:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80004be:	6213      	str	r3, [r2, #32]
			GPIOA->AFR[0] &= ~(1U<<11);
 80004c0:	4b0f      	ldr	r3, [pc, #60]	; (8000500 <uart2_tx_init+0x8c>)
 80004c2:	6a1b      	ldr	r3, [r3, #32]
 80004c4:	4a0e      	ldr	r2, [pc, #56]	; (8000500 <uart2_tx_init+0x8c>)
 80004c6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80004ca:	6213      	str	r3, [r2, #32]


			/****************Configure uart module ***************/
			/*Enable clock access to uart2 */
			RCC->APB1ENR |= UART2EN;
 80004cc:	4b0b      	ldr	r3, [pc, #44]	; (80004fc <uart2_tx_init+0x88>)
 80004ce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80004d0:	4a0a      	ldr	r2, [pc, #40]	; (80004fc <uart2_tx_init+0x88>)
 80004d2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80004d6:	6413      	str	r3, [r2, #64]	; 0x40

			/*Configure baudrate*/
			uart_set_baudrate(USART2,APB1_CLK,UART_BAUDRATE);
 80004d8:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80004dc:	4909      	ldr	r1, [pc, #36]	; (8000504 <uart2_tx_init+0x90>)
 80004de:	480a      	ldr	r0, [pc, #40]	; (8000508 <uart2_tx_init+0x94>)
 80004e0:	f000 f82c 	bl	800053c <uart_set_baudrate>

			/*Configure the transfer direction*/
			USART2->CR1 =  CR1_TE;
 80004e4:	4b08      	ldr	r3, [pc, #32]	; (8000508 <uart2_tx_init+0x94>)
 80004e6:	2208      	movs	r2, #8
 80004e8:	60da      	str	r2, [r3, #12]

			/*Enable uart module*/
			USART2->CR1 |= CR1_UE;
 80004ea:	4b07      	ldr	r3, [pc, #28]	; (8000508 <uart2_tx_init+0x94>)
 80004ec:	68db      	ldr	r3, [r3, #12]
 80004ee:	4a06      	ldr	r2, [pc, #24]	; (8000508 <uart2_tx_init+0x94>)
 80004f0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80004f4:	60d3      	str	r3, [r2, #12]

}
 80004f6:	bf00      	nop
 80004f8:	bd80      	pop	{r7, pc}
 80004fa:	bf00      	nop
 80004fc:	40023800 	.word	0x40023800
 8000500:	40020000 	.word	0x40020000
 8000504:	00f42400 	.word	0x00f42400
 8000508:	40004400 	.word	0x40004400

0800050c <uart2_write>:
	/*Read Data*/
	USART2->DR;
}

void uart2_write(int ch)
{
 800050c:	b480      	push	{r7}
 800050e:	b083      	sub	sp, #12
 8000510:	af00      	add	r7, sp, #0
 8000512:	6078      	str	r0, [r7, #4]
	/*Make sure transmit data register is empty*/
	while(!(USART2->SR & SR_TXE)){}
 8000514:	bf00      	nop
 8000516:	4b08      	ldr	r3, [pc, #32]	; (8000538 <uart2_write+0x2c>)
 8000518:	681b      	ldr	r3, [r3, #0]
 800051a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800051e:	2b00      	cmp	r3, #0
 8000520:	d0f9      	beq.n	8000516 <uart2_write+0xa>
	/*Write transmit data register*/
	USART2->DR = (ch & 0XFF);
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	4a04      	ldr	r2, [pc, #16]	; (8000538 <uart2_write+0x2c>)
 8000526:	b2db      	uxtb	r3, r3
 8000528:	6053      	str	r3, [r2, #4]
}
 800052a:	bf00      	nop
 800052c:	370c      	adds	r7, #12
 800052e:	46bd      	mov	sp, r7
 8000530:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000534:	4770      	bx	lr
 8000536:	bf00      	nop
 8000538:	40004400 	.word	0x40004400

0800053c <uart_set_baudrate>:


static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t PeriphClk,  uint32_t BaudRate)
{
 800053c:	b580      	push	{r7, lr}
 800053e:	b084      	sub	sp, #16
 8000540:	af00      	add	r7, sp, #0
 8000542:	60f8      	str	r0, [r7, #12]
 8000544:	60b9      	str	r1, [r7, #8]
 8000546:	607a      	str	r2, [r7, #4]
	USARTx->BRR =  compute_uart_bd(PeriphClk,BaudRate);
 8000548:	6879      	ldr	r1, [r7, #4]
 800054a:	68b8      	ldr	r0, [r7, #8]
 800054c:	f000 f808 	bl	8000560 <compute_uart_bd>
 8000550:	4603      	mov	r3, r0
 8000552:	461a      	mov	r2, r3
 8000554:	68fb      	ldr	r3, [r7, #12]
 8000556:	609a      	str	r2, [r3, #8]
}
 8000558:	bf00      	nop
 800055a:	3710      	adds	r7, #16
 800055c:	46bd      	mov	sp, r7
 800055e:	bd80      	pop	{r7, pc}

08000560 <compute_uart_bd>:

static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t BaudRate)
{
 8000560:	b480      	push	{r7}
 8000562:	b083      	sub	sp, #12
 8000564:	af00      	add	r7, sp, #0
 8000566:	6078      	str	r0, [r7, #4]
 8000568:	6039      	str	r1, [r7, #0]
	return ((PeriphClk + (BaudRate/2U))/BaudRate);
 800056a:	683b      	ldr	r3, [r7, #0]
 800056c:	085a      	lsrs	r2, r3, #1
 800056e:	687b      	ldr	r3, [r7, #4]
 8000570:	441a      	add	r2, r3
 8000572:	683b      	ldr	r3, [r7, #0]
 8000574:	fbb2 f3f3 	udiv	r3, r2, r3
 8000578:	b29b      	uxth	r3, r3
}
 800057a:	4618      	mov	r0, r3
 800057c:	370c      	adds	r7, #12
 800057e:	46bd      	mov	sp, r7
 8000580:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000584:	4770      	bx	lr
	...

08000588 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000588:	480d      	ldr	r0, [pc, #52]	; (80005c0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800058a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800058c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000590:	480c      	ldr	r0, [pc, #48]	; (80005c4 <LoopForever+0x6>)
  ldr r1, =_edata
 8000592:	490d      	ldr	r1, [pc, #52]	; (80005c8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000594:	4a0d      	ldr	r2, [pc, #52]	; (80005cc <LoopForever+0xe>)
  movs r3, #0
 8000596:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000598:	e002      	b.n	80005a0 <LoopCopyDataInit>

0800059a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800059a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800059c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800059e:	3304      	adds	r3, #4

080005a0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80005a0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80005a2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80005a4:	d3f9      	bcc.n	800059a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005a6:	4a0a      	ldr	r2, [pc, #40]	; (80005d0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80005a8:	4c0a      	ldr	r4, [pc, #40]	; (80005d4 <LoopForever+0x16>)
  movs r3, #0
 80005aa:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005ac:	e001      	b.n	80005b2 <LoopFillZerobss>

080005ae <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80005ae:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80005b0:	3204      	adds	r2, #4

080005b2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80005b2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80005b4:	d3fb      	bcc.n	80005ae <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80005b6:	f000 f8e1 	bl	800077c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80005ba:	f7ff fe61 	bl	8000280 <main>

080005be <LoopForever>:

LoopForever:
  b LoopForever
 80005be:	e7fe      	b.n	80005be <LoopForever>
  ldr   r0, =_estack
 80005c0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80005c4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005c8:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 80005cc:	0800148c 	.word	0x0800148c
  ldr r2, =_sbss
 80005d0:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 80005d4:	200001c8 	.word	0x200001c8

080005d8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80005d8:	e7fe      	b.n	80005d8 <ADC_IRQHandler>
	...

080005dc <std>:
 80005dc:	2300      	movs	r3, #0
 80005de:	b510      	push	{r4, lr}
 80005e0:	4604      	mov	r4, r0
 80005e2:	e9c0 3300 	strd	r3, r3, [r0]
 80005e6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80005ea:	6083      	str	r3, [r0, #8]
 80005ec:	8181      	strh	r1, [r0, #12]
 80005ee:	6643      	str	r3, [r0, #100]	; 0x64
 80005f0:	81c2      	strh	r2, [r0, #14]
 80005f2:	6183      	str	r3, [r0, #24]
 80005f4:	4619      	mov	r1, r3
 80005f6:	2208      	movs	r2, #8
 80005f8:	305c      	adds	r0, #92	; 0x5c
 80005fa:	f000 f8b1 	bl	8000760 <memset>
 80005fe:	4b05      	ldr	r3, [pc, #20]	; (8000614 <std+0x38>)
 8000600:	6263      	str	r3, [r4, #36]	; 0x24
 8000602:	4b05      	ldr	r3, [pc, #20]	; (8000618 <std+0x3c>)
 8000604:	62a3      	str	r3, [r4, #40]	; 0x28
 8000606:	4b05      	ldr	r3, [pc, #20]	; (800061c <std+0x40>)
 8000608:	62e3      	str	r3, [r4, #44]	; 0x2c
 800060a:	4b05      	ldr	r3, [pc, #20]	; (8000620 <std+0x44>)
 800060c:	6224      	str	r4, [r4, #32]
 800060e:	6323      	str	r3, [r4, #48]	; 0x30
 8000610:	bd10      	pop	{r4, pc}
 8000612:	bf00      	nop
 8000614:	08001025 	.word	0x08001025
 8000618:	08001047 	.word	0x08001047
 800061c:	0800107f 	.word	0x0800107f
 8000620:	080010a3 	.word	0x080010a3

08000624 <stdio_exit_handler>:
 8000624:	4a02      	ldr	r2, [pc, #8]	; (8000630 <stdio_exit_handler+0xc>)
 8000626:	4903      	ldr	r1, [pc, #12]	; (8000634 <stdio_exit_handler+0x10>)
 8000628:	4803      	ldr	r0, [pc, #12]	; (8000638 <stdio_exit_handler+0x14>)
 800062a:	f000 b869 	b.w	8000700 <_fwalk_sglue>
 800062e:	bf00      	nop
 8000630:	20000000 	.word	0x20000000
 8000634:	08000fbd 	.word	0x08000fbd
 8000638:	2000000c 	.word	0x2000000c

0800063c <cleanup_stdio>:
 800063c:	6841      	ldr	r1, [r0, #4]
 800063e:	4b0c      	ldr	r3, [pc, #48]	; (8000670 <cleanup_stdio+0x34>)
 8000640:	4299      	cmp	r1, r3
 8000642:	b510      	push	{r4, lr}
 8000644:	4604      	mov	r4, r0
 8000646:	d001      	beq.n	800064c <cleanup_stdio+0x10>
 8000648:	f000 fcb8 	bl	8000fbc <_fflush_r>
 800064c:	68a1      	ldr	r1, [r4, #8]
 800064e:	4b09      	ldr	r3, [pc, #36]	; (8000674 <cleanup_stdio+0x38>)
 8000650:	4299      	cmp	r1, r3
 8000652:	d002      	beq.n	800065a <cleanup_stdio+0x1e>
 8000654:	4620      	mov	r0, r4
 8000656:	f000 fcb1 	bl	8000fbc <_fflush_r>
 800065a:	68e1      	ldr	r1, [r4, #12]
 800065c:	4b06      	ldr	r3, [pc, #24]	; (8000678 <cleanup_stdio+0x3c>)
 800065e:	4299      	cmp	r1, r3
 8000660:	d004      	beq.n	800066c <cleanup_stdio+0x30>
 8000662:	4620      	mov	r0, r4
 8000664:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000668:	f000 bca8 	b.w	8000fbc <_fflush_r>
 800066c:	bd10      	pop	{r4, pc}
 800066e:	bf00      	nop
 8000670:	2000007c 	.word	0x2000007c
 8000674:	200000e4 	.word	0x200000e4
 8000678:	2000014c 	.word	0x2000014c

0800067c <global_stdio_init.part.0>:
 800067c:	b510      	push	{r4, lr}
 800067e:	4b0b      	ldr	r3, [pc, #44]	; (80006ac <global_stdio_init.part.0+0x30>)
 8000680:	4c0b      	ldr	r4, [pc, #44]	; (80006b0 <global_stdio_init.part.0+0x34>)
 8000682:	4a0c      	ldr	r2, [pc, #48]	; (80006b4 <global_stdio_init.part.0+0x38>)
 8000684:	601a      	str	r2, [r3, #0]
 8000686:	4620      	mov	r0, r4
 8000688:	2200      	movs	r2, #0
 800068a:	2104      	movs	r1, #4
 800068c:	f7ff ffa6 	bl	80005dc <std>
 8000690:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8000694:	2201      	movs	r2, #1
 8000696:	2109      	movs	r1, #9
 8000698:	f7ff ffa0 	bl	80005dc <std>
 800069c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 80006a0:	2202      	movs	r2, #2
 80006a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006a6:	2112      	movs	r1, #18
 80006a8:	f7ff bf98 	b.w	80005dc <std>
 80006ac:	200001b4 	.word	0x200001b4
 80006b0:	2000007c 	.word	0x2000007c
 80006b4:	08000625 	.word	0x08000625

080006b8 <__sfp_lock_acquire>:
 80006b8:	4801      	ldr	r0, [pc, #4]	; (80006c0 <__sfp_lock_acquire+0x8>)
 80006ba:	f000 b883 	b.w	80007c4 <__retarget_lock_acquire_recursive>
 80006be:	bf00      	nop
 80006c0:	200001b9 	.word	0x200001b9

080006c4 <__sfp_lock_release>:
 80006c4:	4801      	ldr	r0, [pc, #4]	; (80006cc <__sfp_lock_release+0x8>)
 80006c6:	f000 b87e 	b.w	80007c6 <__retarget_lock_release_recursive>
 80006ca:	bf00      	nop
 80006cc:	200001b9 	.word	0x200001b9

080006d0 <__sinit>:
 80006d0:	b510      	push	{r4, lr}
 80006d2:	4604      	mov	r4, r0
 80006d4:	f7ff fff0 	bl	80006b8 <__sfp_lock_acquire>
 80006d8:	6a23      	ldr	r3, [r4, #32]
 80006da:	b11b      	cbz	r3, 80006e4 <__sinit+0x14>
 80006dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006e0:	f7ff bff0 	b.w	80006c4 <__sfp_lock_release>
 80006e4:	4b04      	ldr	r3, [pc, #16]	; (80006f8 <__sinit+0x28>)
 80006e6:	6223      	str	r3, [r4, #32]
 80006e8:	4b04      	ldr	r3, [pc, #16]	; (80006fc <__sinit+0x2c>)
 80006ea:	681b      	ldr	r3, [r3, #0]
 80006ec:	2b00      	cmp	r3, #0
 80006ee:	d1f5      	bne.n	80006dc <__sinit+0xc>
 80006f0:	f7ff ffc4 	bl	800067c <global_stdio_init.part.0>
 80006f4:	e7f2      	b.n	80006dc <__sinit+0xc>
 80006f6:	bf00      	nop
 80006f8:	0800063d 	.word	0x0800063d
 80006fc:	200001b4 	.word	0x200001b4

08000700 <_fwalk_sglue>:
 8000700:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000704:	4607      	mov	r7, r0
 8000706:	4688      	mov	r8, r1
 8000708:	4614      	mov	r4, r2
 800070a:	2600      	movs	r6, #0
 800070c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000710:	f1b9 0901 	subs.w	r9, r9, #1
 8000714:	d505      	bpl.n	8000722 <_fwalk_sglue+0x22>
 8000716:	6824      	ldr	r4, [r4, #0]
 8000718:	2c00      	cmp	r4, #0
 800071a:	d1f7      	bne.n	800070c <_fwalk_sglue+0xc>
 800071c:	4630      	mov	r0, r6
 800071e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000722:	89ab      	ldrh	r3, [r5, #12]
 8000724:	2b01      	cmp	r3, #1
 8000726:	d907      	bls.n	8000738 <_fwalk_sglue+0x38>
 8000728:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800072c:	3301      	adds	r3, #1
 800072e:	d003      	beq.n	8000738 <_fwalk_sglue+0x38>
 8000730:	4629      	mov	r1, r5
 8000732:	4638      	mov	r0, r7
 8000734:	47c0      	blx	r8
 8000736:	4306      	orrs	r6, r0
 8000738:	3568      	adds	r5, #104	; 0x68
 800073a:	e7e9      	b.n	8000710 <_fwalk_sglue+0x10>

0800073c <iprintf>:
 800073c:	b40f      	push	{r0, r1, r2, r3}
 800073e:	b507      	push	{r0, r1, r2, lr}
 8000740:	4906      	ldr	r1, [pc, #24]	; (800075c <iprintf+0x20>)
 8000742:	ab04      	add	r3, sp, #16
 8000744:	6808      	ldr	r0, [r1, #0]
 8000746:	f853 2b04 	ldr.w	r2, [r3], #4
 800074a:	6881      	ldr	r1, [r0, #8]
 800074c:	9301      	str	r3, [sp, #4]
 800074e:	f000 f865 	bl	800081c <_vfiprintf_r>
 8000752:	b003      	add	sp, #12
 8000754:	f85d eb04 	ldr.w	lr, [sp], #4
 8000758:	b004      	add	sp, #16
 800075a:	4770      	bx	lr
 800075c:	20000058 	.word	0x20000058

08000760 <memset>:
 8000760:	4402      	add	r2, r0
 8000762:	4603      	mov	r3, r0
 8000764:	4293      	cmp	r3, r2
 8000766:	d100      	bne.n	800076a <memset+0xa>
 8000768:	4770      	bx	lr
 800076a:	f803 1b01 	strb.w	r1, [r3], #1
 800076e:	e7f9      	b.n	8000764 <memset+0x4>

08000770 <__errno>:
 8000770:	4b01      	ldr	r3, [pc, #4]	; (8000778 <__errno+0x8>)
 8000772:	6818      	ldr	r0, [r3, #0]
 8000774:	4770      	bx	lr
 8000776:	bf00      	nop
 8000778:	20000058 	.word	0x20000058

0800077c <__libc_init_array>:
 800077c:	b570      	push	{r4, r5, r6, lr}
 800077e:	4d0d      	ldr	r5, [pc, #52]	; (80007b4 <__libc_init_array+0x38>)
 8000780:	4c0d      	ldr	r4, [pc, #52]	; (80007b8 <__libc_init_array+0x3c>)
 8000782:	1b64      	subs	r4, r4, r5
 8000784:	10a4      	asrs	r4, r4, #2
 8000786:	2600      	movs	r6, #0
 8000788:	42a6      	cmp	r6, r4
 800078a:	d109      	bne.n	80007a0 <__libc_init_array+0x24>
 800078c:	4d0b      	ldr	r5, [pc, #44]	; (80007bc <__libc_init_array+0x40>)
 800078e:	4c0c      	ldr	r4, [pc, #48]	; (80007c0 <__libc_init_array+0x44>)
 8000790:	f000 fe46 	bl	8001420 <_init>
 8000794:	1b64      	subs	r4, r4, r5
 8000796:	10a4      	asrs	r4, r4, #2
 8000798:	2600      	movs	r6, #0
 800079a:	42a6      	cmp	r6, r4
 800079c:	d105      	bne.n	80007aa <__libc_init_array+0x2e>
 800079e:	bd70      	pop	{r4, r5, r6, pc}
 80007a0:	f855 3b04 	ldr.w	r3, [r5], #4
 80007a4:	4798      	blx	r3
 80007a6:	3601      	adds	r6, #1
 80007a8:	e7ee      	b.n	8000788 <__libc_init_array+0xc>
 80007aa:	f855 3b04 	ldr.w	r3, [r5], #4
 80007ae:	4798      	blx	r3
 80007b0:	3601      	adds	r6, #1
 80007b2:	e7f2      	b.n	800079a <__libc_init_array+0x1e>
 80007b4:	08001484 	.word	0x08001484
 80007b8:	08001484 	.word	0x08001484
 80007bc:	08001484 	.word	0x08001484
 80007c0:	08001488 	.word	0x08001488

080007c4 <__retarget_lock_acquire_recursive>:
 80007c4:	4770      	bx	lr

080007c6 <__retarget_lock_release_recursive>:
 80007c6:	4770      	bx	lr

080007c8 <__sfputc_r>:
 80007c8:	6893      	ldr	r3, [r2, #8]
 80007ca:	3b01      	subs	r3, #1
 80007cc:	2b00      	cmp	r3, #0
 80007ce:	b410      	push	{r4}
 80007d0:	6093      	str	r3, [r2, #8]
 80007d2:	da08      	bge.n	80007e6 <__sfputc_r+0x1e>
 80007d4:	6994      	ldr	r4, [r2, #24]
 80007d6:	42a3      	cmp	r3, r4
 80007d8:	db01      	blt.n	80007de <__sfputc_r+0x16>
 80007da:	290a      	cmp	r1, #10
 80007dc:	d103      	bne.n	80007e6 <__sfputc_r+0x1e>
 80007de:	f85d 4b04 	ldr.w	r4, [sp], #4
 80007e2:	f000 bc62 	b.w	80010aa <__swbuf_r>
 80007e6:	6813      	ldr	r3, [r2, #0]
 80007e8:	1c58      	adds	r0, r3, #1
 80007ea:	6010      	str	r0, [r2, #0]
 80007ec:	7019      	strb	r1, [r3, #0]
 80007ee:	4608      	mov	r0, r1
 80007f0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80007f4:	4770      	bx	lr

080007f6 <__sfputs_r>:
 80007f6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007f8:	4606      	mov	r6, r0
 80007fa:	460f      	mov	r7, r1
 80007fc:	4614      	mov	r4, r2
 80007fe:	18d5      	adds	r5, r2, r3
 8000800:	42ac      	cmp	r4, r5
 8000802:	d101      	bne.n	8000808 <__sfputs_r+0x12>
 8000804:	2000      	movs	r0, #0
 8000806:	e007      	b.n	8000818 <__sfputs_r+0x22>
 8000808:	f814 1b01 	ldrb.w	r1, [r4], #1
 800080c:	463a      	mov	r2, r7
 800080e:	4630      	mov	r0, r6
 8000810:	f7ff ffda 	bl	80007c8 <__sfputc_r>
 8000814:	1c43      	adds	r3, r0, #1
 8000816:	d1f3      	bne.n	8000800 <__sfputs_r+0xa>
 8000818:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800081c <_vfiprintf_r>:
 800081c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000820:	460d      	mov	r5, r1
 8000822:	b09d      	sub	sp, #116	; 0x74
 8000824:	4614      	mov	r4, r2
 8000826:	4698      	mov	r8, r3
 8000828:	4606      	mov	r6, r0
 800082a:	b118      	cbz	r0, 8000834 <_vfiprintf_r+0x18>
 800082c:	6a03      	ldr	r3, [r0, #32]
 800082e:	b90b      	cbnz	r3, 8000834 <_vfiprintf_r+0x18>
 8000830:	f7ff ff4e 	bl	80006d0 <__sinit>
 8000834:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000836:	07d9      	lsls	r1, r3, #31
 8000838:	d405      	bmi.n	8000846 <_vfiprintf_r+0x2a>
 800083a:	89ab      	ldrh	r3, [r5, #12]
 800083c:	059a      	lsls	r2, r3, #22
 800083e:	d402      	bmi.n	8000846 <_vfiprintf_r+0x2a>
 8000840:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000842:	f7ff ffbf 	bl	80007c4 <__retarget_lock_acquire_recursive>
 8000846:	89ab      	ldrh	r3, [r5, #12]
 8000848:	071b      	lsls	r3, r3, #28
 800084a:	d501      	bpl.n	8000850 <_vfiprintf_r+0x34>
 800084c:	692b      	ldr	r3, [r5, #16]
 800084e:	b99b      	cbnz	r3, 8000878 <_vfiprintf_r+0x5c>
 8000850:	4629      	mov	r1, r5
 8000852:	4630      	mov	r0, r6
 8000854:	f000 fc66 	bl	8001124 <__swsetup_r>
 8000858:	b170      	cbz	r0, 8000878 <_vfiprintf_r+0x5c>
 800085a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800085c:	07dc      	lsls	r4, r3, #31
 800085e:	d504      	bpl.n	800086a <_vfiprintf_r+0x4e>
 8000860:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000864:	b01d      	add	sp, #116	; 0x74
 8000866:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800086a:	89ab      	ldrh	r3, [r5, #12]
 800086c:	0598      	lsls	r0, r3, #22
 800086e:	d4f7      	bmi.n	8000860 <_vfiprintf_r+0x44>
 8000870:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000872:	f7ff ffa8 	bl	80007c6 <__retarget_lock_release_recursive>
 8000876:	e7f3      	b.n	8000860 <_vfiprintf_r+0x44>
 8000878:	2300      	movs	r3, #0
 800087a:	9309      	str	r3, [sp, #36]	; 0x24
 800087c:	2320      	movs	r3, #32
 800087e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000882:	f8cd 800c 	str.w	r8, [sp, #12]
 8000886:	2330      	movs	r3, #48	; 0x30
 8000888:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000a3c <_vfiprintf_r+0x220>
 800088c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000890:	f04f 0901 	mov.w	r9, #1
 8000894:	4623      	mov	r3, r4
 8000896:	469a      	mov	sl, r3
 8000898:	f813 2b01 	ldrb.w	r2, [r3], #1
 800089c:	b10a      	cbz	r2, 80008a2 <_vfiprintf_r+0x86>
 800089e:	2a25      	cmp	r2, #37	; 0x25
 80008a0:	d1f9      	bne.n	8000896 <_vfiprintf_r+0x7a>
 80008a2:	ebba 0b04 	subs.w	fp, sl, r4
 80008a6:	d00b      	beq.n	80008c0 <_vfiprintf_r+0xa4>
 80008a8:	465b      	mov	r3, fp
 80008aa:	4622      	mov	r2, r4
 80008ac:	4629      	mov	r1, r5
 80008ae:	4630      	mov	r0, r6
 80008b0:	f7ff ffa1 	bl	80007f6 <__sfputs_r>
 80008b4:	3001      	adds	r0, #1
 80008b6:	f000 80a9 	beq.w	8000a0c <_vfiprintf_r+0x1f0>
 80008ba:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80008bc:	445a      	add	r2, fp
 80008be:	9209      	str	r2, [sp, #36]	; 0x24
 80008c0:	f89a 3000 	ldrb.w	r3, [sl]
 80008c4:	2b00      	cmp	r3, #0
 80008c6:	f000 80a1 	beq.w	8000a0c <_vfiprintf_r+0x1f0>
 80008ca:	2300      	movs	r3, #0
 80008cc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80008d0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80008d4:	f10a 0a01 	add.w	sl, sl, #1
 80008d8:	9304      	str	r3, [sp, #16]
 80008da:	9307      	str	r3, [sp, #28]
 80008dc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80008e0:	931a      	str	r3, [sp, #104]	; 0x68
 80008e2:	4654      	mov	r4, sl
 80008e4:	2205      	movs	r2, #5
 80008e6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80008ea:	4854      	ldr	r0, [pc, #336]	; (8000a3c <_vfiprintf_r+0x220>)
 80008ec:	f7ff fc78 	bl	80001e0 <memchr>
 80008f0:	9a04      	ldr	r2, [sp, #16]
 80008f2:	b9d8      	cbnz	r0, 800092c <_vfiprintf_r+0x110>
 80008f4:	06d1      	lsls	r1, r2, #27
 80008f6:	bf44      	itt	mi
 80008f8:	2320      	movmi	r3, #32
 80008fa:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80008fe:	0713      	lsls	r3, r2, #28
 8000900:	bf44      	itt	mi
 8000902:	232b      	movmi	r3, #43	; 0x2b
 8000904:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000908:	f89a 3000 	ldrb.w	r3, [sl]
 800090c:	2b2a      	cmp	r3, #42	; 0x2a
 800090e:	d015      	beq.n	800093c <_vfiprintf_r+0x120>
 8000910:	9a07      	ldr	r2, [sp, #28]
 8000912:	4654      	mov	r4, sl
 8000914:	2000      	movs	r0, #0
 8000916:	f04f 0c0a 	mov.w	ip, #10
 800091a:	4621      	mov	r1, r4
 800091c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000920:	3b30      	subs	r3, #48	; 0x30
 8000922:	2b09      	cmp	r3, #9
 8000924:	d94d      	bls.n	80009c2 <_vfiprintf_r+0x1a6>
 8000926:	b1b0      	cbz	r0, 8000956 <_vfiprintf_r+0x13a>
 8000928:	9207      	str	r2, [sp, #28]
 800092a:	e014      	b.n	8000956 <_vfiprintf_r+0x13a>
 800092c:	eba0 0308 	sub.w	r3, r0, r8
 8000930:	fa09 f303 	lsl.w	r3, r9, r3
 8000934:	4313      	orrs	r3, r2
 8000936:	9304      	str	r3, [sp, #16]
 8000938:	46a2      	mov	sl, r4
 800093a:	e7d2      	b.n	80008e2 <_vfiprintf_r+0xc6>
 800093c:	9b03      	ldr	r3, [sp, #12]
 800093e:	1d19      	adds	r1, r3, #4
 8000940:	681b      	ldr	r3, [r3, #0]
 8000942:	9103      	str	r1, [sp, #12]
 8000944:	2b00      	cmp	r3, #0
 8000946:	bfbb      	ittet	lt
 8000948:	425b      	neglt	r3, r3
 800094a:	f042 0202 	orrlt.w	r2, r2, #2
 800094e:	9307      	strge	r3, [sp, #28]
 8000950:	9307      	strlt	r3, [sp, #28]
 8000952:	bfb8      	it	lt
 8000954:	9204      	strlt	r2, [sp, #16]
 8000956:	7823      	ldrb	r3, [r4, #0]
 8000958:	2b2e      	cmp	r3, #46	; 0x2e
 800095a:	d10c      	bne.n	8000976 <_vfiprintf_r+0x15a>
 800095c:	7863      	ldrb	r3, [r4, #1]
 800095e:	2b2a      	cmp	r3, #42	; 0x2a
 8000960:	d134      	bne.n	80009cc <_vfiprintf_r+0x1b0>
 8000962:	9b03      	ldr	r3, [sp, #12]
 8000964:	1d1a      	adds	r2, r3, #4
 8000966:	681b      	ldr	r3, [r3, #0]
 8000968:	9203      	str	r2, [sp, #12]
 800096a:	2b00      	cmp	r3, #0
 800096c:	bfb8      	it	lt
 800096e:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8000972:	3402      	adds	r4, #2
 8000974:	9305      	str	r3, [sp, #20]
 8000976:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8000a4c <_vfiprintf_r+0x230>
 800097a:	7821      	ldrb	r1, [r4, #0]
 800097c:	2203      	movs	r2, #3
 800097e:	4650      	mov	r0, sl
 8000980:	f7ff fc2e 	bl	80001e0 <memchr>
 8000984:	b138      	cbz	r0, 8000996 <_vfiprintf_r+0x17a>
 8000986:	9b04      	ldr	r3, [sp, #16]
 8000988:	eba0 000a 	sub.w	r0, r0, sl
 800098c:	2240      	movs	r2, #64	; 0x40
 800098e:	4082      	lsls	r2, r0
 8000990:	4313      	orrs	r3, r2
 8000992:	3401      	adds	r4, #1
 8000994:	9304      	str	r3, [sp, #16]
 8000996:	f814 1b01 	ldrb.w	r1, [r4], #1
 800099a:	4829      	ldr	r0, [pc, #164]	; (8000a40 <_vfiprintf_r+0x224>)
 800099c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80009a0:	2206      	movs	r2, #6
 80009a2:	f7ff fc1d 	bl	80001e0 <memchr>
 80009a6:	2800      	cmp	r0, #0
 80009a8:	d03f      	beq.n	8000a2a <_vfiprintf_r+0x20e>
 80009aa:	4b26      	ldr	r3, [pc, #152]	; (8000a44 <_vfiprintf_r+0x228>)
 80009ac:	bb1b      	cbnz	r3, 80009f6 <_vfiprintf_r+0x1da>
 80009ae:	9b03      	ldr	r3, [sp, #12]
 80009b0:	3307      	adds	r3, #7
 80009b2:	f023 0307 	bic.w	r3, r3, #7
 80009b6:	3308      	adds	r3, #8
 80009b8:	9303      	str	r3, [sp, #12]
 80009ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80009bc:	443b      	add	r3, r7
 80009be:	9309      	str	r3, [sp, #36]	; 0x24
 80009c0:	e768      	b.n	8000894 <_vfiprintf_r+0x78>
 80009c2:	fb0c 3202 	mla	r2, ip, r2, r3
 80009c6:	460c      	mov	r4, r1
 80009c8:	2001      	movs	r0, #1
 80009ca:	e7a6      	b.n	800091a <_vfiprintf_r+0xfe>
 80009cc:	2300      	movs	r3, #0
 80009ce:	3401      	adds	r4, #1
 80009d0:	9305      	str	r3, [sp, #20]
 80009d2:	4619      	mov	r1, r3
 80009d4:	f04f 0c0a 	mov.w	ip, #10
 80009d8:	4620      	mov	r0, r4
 80009da:	f810 2b01 	ldrb.w	r2, [r0], #1
 80009de:	3a30      	subs	r2, #48	; 0x30
 80009e0:	2a09      	cmp	r2, #9
 80009e2:	d903      	bls.n	80009ec <_vfiprintf_r+0x1d0>
 80009e4:	2b00      	cmp	r3, #0
 80009e6:	d0c6      	beq.n	8000976 <_vfiprintf_r+0x15a>
 80009e8:	9105      	str	r1, [sp, #20]
 80009ea:	e7c4      	b.n	8000976 <_vfiprintf_r+0x15a>
 80009ec:	fb0c 2101 	mla	r1, ip, r1, r2
 80009f0:	4604      	mov	r4, r0
 80009f2:	2301      	movs	r3, #1
 80009f4:	e7f0      	b.n	80009d8 <_vfiprintf_r+0x1bc>
 80009f6:	ab03      	add	r3, sp, #12
 80009f8:	9300      	str	r3, [sp, #0]
 80009fa:	462a      	mov	r2, r5
 80009fc:	4b12      	ldr	r3, [pc, #72]	; (8000a48 <_vfiprintf_r+0x22c>)
 80009fe:	a904      	add	r1, sp, #16
 8000a00:	4630      	mov	r0, r6
 8000a02:	f3af 8000 	nop.w
 8000a06:	4607      	mov	r7, r0
 8000a08:	1c78      	adds	r0, r7, #1
 8000a0a:	d1d6      	bne.n	80009ba <_vfiprintf_r+0x19e>
 8000a0c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a0e:	07d9      	lsls	r1, r3, #31
 8000a10:	d405      	bmi.n	8000a1e <_vfiprintf_r+0x202>
 8000a12:	89ab      	ldrh	r3, [r5, #12]
 8000a14:	059a      	lsls	r2, r3, #22
 8000a16:	d402      	bmi.n	8000a1e <_vfiprintf_r+0x202>
 8000a18:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a1a:	f7ff fed4 	bl	80007c6 <__retarget_lock_release_recursive>
 8000a1e:	89ab      	ldrh	r3, [r5, #12]
 8000a20:	065b      	lsls	r3, r3, #25
 8000a22:	f53f af1d 	bmi.w	8000860 <_vfiprintf_r+0x44>
 8000a26:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000a28:	e71c      	b.n	8000864 <_vfiprintf_r+0x48>
 8000a2a:	ab03      	add	r3, sp, #12
 8000a2c:	9300      	str	r3, [sp, #0]
 8000a2e:	462a      	mov	r2, r5
 8000a30:	4b05      	ldr	r3, [pc, #20]	; (8000a48 <_vfiprintf_r+0x22c>)
 8000a32:	a904      	add	r1, sp, #16
 8000a34:	4630      	mov	r0, r6
 8000a36:	f000 f919 	bl	8000c6c <_printf_i>
 8000a3a:	e7e4      	b.n	8000a06 <_vfiprintf_r+0x1ea>
 8000a3c:	0800144e 	.word	0x0800144e
 8000a40:	08001458 	.word	0x08001458
 8000a44:	00000000 	.word	0x00000000
 8000a48:	080007f7 	.word	0x080007f7
 8000a4c:	08001454 	.word	0x08001454

08000a50 <sbrk_aligned>:
 8000a50:	b570      	push	{r4, r5, r6, lr}
 8000a52:	4e0e      	ldr	r6, [pc, #56]	; (8000a8c <sbrk_aligned+0x3c>)
 8000a54:	460c      	mov	r4, r1
 8000a56:	6831      	ldr	r1, [r6, #0]
 8000a58:	4605      	mov	r5, r0
 8000a5a:	b911      	cbnz	r1, 8000a62 <sbrk_aligned+0x12>
 8000a5c:	f000 fc72 	bl	8001344 <_sbrk_r>
 8000a60:	6030      	str	r0, [r6, #0]
 8000a62:	4621      	mov	r1, r4
 8000a64:	4628      	mov	r0, r5
 8000a66:	f000 fc6d 	bl	8001344 <_sbrk_r>
 8000a6a:	1c43      	adds	r3, r0, #1
 8000a6c:	d00a      	beq.n	8000a84 <sbrk_aligned+0x34>
 8000a6e:	1cc4      	adds	r4, r0, #3
 8000a70:	f024 0403 	bic.w	r4, r4, #3
 8000a74:	42a0      	cmp	r0, r4
 8000a76:	d007      	beq.n	8000a88 <sbrk_aligned+0x38>
 8000a78:	1a21      	subs	r1, r4, r0
 8000a7a:	4628      	mov	r0, r5
 8000a7c:	f000 fc62 	bl	8001344 <_sbrk_r>
 8000a80:	3001      	adds	r0, #1
 8000a82:	d101      	bne.n	8000a88 <sbrk_aligned+0x38>
 8000a84:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000a88:	4620      	mov	r0, r4
 8000a8a:	bd70      	pop	{r4, r5, r6, pc}
 8000a8c:	200001c0 	.word	0x200001c0

08000a90 <_malloc_r>:
 8000a90:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a94:	1ccd      	adds	r5, r1, #3
 8000a96:	f025 0503 	bic.w	r5, r5, #3
 8000a9a:	3508      	adds	r5, #8
 8000a9c:	2d0c      	cmp	r5, #12
 8000a9e:	bf38      	it	cc
 8000aa0:	250c      	movcc	r5, #12
 8000aa2:	2d00      	cmp	r5, #0
 8000aa4:	4607      	mov	r7, r0
 8000aa6:	db01      	blt.n	8000aac <_malloc_r+0x1c>
 8000aa8:	42a9      	cmp	r1, r5
 8000aaa:	d905      	bls.n	8000ab8 <_malloc_r+0x28>
 8000aac:	230c      	movs	r3, #12
 8000aae:	603b      	str	r3, [r7, #0]
 8000ab0:	2600      	movs	r6, #0
 8000ab2:	4630      	mov	r0, r6
 8000ab4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000ab8:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000b8c <_malloc_r+0xfc>
 8000abc:	f000 faa6 	bl	800100c <__malloc_lock>
 8000ac0:	f8d8 3000 	ldr.w	r3, [r8]
 8000ac4:	461c      	mov	r4, r3
 8000ac6:	bb5c      	cbnz	r4, 8000b20 <_malloc_r+0x90>
 8000ac8:	4629      	mov	r1, r5
 8000aca:	4638      	mov	r0, r7
 8000acc:	f7ff ffc0 	bl	8000a50 <sbrk_aligned>
 8000ad0:	1c43      	adds	r3, r0, #1
 8000ad2:	4604      	mov	r4, r0
 8000ad4:	d155      	bne.n	8000b82 <_malloc_r+0xf2>
 8000ad6:	f8d8 4000 	ldr.w	r4, [r8]
 8000ada:	4626      	mov	r6, r4
 8000adc:	2e00      	cmp	r6, #0
 8000ade:	d145      	bne.n	8000b6c <_malloc_r+0xdc>
 8000ae0:	2c00      	cmp	r4, #0
 8000ae2:	d048      	beq.n	8000b76 <_malloc_r+0xe6>
 8000ae4:	6823      	ldr	r3, [r4, #0]
 8000ae6:	4631      	mov	r1, r6
 8000ae8:	4638      	mov	r0, r7
 8000aea:	eb04 0903 	add.w	r9, r4, r3
 8000aee:	f000 fc29 	bl	8001344 <_sbrk_r>
 8000af2:	4581      	cmp	r9, r0
 8000af4:	d13f      	bne.n	8000b76 <_malloc_r+0xe6>
 8000af6:	6821      	ldr	r1, [r4, #0]
 8000af8:	1a6d      	subs	r5, r5, r1
 8000afa:	4629      	mov	r1, r5
 8000afc:	4638      	mov	r0, r7
 8000afe:	f7ff ffa7 	bl	8000a50 <sbrk_aligned>
 8000b02:	3001      	adds	r0, #1
 8000b04:	d037      	beq.n	8000b76 <_malloc_r+0xe6>
 8000b06:	6823      	ldr	r3, [r4, #0]
 8000b08:	442b      	add	r3, r5
 8000b0a:	6023      	str	r3, [r4, #0]
 8000b0c:	f8d8 3000 	ldr.w	r3, [r8]
 8000b10:	2b00      	cmp	r3, #0
 8000b12:	d038      	beq.n	8000b86 <_malloc_r+0xf6>
 8000b14:	685a      	ldr	r2, [r3, #4]
 8000b16:	42a2      	cmp	r2, r4
 8000b18:	d12b      	bne.n	8000b72 <_malloc_r+0xe2>
 8000b1a:	2200      	movs	r2, #0
 8000b1c:	605a      	str	r2, [r3, #4]
 8000b1e:	e00f      	b.n	8000b40 <_malloc_r+0xb0>
 8000b20:	6822      	ldr	r2, [r4, #0]
 8000b22:	1b52      	subs	r2, r2, r5
 8000b24:	d41f      	bmi.n	8000b66 <_malloc_r+0xd6>
 8000b26:	2a0b      	cmp	r2, #11
 8000b28:	d917      	bls.n	8000b5a <_malloc_r+0xca>
 8000b2a:	1961      	adds	r1, r4, r5
 8000b2c:	42a3      	cmp	r3, r4
 8000b2e:	6025      	str	r5, [r4, #0]
 8000b30:	bf18      	it	ne
 8000b32:	6059      	strne	r1, [r3, #4]
 8000b34:	6863      	ldr	r3, [r4, #4]
 8000b36:	bf08      	it	eq
 8000b38:	f8c8 1000 	streq.w	r1, [r8]
 8000b3c:	5162      	str	r2, [r4, r5]
 8000b3e:	604b      	str	r3, [r1, #4]
 8000b40:	4638      	mov	r0, r7
 8000b42:	f104 060b 	add.w	r6, r4, #11
 8000b46:	f000 fa67 	bl	8001018 <__malloc_unlock>
 8000b4a:	f026 0607 	bic.w	r6, r6, #7
 8000b4e:	1d23      	adds	r3, r4, #4
 8000b50:	1af2      	subs	r2, r6, r3
 8000b52:	d0ae      	beq.n	8000ab2 <_malloc_r+0x22>
 8000b54:	1b9b      	subs	r3, r3, r6
 8000b56:	50a3      	str	r3, [r4, r2]
 8000b58:	e7ab      	b.n	8000ab2 <_malloc_r+0x22>
 8000b5a:	42a3      	cmp	r3, r4
 8000b5c:	6862      	ldr	r2, [r4, #4]
 8000b5e:	d1dd      	bne.n	8000b1c <_malloc_r+0x8c>
 8000b60:	f8c8 2000 	str.w	r2, [r8]
 8000b64:	e7ec      	b.n	8000b40 <_malloc_r+0xb0>
 8000b66:	4623      	mov	r3, r4
 8000b68:	6864      	ldr	r4, [r4, #4]
 8000b6a:	e7ac      	b.n	8000ac6 <_malloc_r+0x36>
 8000b6c:	4634      	mov	r4, r6
 8000b6e:	6876      	ldr	r6, [r6, #4]
 8000b70:	e7b4      	b.n	8000adc <_malloc_r+0x4c>
 8000b72:	4613      	mov	r3, r2
 8000b74:	e7cc      	b.n	8000b10 <_malloc_r+0x80>
 8000b76:	230c      	movs	r3, #12
 8000b78:	603b      	str	r3, [r7, #0]
 8000b7a:	4638      	mov	r0, r7
 8000b7c:	f000 fa4c 	bl	8001018 <__malloc_unlock>
 8000b80:	e797      	b.n	8000ab2 <_malloc_r+0x22>
 8000b82:	6025      	str	r5, [r4, #0]
 8000b84:	e7dc      	b.n	8000b40 <_malloc_r+0xb0>
 8000b86:	605b      	str	r3, [r3, #4]
 8000b88:	deff      	udf	#255	; 0xff
 8000b8a:	bf00      	nop
 8000b8c:	200001bc 	.word	0x200001bc

08000b90 <_printf_common>:
 8000b90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b94:	4616      	mov	r6, r2
 8000b96:	4699      	mov	r9, r3
 8000b98:	688a      	ldr	r2, [r1, #8]
 8000b9a:	690b      	ldr	r3, [r1, #16]
 8000b9c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000ba0:	4293      	cmp	r3, r2
 8000ba2:	bfb8      	it	lt
 8000ba4:	4613      	movlt	r3, r2
 8000ba6:	6033      	str	r3, [r6, #0]
 8000ba8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000bac:	4607      	mov	r7, r0
 8000bae:	460c      	mov	r4, r1
 8000bb0:	b10a      	cbz	r2, 8000bb6 <_printf_common+0x26>
 8000bb2:	3301      	adds	r3, #1
 8000bb4:	6033      	str	r3, [r6, #0]
 8000bb6:	6823      	ldr	r3, [r4, #0]
 8000bb8:	0699      	lsls	r1, r3, #26
 8000bba:	bf42      	ittt	mi
 8000bbc:	6833      	ldrmi	r3, [r6, #0]
 8000bbe:	3302      	addmi	r3, #2
 8000bc0:	6033      	strmi	r3, [r6, #0]
 8000bc2:	6825      	ldr	r5, [r4, #0]
 8000bc4:	f015 0506 	ands.w	r5, r5, #6
 8000bc8:	d106      	bne.n	8000bd8 <_printf_common+0x48>
 8000bca:	f104 0a19 	add.w	sl, r4, #25
 8000bce:	68e3      	ldr	r3, [r4, #12]
 8000bd0:	6832      	ldr	r2, [r6, #0]
 8000bd2:	1a9b      	subs	r3, r3, r2
 8000bd4:	42ab      	cmp	r3, r5
 8000bd6:	dc26      	bgt.n	8000c26 <_printf_common+0x96>
 8000bd8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000bdc:	1e13      	subs	r3, r2, #0
 8000bde:	6822      	ldr	r2, [r4, #0]
 8000be0:	bf18      	it	ne
 8000be2:	2301      	movne	r3, #1
 8000be4:	0692      	lsls	r2, r2, #26
 8000be6:	d42b      	bmi.n	8000c40 <_printf_common+0xb0>
 8000be8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000bec:	4649      	mov	r1, r9
 8000bee:	4638      	mov	r0, r7
 8000bf0:	47c0      	blx	r8
 8000bf2:	3001      	adds	r0, #1
 8000bf4:	d01e      	beq.n	8000c34 <_printf_common+0xa4>
 8000bf6:	6823      	ldr	r3, [r4, #0]
 8000bf8:	6922      	ldr	r2, [r4, #16]
 8000bfa:	f003 0306 	and.w	r3, r3, #6
 8000bfe:	2b04      	cmp	r3, #4
 8000c00:	bf02      	ittt	eq
 8000c02:	68e5      	ldreq	r5, [r4, #12]
 8000c04:	6833      	ldreq	r3, [r6, #0]
 8000c06:	1aed      	subeq	r5, r5, r3
 8000c08:	68a3      	ldr	r3, [r4, #8]
 8000c0a:	bf0c      	ite	eq
 8000c0c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000c10:	2500      	movne	r5, #0
 8000c12:	4293      	cmp	r3, r2
 8000c14:	bfc4      	itt	gt
 8000c16:	1a9b      	subgt	r3, r3, r2
 8000c18:	18ed      	addgt	r5, r5, r3
 8000c1a:	2600      	movs	r6, #0
 8000c1c:	341a      	adds	r4, #26
 8000c1e:	42b5      	cmp	r5, r6
 8000c20:	d11a      	bne.n	8000c58 <_printf_common+0xc8>
 8000c22:	2000      	movs	r0, #0
 8000c24:	e008      	b.n	8000c38 <_printf_common+0xa8>
 8000c26:	2301      	movs	r3, #1
 8000c28:	4652      	mov	r2, sl
 8000c2a:	4649      	mov	r1, r9
 8000c2c:	4638      	mov	r0, r7
 8000c2e:	47c0      	blx	r8
 8000c30:	3001      	adds	r0, #1
 8000c32:	d103      	bne.n	8000c3c <_printf_common+0xac>
 8000c34:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000c38:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c3c:	3501      	adds	r5, #1
 8000c3e:	e7c6      	b.n	8000bce <_printf_common+0x3e>
 8000c40:	18e1      	adds	r1, r4, r3
 8000c42:	1c5a      	adds	r2, r3, #1
 8000c44:	2030      	movs	r0, #48	; 0x30
 8000c46:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000c4a:	4422      	add	r2, r4
 8000c4c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000c50:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000c54:	3302      	adds	r3, #2
 8000c56:	e7c7      	b.n	8000be8 <_printf_common+0x58>
 8000c58:	2301      	movs	r3, #1
 8000c5a:	4622      	mov	r2, r4
 8000c5c:	4649      	mov	r1, r9
 8000c5e:	4638      	mov	r0, r7
 8000c60:	47c0      	blx	r8
 8000c62:	3001      	adds	r0, #1
 8000c64:	d0e6      	beq.n	8000c34 <_printf_common+0xa4>
 8000c66:	3601      	adds	r6, #1
 8000c68:	e7d9      	b.n	8000c1e <_printf_common+0x8e>
	...

08000c6c <_printf_i>:
 8000c6c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000c70:	7e0f      	ldrb	r7, [r1, #24]
 8000c72:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000c74:	2f78      	cmp	r7, #120	; 0x78
 8000c76:	4691      	mov	r9, r2
 8000c78:	4680      	mov	r8, r0
 8000c7a:	460c      	mov	r4, r1
 8000c7c:	469a      	mov	sl, r3
 8000c7e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000c82:	d807      	bhi.n	8000c94 <_printf_i+0x28>
 8000c84:	2f62      	cmp	r7, #98	; 0x62
 8000c86:	d80a      	bhi.n	8000c9e <_printf_i+0x32>
 8000c88:	2f00      	cmp	r7, #0
 8000c8a:	f000 80d4 	beq.w	8000e36 <_printf_i+0x1ca>
 8000c8e:	2f58      	cmp	r7, #88	; 0x58
 8000c90:	f000 80c0 	beq.w	8000e14 <_printf_i+0x1a8>
 8000c94:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000c98:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000c9c:	e03a      	b.n	8000d14 <_printf_i+0xa8>
 8000c9e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000ca2:	2b15      	cmp	r3, #21
 8000ca4:	d8f6      	bhi.n	8000c94 <_printf_i+0x28>
 8000ca6:	a101      	add	r1, pc, #4	; (adr r1, 8000cac <_printf_i+0x40>)
 8000ca8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000cac:	08000d05 	.word	0x08000d05
 8000cb0:	08000d19 	.word	0x08000d19
 8000cb4:	08000c95 	.word	0x08000c95
 8000cb8:	08000c95 	.word	0x08000c95
 8000cbc:	08000c95 	.word	0x08000c95
 8000cc0:	08000c95 	.word	0x08000c95
 8000cc4:	08000d19 	.word	0x08000d19
 8000cc8:	08000c95 	.word	0x08000c95
 8000ccc:	08000c95 	.word	0x08000c95
 8000cd0:	08000c95 	.word	0x08000c95
 8000cd4:	08000c95 	.word	0x08000c95
 8000cd8:	08000e1d 	.word	0x08000e1d
 8000cdc:	08000d45 	.word	0x08000d45
 8000ce0:	08000dd7 	.word	0x08000dd7
 8000ce4:	08000c95 	.word	0x08000c95
 8000ce8:	08000c95 	.word	0x08000c95
 8000cec:	08000e3f 	.word	0x08000e3f
 8000cf0:	08000c95 	.word	0x08000c95
 8000cf4:	08000d45 	.word	0x08000d45
 8000cf8:	08000c95 	.word	0x08000c95
 8000cfc:	08000c95 	.word	0x08000c95
 8000d00:	08000ddf 	.word	0x08000ddf
 8000d04:	682b      	ldr	r3, [r5, #0]
 8000d06:	1d1a      	adds	r2, r3, #4
 8000d08:	681b      	ldr	r3, [r3, #0]
 8000d0a:	602a      	str	r2, [r5, #0]
 8000d0c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000d10:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000d14:	2301      	movs	r3, #1
 8000d16:	e09f      	b.n	8000e58 <_printf_i+0x1ec>
 8000d18:	6820      	ldr	r0, [r4, #0]
 8000d1a:	682b      	ldr	r3, [r5, #0]
 8000d1c:	0607      	lsls	r7, r0, #24
 8000d1e:	f103 0104 	add.w	r1, r3, #4
 8000d22:	6029      	str	r1, [r5, #0]
 8000d24:	d501      	bpl.n	8000d2a <_printf_i+0xbe>
 8000d26:	681e      	ldr	r6, [r3, #0]
 8000d28:	e003      	b.n	8000d32 <_printf_i+0xc6>
 8000d2a:	0646      	lsls	r6, r0, #25
 8000d2c:	d5fb      	bpl.n	8000d26 <_printf_i+0xba>
 8000d2e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000d32:	2e00      	cmp	r6, #0
 8000d34:	da03      	bge.n	8000d3e <_printf_i+0xd2>
 8000d36:	232d      	movs	r3, #45	; 0x2d
 8000d38:	4276      	negs	r6, r6
 8000d3a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000d3e:	485a      	ldr	r0, [pc, #360]	; (8000ea8 <_printf_i+0x23c>)
 8000d40:	230a      	movs	r3, #10
 8000d42:	e012      	b.n	8000d6a <_printf_i+0xfe>
 8000d44:	682b      	ldr	r3, [r5, #0]
 8000d46:	6820      	ldr	r0, [r4, #0]
 8000d48:	1d19      	adds	r1, r3, #4
 8000d4a:	6029      	str	r1, [r5, #0]
 8000d4c:	0605      	lsls	r5, r0, #24
 8000d4e:	d501      	bpl.n	8000d54 <_printf_i+0xe8>
 8000d50:	681e      	ldr	r6, [r3, #0]
 8000d52:	e002      	b.n	8000d5a <_printf_i+0xee>
 8000d54:	0641      	lsls	r1, r0, #25
 8000d56:	d5fb      	bpl.n	8000d50 <_printf_i+0xe4>
 8000d58:	881e      	ldrh	r6, [r3, #0]
 8000d5a:	4853      	ldr	r0, [pc, #332]	; (8000ea8 <_printf_i+0x23c>)
 8000d5c:	2f6f      	cmp	r7, #111	; 0x6f
 8000d5e:	bf0c      	ite	eq
 8000d60:	2308      	moveq	r3, #8
 8000d62:	230a      	movne	r3, #10
 8000d64:	2100      	movs	r1, #0
 8000d66:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000d6a:	6865      	ldr	r5, [r4, #4]
 8000d6c:	60a5      	str	r5, [r4, #8]
 8000d6e:	2d00      	cmp	r5, #0
 8000d70:	bfa2      	ittt	ge
 8000d72:	6821      	ldrge	r1, [r4, #0]
 8000d74:	f021 0104 	bicge.w	r1, r1, #4
 8000d78:	6021      	strge	r1, [r4, #0]
 8000d7a:	b90e      	cbnz	r6, 8000d80 <_printf_i+0x114>
 8000d7c:	2d00      	cmp	r5, #0
 8000d7e:	d04b      	beq.n	8000e18 <_printf_i+0x1ac>
 8000d80:	4615      	mov	r5, r2
 8000d82:	fbb6 f1f3 	udiv	r1, r6, r3
 8000d86:	fb03 6711 	mls	r7, r3, r1, r6
 8000d8a:	5dc7      	ldrb	r7, [r0, r7]
 8000d8c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000d90:	4637      	mov	r7, r6
 8000d92:	42bb      	cmp	r3, r7
 8000d94:	460e      	mov	r6, r1
 8000d96:	d9f4      	bls.n	8000d82 <_printf_i+0x116>
 8000d98:	2b08      	cmp	r3, #8
 8000d9a:	d10b      	bne.n	8000db4 <_printf_i+0x148>
 8000d9c:	6823      	ldr	r3, [r4, #0]
 8000d9e:	07de      	lsls	r6, r3, #31
 8000da0:	d508      	bpl.n	8000db4 <_printf_i+0x148>
 8000da2:	6923      	ldr	r3, [r4, #16]
 8000da4:	6861      	ldr	r1, [r4, #4]
 8000da6:	4299      	cmp	r1, r3
 8000da8:	bfde      	ittt	le
 8000daa:	2330      	movle	r3, #48	; 0x30
 8000dac:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000db0:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8000db4:	1b52      	subs	r2, r2, r5
 8000db6:	6122      	str	r2, [r4, #16]
 8000db8:	f8cd a000 	str.w	sl, [sp]
 8000dbc:	464b      	mov	r3, r9
 8000dbe:	aa03      	add	r2, sp, #12
 8000dc0:	4621      	mov	r1, r4
 8000dc2:	4640      	mov	r0, r8
 8000dc4:	f7ff fee4 	bl	8000b90 <_printf_common>
 8000dc8:	3001      	adds	r0, #1
 8000dca:	d14a      	bne.n	8000e62 <_printf_i+0x1f6>
 8000dcc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000dd0:	b004      	add	sp, #16
 8000dd2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dd6:	6823      	ldr	r3, [r4, #0]
 8000dd8:	f043 0320 	orr.w	r3, r3, #32
 8000ddc:	6023      	str	r3, [r4, #0]
 8000dde:	4833      	ldr	r0, [pc, #204]	; (8000eac <_printf_i+0x240>)
 8000de0:	2778      	movs	r7, #120	; 0x78
 8000de2:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000de6:	6823      	ldr	r3, [r4, #0]
 8000de8:	6829      	ldr	r1, [r5, #0]
 8000dea:	061f      	lsls	r7, r3, #24
 8000dec:	f851 6b04 	ldr.w	r6, [r1], #4
 8000df0:	d402      	bmi.n	8000df8 <_printf_i+0x18c>
 8000df2:	065f      	lsls	r7, r3, #25
 8000df4:	bf48      	it	mi
 8000df6:	b2b6      	uxthmi	r6, r6
 8000df8:	07df      	lsls	r7, r3, #31
 8000dfa:	bf48      	it	mi
 8000dfc:	f043 0320 	orrmi.w	r3, r3, #32
 8000e00:	6029      	str	r1, [r5, #0]
 8000e02:	bf48      	it	mi
 8000e04:	6023      	strmi	r3, [r4, #0]
 8000e06:	b91e      	cbnz	r6, 8000e10 <_printf_i+0x1a4>
 8000e08:	6823      	ldr	r3, [r4, #0]
 8000e0a:	f023 0320 	bic.w	r3, r3, #32
 8000e0e:	6023      	str	r3, [r4, #0]
 8000e10:	2310      	movs	r3, #16
 8000e12:	e7a7      	b.n	8000d64 <_printf_i+0xf8>
 8000e14:	4824      	ldr	r0, [pc, #144]	; (8000ea8 <_printf_i+0x23c>)
 8000e16:	e7e4      	b.n	8000de2 <_printf_i+0x176>
 8000e18:	4615      	mov	r5, r2
 8000e1a:	e7bd      	b.n	8000d98 <_printf_i+0x12c>
 8000e1c:	682b      	ldr	r3, [r5, #0]
 8000e1e:	6826      	ldr	r6, [r4, #0]
 8000e20:	6961      	ldr	r1, [r4, #20]
 8000e22:	1d18      	adds	r0, r3, #4
 8000e24:	6028      	str	r0, [r5, #0]
 8000e26:	0635      	lsls	r5, r6, #24
 8000e28:	681b      	ldr	r3, [r3, #0]
 8000e2a:	d501      	bpl.n	8000e30 <_printf_i+0x1c4>
 8000e2c:	6019      	str	r1, [r3, #0]
 8000e2e:	e002      	b.n	8000e36 <_printf_i+0x1ca>
 8000e30:	0670      	lsls	r0, r6, #25
 8000e32:	d5fb      	bpl.n	8000e2c <_printf_i+0x1c0>
 8000e34:	8019      	strh	r1, [r3, #0]
 8000e36:	2300      	movs	r3, #0
 8000e38:	6123      	str	r3, [r4, #16]
 8000e3a:	4615      	mov	r5, r2
 8000e3c:	e7bc      	b.n	8000db8 <_printf_i+0x14c>
 8000e3e:	682b      	ldr	r3, [r5, #0]
 8000e40:	1d1a      	adds	r2, r3, #4
 8000e42:	602a      	str	r2, [r5, #0]
 8000e44:	681d      	ldr	r5, [r3, #0]
 8000e46:	6862      	ldr	r2, [r4, #4]
 8000e48:	2100      	movs	r1, #0
 8000e4a:	4628      	mov	r0, r5
 8000e4c:	f7ff f9c8 	bl	80001e0 <memchr>
 8000e50:	b108      	cbz	r0, 8000e56 <_printf_i+0x1ea>
 8000e52:	1b40      	subs	r0, r0, r5
 8000e54:	6060      	str	r0, [r4, #4]
 8000e56:	6863      	ldr	r3, [r4, #4]
 8000e58:	6123      	str	r3, [r4, #16]
 8000e5a:	2300      	movs	r3, #0
 8000e5c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000e60:	e7aa      	b.n	8000db8 <_printf_i+0x14c>
 8000e62:	6923      	ldr	r3, [r4, #16]
 8000e64:	462a      	mov	r2, r5
 8000e66:	4649      	mov	r1, r9
 8000e68:	4640      	mov	r0, r8
 8000e6a:	47d0      	blx	sl
 8000e6c:	3001      	adds	r0, #1
 8000e6e:	d0ad      	beq.n	8000dcc <_printf_i+0x160>
 8000e70:	6823      	ldr	r3, [r4, #0]
 8000e72:	079b      	lsls	r3, r3, #30
 8000e74:	d413      	bmi.n	8000e9e <_printf_i+0x232>
 8000e76:	68e0      	ldr	r0, [r4, #12]
 8000e78:	9b03      	ldr	r3, [sp, #12]
 8000e7a:	4298      	cmp	r0, r3
 8000e7c:	bfb8      	it	lt
 8000e7e:	4618      	movlt	r0, r3
 8000e80:	e7a6      	b.n	8000dd0 <_printf_i+0x164>
 8000e82:	2301      	movs	r3, #1
 8000e84:	4632      	mov	r2, r6
 8000e86:	4649      	mov	r1, r9
 8000e88:	4640      	mov	r0, r8
 8000e8a:	47d0      	blx	sl
 8000e8c:	3001      	adds	r0, #1
 8000e8e:	d09d      	beq.n	8000dcc <_printf_i+0x160>
 8000e90:	3501      	adds	r5, #1
 8000e92:	68e3      	ldr	r3, [r4, #12]
 8000e94:	9903      	ldr	r1, [sp, #12]
 8000e96:	1a5b      	subs	r3, r3, r1
 8000e98:	42ab      	cmp	r3, r5
 8000e9a:	dcf2      	bgt.n	8000e82 <_printf_i+0x216>
 8000e9c:	e7eb      	b.n	8000e76 <_printf_i+0x20a>
 8000e9e:	2500      	movs	r5, #0
 8000ea0:	f104 0619 	add.w	r6, r4, #25
 8000ea4:	e7f5      	b.n	8000e92 <_printf_i+0x226>
 8000ea6:	bf00      	nop
 8000ea8:	0800145f 	.word	0x0800145f
 8000eac:	08001470 	.word	0x08001470

08000eb0 <__sflush_r>:
 8000eb0:	898a      	ldrh	r2, [r1, #12]
 8000eb2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000eb6:	4605      	mov	r5, r0
 8000eb8:	0710      	lsls	r0, r2, #28
 8000eba:	460c      	mov	r4, r1
 8000ebc:	d458      	bmi.n	8000f70 <__sflush_r+0xc0>
 8000ebe:	684b      	ldr	r3, [r1, #4]
 8000ec0:	2b00      	cmp	r3, #0
 8000ec2:	dc05      	bgt.n	8000ed0 <__sflush_r+0x20>
 8000ec4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000ec6:	2b00      	cmp	r3, #0
 8000ec8:	dc02      	bgt.n	8000ed0 <__sflush_r+0x20>
 8000eca:	2000      	movs	r0, #0
 8000ecc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000ed0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000ed2:	2e00      	cmp	r6, #0
 8000ed4:	d0f9      	beq.n	8000eca <__sflush_r+0x1a>
 8000ed6:	2300      	movs	r3, #0
 8000ed8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000edc:	682f      	ldr	r7, [r5, #0]
 8000ede:	6a21      	ldr	r1, [r4, #32]
 8000ee0:	602b      	str	r3, [r5, #0]
 8000ee2:	d032      	beq.n	8000f4a <__sflush_r+0x9a>
 8000ee4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000ee6:	89a3      	ldrh	r3, [r4, #12]
 8000ee8:	075a      	lsls	r2, r3, #29
 8000eea:	d505      	bpl.n	8000ef8 <__sflush_r+0x48>
 8000eec:	6863      	ldr	r3, [r4, #4]
 8000eee:	1ac0      	subs	r0, r0, r3
 8000ef0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000ef2:	b10b      	cbz	r3, 8000ef8 <__sflush_r+0x48>
 8000ef4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000ef6:	1ac0      	subs	r0, r0, r3
 8000ef8:	2300      	movs	r3, #0
 8000efa:	4602      	mov	r2, r0
 8000efc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000efe:	6a21      	ldr	r1, [r4, #32]
 8000f00:	4628      	mov	r0, r5
 8000f02:	47b0      	blx	r6
 8000f04:	1c43      	adds	r3, r0, #1
 8000f06:	89a3      	ldrh	r3, [r4, #12]
 8000f08:	d106      	bne.n	8000f18 <__sflush_r+0x68>
 8000f0a:	6829      	ldr	r1, [r5, #0]
 8000f0c:	291d      	cmp	r1, #29
 8000f0e:	d82b      	bhi.n	8000f68 <__sflush_r+0xb8>
 8000f10:	4a29      	ldr	r2, [pc, #164]	; (8000fb8 <__sflush_r+0x108>)
 8000f12:	410a      	asrs	r2, r1
 8000f14:	07d6      	lsls	r6, r2, #31
 8000f16:	d427      	bmi.n	8000f68 <__sflush_r+0xb8>
 8000f18:	2200      	movs	r2, #0
 8000f1a:	6062      	str	r2, [r4, #4]
 8000f1c:	04d9      	lsls	r1, r3, #19
 8000f1e:	6922      	ldr	r2, [r4, #16]
 8000f20:	6022      	str	r2, [r4, #0]
 8000f22:	d504      	bpl.n	8000f2e <__sflush_r+0x7e>
 8000f24:	1c42      	adds	r2, r0, #1
 8000f26:	d101      	bne.n	8000f2c <__sflush_r+0x7c>
 8000f28:	682b      	ldr	r3, [r5, #0]
 8000f2a:	b903      	cbnz	r3, 8000f2e <__sflush_r+0x7e>
 8000f2c:	6560      	str	r0, [r4, #84]	; 0x54
 8000f2e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000f30:	602f      	str	r7, [r5, #0]
 8000f32:	2900      	cmp	r1, #0
 8000f34:	d0c9      	beq.n	8000eca <__sflush_r+0x1a>
 8000f36:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000f3a:	4299      	cmp	r1, r3
 8000f3c:	d002      	beq.n	8000f44 <__sflush_r+0x94>
 8000f3e:	4628      	mov	r0, r5
 8000f40:	f000 fa22 	bl	8001388 <_free_r>
 8000f44:	2000      	movs	r0, #0
 8000f46:	6360      	str	r0, [r4, #52]	; 0x34
 8000f48:	e7c0      	b.n	8000ecc <__sflush_r+0x1c>
 8000f4a:	2301      	movs	r3, #1
 8000f4c:	4628      	mov	r0, r5
 8000f4e:	47b0      	blx	r6
 8000f50:	1c41      	adds	r1, r0, #1
 8000f52:	d1c8      	bne.n	8000ee6 <__sflush_r+0x36>
 8000f54:	682b      	ldr	r3, [r5, #0]
 8000f56:	2b00      	cmp	r3, #0
 8000f58:	d0c5      	beq.n	8000ee6 <__sflush_r+0x36>
 8000f5a:	2b1d      	cmp	r3, #29
 8000f5c:	d001      	beq.n	8000f62 <__sflush_r+0xb2>
 8000f5e:	2b16      	cmp	r3, #22
 8000f60:	d101      	bne.n	8000f66 <__sflush_r+0xb6>
 8000f62:	602f      	str	r7, [r5, #0]
 8000f64:	e7b1      	b.n	8000eca <__sflush_r+0x1a>
 8000f66:	89a3      	ldrh	r3, [r4, #12]
 8000f68:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000f6c:	81a3      	strh	r3, [r4, #12]
 8000f6e:	e7ad      	b.n	8000ecc <__sflush_r+0x1c>
 8000f70:	690f      	ldr	r7, [r1, #16]
 8000f72:	2f00      	cmp	r7, #0
 8000f74:	d0a9      	beq.n	8000eca <__sflush_r+0x1a>
 8000f76:	0793      	lsls	r3, r2, #30
 8000f78:	680e      	ldr	r6, [r1, #0]
 8000f7a:	bf08      	it	eq
 8000f7c:	694b      	ldreq	r3, [r1, #20]
 8000f7e:	600f      	str	r7, [r1, #0]
 8000f80:	bf18      	it	ne
 8000f82:	2300      	movne	r3, #0
 8000f84:	eba6 0807 	sub.w	r8, r6, r7
 8000f88:	608b      	str	r3, [r1, #8]
 8000f8a:	f1b8 0f00 	cmp.w	r8, #0
 8000f8e:	dd9c      	ble.n	8000eca <__sflush_r+0x1a>
 8000f90:	6a21      	ldr	r1, [r4, #32]
 8000f92:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000f94:	4643      	mov	r3, r8
 8000f96:	463a      	mov	r2, r7
 8000f98:	4628      	mov	r0, r5
 8000f9a:	47b0      	blx	r6
 8000f9c:	2800      	cmp	r0, #0
 8000f9e:	dc06      	bgt.n	8000fae <__sflush_r+0xfe>
 8000fa0:	89a3      	ldrh	r3, [r4, #12]
 8000fa2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000fa6:	81a3      	strh	r3, [r4, #12]
 8000fa8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000fac:	e78e      	b.n	8000ecc <__sflush_r+0x1c>
 8000fae:	4407      	add	r7, r0
 8000fb0:	eba8 0800 	sub.w	r8, r8, r0
 8000fb4:	e7e9      	b.n	8000f8a <__sflush_r+0xda>
 8000fb6:	bf00      	nop
 8000fb8:	dfbffffe 	.word	0xdfbffffe

08000fbc <_fflush_r>:
 8000fbc:	b538      	push	{r3, r4, r5, lr}
 8000fbe:	690b      	ldr	r3, [r1, #16]
 8000fc0:	4605      	mov	r5, r0
 8000fc2:	460c      	mov	r4, r1
 8000fc4:	b913      	cbnz	r3, 8000fcc <_fflush_r+0x10>
 8000fc6:	2500      	movs	r5, #0
 8000fc8:	4628      	mov	r0, r5
 8000fca:	bd38      	pop	{r3, r4, r5, pc}
 8000fcc:	b118      	cbz	r0, 8000fd6 <_fflush_r+0x1a>
 8000fce:	6a03      	ldr	r3, [r0, #32]
 8000fd0:	b90b      	cbnz	r3, 8000fd6 <_fflush_r+0x1a>
 8000fd2:	f7ff fb7d 	bl	80006d0 <__sinit>
 8000fd6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000fda:	2b00      	cmp	r3, #0
 8000fdc:	d0f3      	beq.n	8000fc6 <_fflush_r+0xa>
 8000fde:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000fe0:	07d0      	lsls	r0, r2, #31
 8000fe2:	d404      	bmi.n	8000fee <_fflush_r+0x32>
 8000fe4:	0599      	lsls	r1, r3, #22
 8000fe6:	d402      	bmi.n	8000fee <_fflush_r+0x32>
 8000fe8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000fea:	f7ff fbeb 	bl	80007c4 <__retarget_lock_acquire_recursive>
 8000fee:	4628      	mov	r0, r5
 8000ff0:	4621      	mov	r1, r4
 8000ff2:	f7ff ff5d 	bl	8000eb0 <__sflush_r>
 8000ff6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000ff8:	07da      	lsls	r2, r3, #31
 8000ffa:	4605      	mov	r5, r0
 8000ffc:	d4e4      	bmi.n	8000fc8 <_fflush_r+0xc>
 8000ffe:	89a3      	ldrh	r3, [r4, #12]
 8001000:	059b      	lsls	r3, r3, #22
 8001002:	d4e1      	bmi.n	8000fc8 <_fflush_r+0xc>
 8001004:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001006:	f7ff fbde 	bl	80007c6 <__retarget_lock_release_recursive>
 800100a:	e7dd      	b.n	8000fc8 <_fflush_r+0xc>

0800100c <__malloc_lock>:
 800100c:	4801      	ldr	r0, [pc, #4]	; (8001014 <__malloc_lock+0x8>)
 800100e:	f7ff bbd9 	b.w	80007c4 <__retarget_lock_acquire_recursive>
 8001012:	bf00      	nop
 8001014:	200001b8 	.word	0x200001b8

08001018 <__malloc_unlock>:
 8001018:	4801      	ldr	r0, [pc, #4]	; (8001020 <__malloc_unlock+0x8>)
 800101a:	f7ff bbd4 	b.w	80007c6 <__retarget_lock_release_recursive>
 800101e:	bf00      	nop
 8001020:	200001b8 	.word	0x200001b8

08001024 <__sread>:
 8001024:	b510      	push	{r4, lr}
 8001026:	460c      	mov	r4, r1
 8001028:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800102c:	f000 f978 	bl	8001320 <_read_r>
 8001030:	2800      	cmp	r0, #0
 8001032:	bfab      	itete	ge
 8001034:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001036:	89a3      	ldrhlt	r3, [r4, #12]
 8001038:	181b      	addge	r3, r3, r0
 800103a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800103e:	bfac      	ite	ge
 8001040:	6563      	strge	r3, [r4, #84]	; 0x54
 8001042:	81a3      	strhlt	r3, [r4, #12]
 8001044:	bd10      	pop	{r4, pc}

08001046 <__swrite>:
 8001046:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800104a:	461f      	mov	r7, r3
 800104c:	898b      	ldrh	r3, [r1, #12]
 800104e:	05db      	lsls	r3, r3, #23
 8001050:	4605      	mov	r5, r0
 8001052:	460c      	mov	r4, r1
 8001054:	4616      	mov	r6, r2
 8001056:	d505      	bpl.n	8001064 <__swrite+0x1e>
 8001058:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800105c:	2302      	movs	r3, #2
 800105e:	2200      	movs	r2, #0
 8001060:	f000 f94c 	bl	80012fc <_lseek_r>
 8001064:	89a3      	ldrh	r3, [r4, #12]
 8001066:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800106a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800106e:	81a3      	strh	r3, [r4, #12]
 8001070:	4632      	mov	r2, r6
 8001072:	463b      	mov	r3, r7
 8001074:	4628      	mov	r0, r5
 8001076:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800107a:	f000 b973 	b.w	8001364 <_write_r>

0800107e <__sseek>:
 800107e:	b510      	push	{r4, lr}
 8001080:	460c      	mov	r4, r1
 8001082:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001086:	f000 f939 	bl	80012fc <_lseek_r>
 800108a:	1c43      	adds	r3, r0, #1
 800108c:	89a3      	ldrh	r3, [r4, #12]
 800108e:	bf15      	itete	ne
 8001090:	6560      	strne	r0, [r4, #84]	; 0x54
 8001092:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001096:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800109a:	81a3      	strheq	r3, [r4, #12]
 800109c:	bf18      	it	ne
 800109e:	81a3      	strhne	r3, [r4, #12]
 80010a0:	bd10      	pop	{r4, pc}

080010a2 <__sclose>:
 80010a2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80010a6:	f000 b8f7 	b.w	8001298 <_close_r>

080010aa <__swbuf_r>:
 80010aa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80010ac:	460e      	mov	r6, r1
 80010ae:	4614      	mov	r4, r2
 80010b0:	4605      	mov	r5, r0
 80010b2:	b118      	cbz	r0, 80010bc <__swbuf_r+0x12>
 80010b4:	6a03      	ldr	r3, [r0, #32]
 80010b6:	b90b      	cbnz	r3, 80010bc <__swbuf_r+0x12>
 80010b8:	f7ff fb0a 	bl	80006d0 <__sinit>
 80010bc:	69a3      	ldr	r3, [r4, #24]
 80010be:	60a3      	str	r3, [r4, #8]
 80010c0:	89a3      	ldrh	r3, [r4, #12]
 80010c2:	071a      	lsls	r2, r3, #28
 80010c4:	d525      	bpl.n	8001112 <__swbuf_r+0x68>
 80010c6:	6923      	ldr	r3, [r4, #16]
 80010c8:	b31b      	cbz	r3, 8001112 <__swbuf_r+0x68>
 80010ca:	6823      	ldr	r3, [r4, #0]
 80010cc:	6922      	ldr	r2, [r4, #16]
 80010ce:	1a98      	subs	r0, r3, r2
 80010d0:	6963      	ldr	r3, [r4, #20]
 80010d2:	b2f6      	uxtb	r6, r6
 80010d4:	4283      	cmp	r3, r0
 80010d6:	4637      	mov	r7, r6
 80010d8:	dc04      	bgt.n	80010e4 <__swbuf_r+0x3a>
 80010da:	4621      	mov	r1, r4
 80010dc:	4628      	mov	r0, r5
 80010de:	f7ff ff6d 	bl	8000fbc <_fflush_r>
 80010e2:	b9e0      	cbnz	r0, 800111e <__swbuf_r+0x74>
 80010e4:	68a3      	ldr	r3, [r4, #8]
 80010e6:	3b01      	subs	r3, #1
 80010e8:	60a3      	str	r3, [r4, #8]
 80010ea:	6823      	ldr	r3, [r4, #0]
 80010ec:	1c5a      	adds	r2, r3, #1
 80010ee:	6022      	str	r2, [r4, #0]
 80010f0:	701e      	strb	r6, [r3, #0]
 80010f2:	6962      	ldr	r2, [r4, #20]
 80010f4:	1c43      	adds	r3, r0, #1
 80010f6:	429a      	cmp	r2, r3
 80010f8:	d004      	beq.n	8001104 <__swbuf_r+0x5a>
 80010fa:	89a3      	ldrh	r3, [r4, #12]
 80010fc:	07db      	lsls	r3, r3, #31
 80010fe:	d506      	bpl.n	800110e <__swbuf_r+0x64>
 8001100:	2e0a      	cmp	r6, #10
 8001102:	d104      	bne.n	800110e <__swbuf_r+0x64>
 8001104:	4621      	mov	r1, r4
 8001106:	4628      	mov	r0, r5
 8001108:	f7ff ff58 	bl	8000fbc <_fflush_r>
 800110c:	b938      	cbnz	r0, 800111e <__swbuf_r+0x74>
 800110e:	4638      	mov	r0, r7
 8001110:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001112:	4621      	mov	r1, r4
 8001114:	4628      	mov	r0, r5
 8001116:	f000 f805 	bl	8001124 <__swsetup_r>
 800111a:	2800      	cmp	r0, #0
 800111c:	d0d5      	beq.n	80010ca <__swbuf_r+0x20>
 800111e:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8001122:	e7f4      	b.n	800110e <__swbuf_r+0x64>

08001124 <__swsetup_r>:
 8001124:	b538      	push	{r3, r4, r5, lr}
 8001126:	4b2a      	ldr	r3, [pc, #168]	; (80011d0 <__swsetup_r+0xac>)
 8001128:	4605      	mov	r5, r0
 800112a:	6818      	ldr	r0, [r3, #0]
 800112c:	460c      	mov	r4, r1
 800112e:	b118      	cbz	r0, 8001138 <__swsetup_r+0x14>
 8001130:	6a03      	ldr	r3, [r0, #32]
 8001132:	b90b      	cbnz	r3, 8001138 <__swsetup_r+0x14>
 8001134:	f7ff facc 	bl	80006d0 <__sinit>
 8001138:	89a3      	ldrh	r3, [r4, #12]
 800113a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800113e:	0718      	lsls	r0, r3, #28
 8001140:	d422      	bmi.n	8001188 <__swsetup_r+0x64>
 8001142:	06d9      	lsls	r1, r3, #27
 8001144:	d407      	bmi.n	8001156 <__swsetup_r+0x32>
 8001146:	2309      	movs	r3, #9
 8001148:	602b      	str	r3, [r5, #0]
 800114a:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800114e:	81a3      	strh	r3, [r4, #12]
 8001150:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001154:	e034      	b.n	80011c0 <__swsetup_r+0x9c>
 8001156:	0758      	lsls	r0, r3, #29
 8001158:	d512      	bpl.n	8001180 <__swsetup_r+0x5c>
 800115a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800115c:	b141      	cbz	r1, 8001170 <__swsetup_r+0x4c>
 800115e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001162:	4299      	cmp	r1, r3
 8001164:	d002      	beq.n	800116c <__swsetup_r+0x48>
 8001166:	4628      	mov	r0, r5
 8001168:	f000 f90e 	bl	8001388 <_free_r>
 800116c:	2300      	movs	r3, #0
 800116e:	6363      	str	r3, [r4, #52]	; 0x34
 8001170:	89a3      	ldrh	r3, [r4, #12]
 8001172:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001176:	81a3      	strh	r3, [r4, #12]
 8001178:	2300      	movs	r3, #0
 800117a:	6063      	str	r3, [r4, #4]
 800117c:	6923      	ldr	r3, [r4, #16]
 800117e:	6023      	str	r3, [r4, #0]
 8001180:	89a3      	ldrh	r3, [r4, #12]
 8001182:	f043 0308 	orr.w	r3, r3, #8
 8001186:	81a3      	strh	r3, [r4, #12]
 8001188:	6923      	ldr	r3, [r4, #16]
 800118a:	b94b      	cbnz	r3, 80011a0 <__swsetup_r+0x7c>
 800118c:	89a3      	ldrh	r3, [r4, #12]
 800118e:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001192:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001196:	d003      	beq.n	80011a0 <__swsetup_r+0x7c>
 8001198:	4621      	mov	r1, r4
 800119a:	4628      	mov	r0, r5
 800119c:	f000 f840 	bl	8001220 <__smakebuf_r>
 80011a0:	89a0      	ldrh	r0, [r4, #12]
 80011a2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80011a6:	f010 0301 	ands.w	r3, r0, #1
 80011aa:	d00a      	beq.n	80011c2 <__swsetup_r+0x9e>
 80011ac:	2300      	movs	r3, #0
 80011ae:	60a3      	str	r3, [r4, #8]
 80011b0:	6963      	ldr	r3, [r4, #20]
 80011b2:	425b      	negs	r3, r3
 80011b4:	61a3      	str	r3, [r4, #24]
 80011b6:	6923      	ldr	r3, [r4, #16]
 80011b8:	b943      	cbnz	r3, 80011cc <__swsetup_r+0xa8>
 80011ba:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80011be:	d1c4      	bne.n	800114a <__swsetup_r+0x26>
 80011c0:	bd38      	pop	{r3, r4, r5, pc}
 80011c2:	0781      	lsls	r1, r0, #30
 80011c4:	bf58      	it	pl
 80011c6:	6963      	ldrpl	r3, [r4, #20]
 80011c8:	60a3      	str	r3, [r4, #8]
 80011ca:	e7f4      	b.n	80011b6 <__swsetup_r+0x92>
 80011cc:	2000      	movs	r0, #0
 80011ce:	e7f7      	b.n	80011c0 <__swsetup_r+0x9c>
 80011d0:	20000058 	.word	0x20000058

080011d4 <__swhatbuf_r>:
 80011d4:	b570      	push	{r4, r5, r6, lr}
 80011d6:	460c      	mov	r4, r1
 80011d8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80011dc:	2900      	cmp	r1, #0
 80011de:	b096      	sub	sp, #88	; 0x58
 80011e0:	4615      	mov	r5, r2
 80011e2:	461e      	mov	r6, r3
 80011e4:	da0d      	bge.n	8001202 <__swhatbuf_r+0x2e>
 80011e6:	89a3      	ldrh	r3, [r4, #12]
 80011e8:	f013 0f80 	tst.w	r3, #128	; 0x80
 80011ec:	f04f 0100 	mov.w	r1, #0
 80011f0:	bf0c      	ite	eq
 80011f2:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80011f6:	2340      	movne	r3, #64	; 0x40
 80011f8:	2000      	movs	r0, #0
 80011fa:	6031      	str	r1, [r6, #0]
 80011fc:	602b      	str	r3, [r5, #0]
 80011fe:	b016      	add	sp, #88	; 0x58
 8001200:	bd70      	pop	{r4, r5, r6, pc}
 8001202:	466a      	mov	r2, sp
 8001204:	f000 f858 	bl	80012b8 <_fstat_r>
 8001208:	2800      	cmp	r0, #0
 800120a:	dbec      	blt.n	80011e6 <__swhatbuf_r+0x12>
 800120c:	9901      	ldr	r1, [sp, #4]
 800120e:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8001212:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8001216:	4259      	negs	r1, r3
 8001218:	4159      	adcs	r1, r3
 800121a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800121e:	e7eb      	b.n	80011f8 <__swhatbuf_r+0x24>

08001220 <__smakebuf_r>:
 8001220:	898b      	ldrh	r3, [r1, #12]
 8001222:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001224:	079d      	lsls	r5, r3, #30
 8001226:	4606      	mov	r6, r0
 8001228:	460c      	mov	r4, r1
 800122a:	d507      	bpl.n	800123c <__smakebuf_r+0x1c>
 800122c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001230:	6023      	str	r3, [r4, #0]
 8001232:	6123      	str	r3, [r4, #16]
 8001234:	2301      	movs	r3, #1
 8001236:	6163      	str	r3, [r4, #20]
 8001238:	b002      	add	sp, #8
 800123a:	bd70      	pop	{r4, r5, r6, pc}
 800123c:	ab01      	add	r3, sp, #4
 800123e:	466a      	mov	r2, sp
 8001240:	f7ff ffc8 	bl	80011d4 <__swhatbuf_r>
 8001244:	9900      	ldr	r1, [sp, #0]
 8001246:	4605      	mov	r5, r0
 8001248:	4630      	mov	r0, r6
 800124a:	f7ff fc21 	bl	8000a90 <_malloc_r>
 800124e:	b948      	cbnz	r0, 8001264 <__smakebuf_r+0x44>
 8001250:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001254:	059a      	lsls	r2, r3, #22
 8001256:	d4ef      	bmi.n	8001238 <__smakebuf_r+0x18>
 8001258:	f023 0303 	bic.w	r3, r3, #3
 800125c:	f043 0302 	orr.w	r3, r3, #2
 8001260:	81a3      	strh	r3, [r4, #12]
 8001262:	e7e3      	b.n	800122c <__smakebuf_r+0xc>
 8001264:	89a3      	ldrh	r3, [r4, #12]
 8001266:	6020      	str	r0, [r4, #0]
 8001268:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800126c:	81a3      	strh	r3, [r4, #12]
 800126e:	9b00      	ldr	r3, [sp, #0]
 8001270:	6163      	str	r3, [r4, #20]
 8001272:	9b01      	ldr	r3, [sp, #4]
 8001274:	6120      	str	r0, [r4, #16]
 8001276:	b15b      	cbz	r3, 8001290 <__smakebuf_r+0x70>
 8001278:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800127c:	4630      	mov	r0, r6
 800127e:	f000 f82d 	bl	80012dc <_isatty_r>
 8001282:	b128      	cbz	r0, 8001290 <__smakebuf_r+0x70>
 8001284:	89a3      	ldrh	r3, [r4, #12]
 8001286:	f023 0303 	bic.w	r3, r3, #3
 800128a:	f043 0301 	orr.w	r3, r3, #1
 800128e:	81a3      	strh	r3, [r4, #12]
 8001290:	89a3      	ldrh	r3, [r4, #12]
 8001292:	431d      	orrs	r5, r3
 8001294:	81a5      	strh	r5, [r4, #12]
 8001296:	e7cf      	b.n	8001238 <__smakebuf_r+0x18>

08001298 <_close_r>:
 8001298:	b538      	push	{r3, r4, r5, lr}
 800129a:	4d06      	ldr	r5, [pc, #24]	; (80012b4 <_close_r+0x1c>)
 800129c:	2300      	movs	r3, #0
 800129e:	4604      	mov	r4, r0
 80012a0:	4608      	mov	r0, r1
 80012a2:	602b      	str	r3, [r5, #0]
 80012a4:	f7ff f85b 	bl	800035e <_close>
 80012a8:	1c43      	adds	r3, r0, #1
 80012aa:	d102      	bne.n	80012b2 <_close_r+0x1a>
 80012ac:	682b      	ldr	r3, [r5, #0]
 80012ae:	b103      	cbz	r3, 80012b2 <_close_r+0x1a>
 80012b0:	6023      	str	r3, [r4, #0]
 80012b2:	bd38      	pop	{r3, r4, r5, pc}
 80012b4:	200001c4 	.word	0x200001c4

080012b8 <_fstat_r>:
 80012b8:	b538      	push	{r3, r4, r5, lr}
 80012ba:	4d07      	ldr	r5, [pc, #28]	; (80012d8 <_fstat_r+0x20>)
 80012bc:	2300      	movs	r3, #0
 80012be:	4604      	mov	r4, r0
 80012c0:	4608      	mov	r0, r1
 80012c2:	4611      	mov	r1, r2
 80012c4:	602b      	str	r3, [r5, #0]
 80012c6:	f7ff f856 	bl	8000376 <_fstat>
 80012ca:	1c43      	adds	r3, r0, #1
 80012cc:	d102      	bne.n	80012d4 <_fstat_r+0x1c>
 80012ce:	682b      	ldr	r3, [r5, #0]
 80012d0:	b103      	cbz	r3, 80012d4 <_fstat_r+0x1c>
 80012d2:	6023      	str	r3, [r4, #0]
 80012d4:	bd38      	pop	{r3, r4, r5, pc}
 80012d6:	bf00      	nop
 80012d8:	200001c4 	.word	0x200001c4

080012dc <_isatty_r>:
 80012dc:	b538      	push	{r3, r4, r5, lr}
 80012de:	4d06      	ldr	r5, [pc, #24]	; (80012f8 <_isatty_r+0x1c>)
 80012e0:	2300      	movs	r3, #0
 80012e2:	4604      	mov	r4, r0
 80012e4:	4608      	mov	r0, r1
 80012e6:	602b      	str	r3, [r5, #0]
 80012e8:	f7ff f855 	bl	8000396 <_isatty>
 80012ec:	1c43      	adds	r3, r0, #1
 80012ee:	d102      	bne.n	80012f6 <_isatty_r+0x1a>
 80012f0:	682b      	ldr	r3, [r5, #0]
 80012f2:	b103      	cbz	r3, 80012f6 <_isatty_r+0x1a>
 80012f4:	6023      	str	r3, [r4, #0]
 80012f6:	bd38      	pop	{r3, r4, r5, pc}
 80012f8:	200001c4 	.word	0x200001c4

080012fc <_lseek_r>:
 80012fc:	b538      	push	{r3, r4, r5, lr}
 80012fe:	4d07      	ldr	r5, [pc, #28]	; (800131c <_lseek_r+0x20>)
 8001300:	4604      	mov	r4, r0
 8001302:	4608      	mov	r0, r1
 8001304:	4611      	mov	r1, r2
 8001306:	2200      	movs	r2, #0
 8001308:	602a      	str	r2, [r5, #0]
 800130a:	461a      	mov	r2, r3
 800130c:	f7ff f84e 	bl	80003ac <_lseek>
 8001310:	1c43      	adds	r3, r0, #1
 8001312:	d102      	bne.n	800131a <_lseek_r+0x1e>
 8001314:	682b      	ldr	r3, [r5, #0]
 8001316:	b103      	cbz	r3, 800131a <_lseek_r+0x1e>
 8001318:	6023      	str	r3, [r4, #0]
 800131a:	bd38      	pop	{r3, r4, r5, pc}
 800131c:	200001c4 	.word	0x200001c4

08001320 <_read_r>:
 8001320:	b538      	push	{r3, r4, r5, lr}
 8001322:	4d07      	ldr	r5, [pc, #28]	; (8001340 <_read_r+0x20>)
 8001324:	4604      	mov	r4, r0
 8001326:	4608      	mov	r0, r1
 8001328:	4611      	mov	r1, r2
 800132a:	2200      	movs	r2, #0
 800132c:	602a      	str	r2, [r5, #0]
 800132e:	461a      	mov	r2, r3
 8001330:	f7fe ffdc 	bl	80002ec <_read>
 8001334:	1c43      	adds	r3, r0, #1
 8001336:	d102      	bne.n	800133e <_read_r+0x1e>
 8001338:	682b      	ldr	r3, [r5, #0]
 800133a:	b103      	cbz	r3, 800133e <_read_r+0x1e>
 800133c:	6023      	str	r3, [r4, #0]
 800133e:	bd38      	pop	{r3, r4, r5, pc}
 8001340:	200001c4 	.word	0x200001c4

08001344 <_sbrk_r>:
 8001344:	b538      	push	{r3, r4, r5, lr}
 8001346:	4d06      	ldr	r5, [pc, #24]	; (8001360 <_sbrk_r+0x1c>)
 8001348:	2300      	movs	r3, #0
 800134a:	4604      	mov	r4, r0
 800134c:	4608      	mov	r0, r1
 800134e:	602b      	str	r3, [r5, #0]
 8001350:	f7ff f83a 	bl	80003c8 <_sbrk>
 8001354:	1c43      	adds	r3, r0, #1
 8001356:	d102      	bne.n	800135e <_sbrk_r+0x1a>
 8001358:	682b      	ldr	r3, [r5, #0]
 800135a:	b103      	cbz	r3, 800135e <_sbrk_r+0x1a>
 800135c:	6023      	str	r3, [r4, #0]
 800135e:	bd38      	pop	{r3, r4, r5, pc}
 8001360:	200001c4 	.word	0x200001c4

08001364 <_write_r>:
 8001364:	b538      	push	{r3, r4, r5, lr}
 8001366:	4d07      	ldr	r5, [pc, #28]	; (8001384 <_write_r+0x20>)
 8001368:	4604      	mov	r4, r0
 800136a:	4608      	mov	r0, r1
 800136c:	4611      	mov	r1, r2
 800136e:	2200      	movs	r2, #0
 8001370:	602a      	str	r2, [r5, #0]
 8001372:	461a      	mov	r2, r3
 8001374:	f7fe ffd7 	bl	8000326 <_write>
 8001378:	1c43      	adds	r3, r0, #1
 800137a:	d102      	bne.n	8001382 <_write_r+0x1e>
 800137c:	682b      	ldr	r3, [r5, #0]
 800137e:	b103      	cbz	r3, 8001382 <_write_r+0x1e>
 8001380:	6023      	str	r3, [r4, #0]
 8001382:	bd38      	pop	{r3, r4, r5, pc}
 8001384:	200001c4 	.word	0x200001c4

08001388 <_free_r>:
 8001388:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800138a:	2900      	cmp	r1, #0
 800138c:	d044      	beq.n	8001418 <_free_r+0x90>
 800138e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001392:	9001      	str	r0, [sp, #4]
 8001394:	2b00      	cmp	r3, #0
 8001396:	f1a1 0404 	sub.w	r4, r1, #4
 800139a:	bfb8      	it	lt
 800139c:	18e4      	addlt	r4, r4, r3
 800139e:	f7ff fe35 	bl	800100c <__malloc_lock>
 80013a2:	4a1e      	ldr	r2, [pc, #120]	; (800141c <_free_r+0x94>)
 80013a4:	9801      	ldr	r0, [sp, #4]
 80013a6:	6813      	ldr	r3, [r2, #0]
 80013a8:	b933      	cbnz	r3, 80013b8 <_free_r+0x30>
 80013aa:	6063      	str	r3, [r4, #4]
 80013ac:	6014      	str	r4, [r2, #0]
 80013ae:	b003      	add	sp, #12
 80013b0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80013b4:	f7ff be30 	b.w	8001018 <__malloc_unlock>
 80013b8:	42a3      	cmp	r3, r4
 80013ba:	d908      	bls.n	80013ce <_free_r+0x46>
 80013bc:	6825      	ldr	r5, [r4, #0]
 80013be:	1961      	adds	r1, r4, r5
 80013c0:	428b      	cmp	r3, r1
 80013c2:	bf01      	itttt	eq
 80013c4:	6819      	ldreq	r1, [r3, #0]
 80013c6:	685b      	ldreq	r3, [r3, #4]
 80013c8:	1949      	addeq	r1, r1, r5
 80013ca:	6021      	streq	r1, [r4, #0]
 80013cc:	e7ed      	b.n	80013aa <_free_r+0x22>
 80013ce:	461a      	mov	r2, r3
 80013d0:	685b      	ldr	r3, [r3, #4]
 80013d2:	b10b      	cbz	r3, 80013d8 <_free_r+0x50>
 80013d4:	42a3      	cmp	r3, r4
 80013d6:	d9fa      	bls.n	80013ce <_free_r+0x46>
 80013d8:	6811      	ldr	r1, [r2, #0]
 80013da:	1855      	adds	r5, r2, r1
 80013dc:	42a5      	cmp	r5, r4
 80013de:	d10b      	bne.n	80013f8 <_free_r+0x70>
 80013e0:	6824      	ldr	r4, [r4, #0]
 80013e2:	4421      	add	r1, r4
 80013e4:	1854      	adds	r4, r2, r1
 80013e6:	42a3      	cmp	r3, r4
 80013e8:	6011      	str	r1, [r2, #0]
 80013ea:	d1e0      	bne.n	80013ae <_free_r+0x26>
 80013ec:	681c      	ldr	r4, [r3, #0]
 80013ee:	685b      	ldr	r3, [r3, #4]
 80013f0:	6053      	str	r3, [r2, #4]
 80013f2:	440c      	add	r4, r1
 80013f4:	6014      	str	r4, [r2, #0]
 80013f6:	e7da      	b.n	80013ae <_free_r+0x26>
 80013f8:	d902      	bls.n	8001400 <_free_r+0x78>
 80013fa:	230c      	movs	r3, #12
 80013fc:	6003      	str	r3, [r0, #0]
 80013fe:	e7d6      	b.n	80013ae <_free_r+0x26>
 8001400:	6825      	ldr	r5, [r4, #0]
 8001402:	1961      	adds	r1, r4, r5
 8001404:	428b      	cmp	r3, r1
 8001406:	bf04      	itt	eq
 8001408:	6819      	ldreq	r1, [r3, #0]
 800140a:	685b      	ldreq	r3, [r3, #4]
 800140c:	6063      	str	r3, [r4, #4]
 800140e:	bf04      	itt	eq
 8001410:	1949      	addeq	r1, r1, r5
 8001412:	6021      	streq	r1, [r4, #0]
 8001414:	6054      	str	r4, [r2, #4]
 8001416:	e7ca      	b.n	80013ae <_free_r+0x26>
 8001418:	b003      	add	sp, #12
 800141a:	bd30      	pop	{r4, r5, pc}
 800141c:	200001bc 	.word	0x200001bc

08001420 <_init>:
 8001420:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001422:	bf00      	nop
 8001424:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001426:	bc08      	pop	{r3}
 8001428:	469e      	mov	lr, r3
 800142a:	4770      	bx	lr

0800142c <_fini>:
 800142c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800142e:	bf00      	nop
 8001430:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001432:	bc08      	pop	{r3}
 8001434:	469e      	mov	lr, r3
 8001436:	4770      	bx	lr
